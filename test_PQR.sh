#!/bin/bash
#
# Convenience script for testing the source code, coding 
# conventions and autogenerated documentation.
# 
# (to be deleted before the final pull request)

# Specify tool for executing python
PYTHON_CC=python3

# 1) Build latest changes
$PYTHON_CC setup.py build

# 2) Test if changes break existing PDB related tests
#
#    Specify which tests to run in the list below (here only PDB-related tests are included)
#
echo \
"########################
#### Software Tests #### 
########################"
TESTS=(test_PDB                    \
       test_PDB_Dice               \
       test_PDB_FragmentMapper     \
       test_PDB_KDTree             \
       test_PDBList                \
       test_PDB_MMCIF2Dict         \
       test_PDB_MMCIFParser        \
       test_PDB_parse_pdb_header   \
       test_PDB_Polypetide         \
       test_PDB_ResidueDepth       \
       test_PDB_StructureAlignment \
       test_PDB_Superimposer       \
       test_PDB_vectors            \
       test_PQRParser)

$PYTHON_CC ./Tests/run_tests.py --offline "${TESTS[@]}" 

# 3) Lint check (only in changed files)
#
#    Specify which files to lint in the list below
#
echo \
"##########################
#### Coding Standards #### 
##########################"
DEV_DIR=./Bio/PDB
FILES_TO_LINT=($DEV_DIR/Atom.py             \
               $DEV_DIR/StructureBuilder.py \
               $DEV_DIR/PDBIO.py \
               $DEV_DIR/PDBParser.py \
               $DEV_DIR/PQRParser.py)
flake8 "${FILES_TO_LINT[@]}"
flake8 ./Tests/test_PQRParser.py

# 4) Documentation checks
echo \
"######################################
#### Auto-generated documentation #### 
######################################"
$PYTHON_CC ./Tests/run_tests.py doctest 2>&1 | grep PDB
