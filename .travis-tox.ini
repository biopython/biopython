# This is a configuration file for tox, used to test
# Biopython on various versions of Python etc under
# the Travis Continuous Integration service which is
# configured in the file .travis.yml
#
# By default tox will look for tox.ini, so this file
# will not conflict with any personal tox setup.
#
# You can explicitly use this tox configuration on your
# own machine (via the -c setting), PROVIDED you have
# all the relevant versions of Python installed. e.g.
# specifying a specific target envronment (via -e):
#
# $ pip install tox
# $ tox -c .travis-tox.ini -e py35-nocov
#
# Or with test coverage:
#
# $ pip install tox coverage
# $ tox -c .travis-tox.ini -e py35-cover
#
# Or to run the pep8/flake8 etc Python coding style checks:
#
# $ pip install tox flake8 pydocstyle restructuredtext_lint
# $ tox -c .travis-tox.ini -e style
#
# See the envlist setting for other valid arguments.

[tox]
minversion = 2.0
skipsdist = True
envlist =
    style
    sdist
    bdist_wheel
    api
    {py36,py37,py38,pypy3}-cover
    {py36,py37,py38,pypy3}-nocov

[testenv]
# TODO: Try tox default sdist based install instead:
skip_install = True
sitepackages = True
passenv =
    CI
    TRAVIS
    TRAVIS_*
    TOXENV
    CODECOV_*
    HOME_4_TCOFFEE
whitelist_externals =
    bash
    echo
# Want to avoid overhead of compiling numpy or scipy:
# (But must compile numpy for PyPy right now)
install_command = pip install --only-binary=scipy {opts} {packages}
deps =
    setuptools
    wheel
    py36,py37,py38: numpy
    pypy3: numpy<1.18.0
    #Lines startings xxx: are filtered by the environment.
    #Leaving py36 without any dependencies (except numpy)
    cover: coverage
    cover: codecov
    py37: mmtf-python
    # https://bitbucket.org/rptlab/reportlab/issues/176/incompatibility-with-pillow-600
    py38: reportlab
    py38: pillow==5.4
    py37: psycopg2-binary
    py37: mysql-connector-python-rf
    py37: mysqlclient
    py38: rdflib
    pypy3: mysqlclient
    py37: scipy
    py38: networkx
    py37: matplotlib
commands =
    #The bash call is a work around for special characters
    #The /dev/null is to hide the verbose output but leave warnings
    bash -c \'python setup.py install > /dev/null\'
    #The bash call is a work around for the cd command
    nocov: bash -c \'cd Tests && python run_tests.py --offline\'
    #See https://codecov.io/ and https://github.com/codecov/example-python
    cover: bash -c \'rm -rf Tests/coverage.xml\'
    cover: bash -c \'cd Tests && coverage run run_tests.py --offline && coverage xml\'
    cover: codecov --file Tests/coverage.xml -X pycov -X gcov

[testenv:style]
# This does not need to install Biopython or any of its dependencies
skip_install = True
whitelist_externals =
    flake8
    doc8
    rst-lint
    bash
deps =
    flake8
    flake8-docstrings
    flake8-blind-except
    flake8-rst-docstrings
    flake8-comprehensions
    flake8-bugbear
    flake8-implicit-str-concat
    flake8-black
    flake8-quotes
    restructuredtext_lint
    doc8
    pygments
    # doc8 needs docutils, but docutils==0.15 has an import order bug
    # https://bugs.launchpad.net/doc8/+bug/1837515
    # https://sourceforge.net/p/docutils/bugs/366/
    docutils==0.14
    # pydocstyle v4 had false positives with D413, need v5
    pydocstyle>=5.0.0
commands =
    # PEP-8 and PEP-257 style checks:
    flake8
    # Now do various checks on our RST files:
    # Calling via bash to get it to expand the wildcard for us
    bash -c \'rst-lint --level warning *.rst\'
    # Check sort order (bash call work around for pipe character)
    bash -c \'grep "^- " CONTRIB.rst | LC_ALL=C sort -u -c -f\'
    # Check copyright date
    bash -c \'grep "1999-`date +'%Y'`" LICENSE.rst\'
    # Would like to tell doc8 to just check *.rst but does *.txt too:
    bash -c "doc8 --ignore-path 'Doc/examples/ec_*.txt' 'Doc/doc.rst' *.rst Doc/"
    # Check no __docformat__ lines
    bash -c "if grep --include '*.py' -rn '^__docformat__ ' Bio BioSQL Tests Scripts Doc ; then echo 'Remove __docformat__ line(s), we assume restructuredtext.'; false; fi"
    # Check DOI link style, see https://www.crossref.org/display-guidelines/
    bash -c "if grep --include '*.py' --include '*.rst' --include '*.tex' -rni 'doi:' Bio BioSQL Scripts Doc ; then echo 'Please use https://doi.org/... not the doi: or DOI: style.'; false; fi"
    bash -c "if grep --include '*.py' --include '*.rst' --include '*.tex' -rn 'dx\.doi\.org' Bio BioSQL Tests Scripts Doc ; then echo 'Please use https://doi.org/... not the dx.doi.org style.'; false; fi"
    bash -c "if grep --include '*.py' --include '*.rst' --include '*.tex' -rn 'http://doi\.org' Bio BioSQL Tests Scripts Doc ; then echo 'Please use https://doi.org/... not http://doi.org/...'; false; fi"

[testenv:sdist]
# This does not need to install Biopython or any of its dependencies
skip_install = True
deps =
commands =
    python setup.py sdist --formats=gztar,zip

[testenv:bdist_wheel]
# This should not require NumPy while compiling our C code...
skip_install = True
deps =
commands =
    python setup.py bdist_wheel

[testenv:api]
# Note Sphinx likes to have the code installed so can import it
skip_install = False
whitelist_externals =
    bash
    sphinx-apidoc
    make
deps =
    mmtf-python
    mysql-connector-python-rf
    numpy
    rdflib
    reportlab
    scipy
    sphinx>=1.8.0
    numpydoc==1.0.0
    pygments
    sphinx_rtd_theme
commands =
    bash -c \'python setup.py install > /dev/null\'
    make -C Doc/api/ html
