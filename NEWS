News for the Biopython Project
==============================

This file contains release notes and general news about the Biopython project.
See also the DEPRECATED file which tracks the removal of obsolete modules or
functions, and online http://biopython.org/wiki/News and
http://news.open-bio.org/news/category/obf-projects/biopython/

The latest news is at the top of this file.

===================================================================

(In progress, not released yet) Biopython 1.61

GenomeDiagram has three new sigils (shapes to illustrate features). OCTO shows
an octagonal shape, like the existing BOX sigil but with the corners cut off.
JAGGY shows a box with jagged edges at the start and end, intended for things
like NNNNN regions in draft genomes. Finally BIGARROW is like the existing
ARROW sigil but is drawn straddling the axis. This is useful for drawing
vertically compact figures where you do not have overlapping genes.

New module Bio.Graphics.ColorSpiral can generate colors along a spiral path
through HSV color space. This can be used to make arbitrary 'rainbow' scales,
for example to color features or cross-links on a GenomeDiagram figure.

The Bio.SeqIO module now supports reading sequences from PDB files in two
different ways. The "pdb-atom" format determines the sequence as it appears in
the structure based on the atom coordinate section of the file (via Bio.PDB,
so NumPy is currently required for this). Alternatively, you can use the
"pdb-seqres" format to read the complete protein sequence as it is listed in
the PDB header, if available.

The Bio.SeqUtils module how has a seq1 function to turn a sequence using three
letter amino acid codes into one using the more common one letter codes. This
acts as the inverse of the existing seq3 function.

The multiple-sequence-alignment object used by Bio.AlignIO etc now supports
an annotation dictionary. Additional support for per-column annotation is
planned, with addition and splicing to work like that for the SeqRecord
per-letter annotation.

A new warning, Bio.BiopythonExperimentalWarning, has been introduced. This
marks any experimental code included in the otherwise stable release. Such
'beta' level code is ready for wider testing, but still likely to change and
should only be tried by early adopters to give feedback via the biopython-dev
mailing list. We'd expect such experimental code to reach stable status in
one or two releases time, at which point our normal policies about trying to
preserve backwards compatibility would apply. See also the README file.

This release also includes Bow's Google Summer of Code work writing a unified
parsing framework for NCBI BLAST (assorted formats including tabular and XML),
HMMER, BLAT, and other sequence searching tools. This is currently available
with the new BiopythonExperimentalWarning to indicate that this is still
somewhat experimental. We're bundling it with the main release to get more
public feedback, but with the big warning that the API is likely to change.
In fact, even the current name of Bio.SearchIO may change since unless you
are familiar with BioPerl its purpose isn't immediately clear.

The Bio.Motif module has been updated and reorganized. To allow for a clean
deprecation of the old code, the new motif code is stored in a new module
Bio.motifs, and a PendingDeprecationWarning was added to Bio.Motif.

Additionally there have been other minor bug fixes and more unit tests.

Finally, we are phasing out support for Python 2.5. We will continue support
for at least one further release (Biopython 1.62). This could be extended
given feedback from our users (or if the Jython 2.7 release is delayed, since
the current stable release Jython 2.5 implemented Python 2.5 only). Focusing
on Python 2.6 and 2.7 only will make writing Python 3 compatible code easier.

Many thanks to the Biopython developers and community for making this release
possible, especially the following contributors:

Brandon Invergo
Bryan Lunt (first contribution)
Christian Brueffer (first contribution)
David Cain
Eric Talevich
Grace Yeo (first contribution)
Jeffrey Chang
Jingping Li (first contribution)
Kai Blin (first contribution)
Leighton Pritchard
Lenna Peterson
Lucas Sinclair (first contribution)
Michiel de Hoon
Nick Semenkovich (first contribution)
Peter Cock
Robert Ernst (first contribution)
Tiago Antao
Wibowo 'Bow' Arindrarto

===================================================================

25 June 2012: Biopython 1.60

New module Bio.bgzf supports reading and writing BGZF files (Blocked GNU
Zip Format), a variant of GZIP with efficient random access, most commonly
used as part of the BAM file format. This uses Python's zlib library
internally, and provides a simple interface like Python's gzip library.
Using this the Bio.SeqIO indexing functions now support BGZF compressed
sequence files.

The GenBank/EMBL parser will now give a warning on unrecognised feature
locations and continue parsing (leaving the feature's location as None).
Previously it would abort with an exception, which was often unhelpful.

The Bio.PDB.MMCIFParser is now compiled by default (but is still not
available under Jython, PyPy or Python 3).

The SFF parser in Bio.SeqIO now decodes Roche 454 'universal accession
number' 14 character read names, which encode the timestamp of the run,
the region the read came from, and the location of the well.

In the Phylo module, the "draw" function for plotting tree objects has become
much more flexible, with improved support for matplotlib conventions and new
parameters for specifying branch and taxon labels. Writing in the PhyloXML
format has been updated to more closely match the output of other programs. A
wrapper for the program RAxML has been added under Bio.Phylo.Applications,
alongside the existing wrapper for PhyML.

Additionally there have been other minor bug fixes and more unit tests.

Many thanks to the Biopython developers and community for making this release
possible, especially the following contributors:

Brandon Invergo
Eric Talevich
Jeff Hussmann (first contribution)
John Comeau (first contribution)
Kamil Slowikowski (first contribution)
Kevin Jacobs
Lenna Peterson (first contribution)
Matt Fenwick (first contribution)
Peter Cock
Paul T. Bathen
Wibowo Arindrarto

===================================================================

24 February 2012: Biopython 1.59

Please note that this release will *not* work on Python 2.4 (while the recent
releases have worked despite us not officially supporting this).

The position objects used in Bio.SeqFeature now act almost like integers,
making dealing with fuzzy locations in EMBL/GenBank files much easier. Note as
part of this work, the arguments to create fuzzy positions OneOfPosition and
WithinPosition have changed in a non-backwards compatible way.

The SeqFeature's strand and any database reference are now properties of the
FeatureLocation object (a more logical placement), with proxy methods for
backwards compatibility. As part of this change, if you print a location
object it will now display any strand and database reference information.

The installation setup.py now supports 'install_requires' when setuptools
is installed. This avoids the manual dialog when installing Biopython via
easy_install or pip and numpy is not installed. It also allows user libraries
that require Biopython to include it in their install_requires and get
automatical installation of dependencies.

Bio.Graphics.BasicChromosome has been extended to allow simple sub-features to
be drawn on chromosome segments, suitable to show the position of genes, SNPs
or other loci. Note Bio.Graphics requires the ReportLab library.

Bio.Graphics.GenomeDiagram has been extended to allow cross-links between
tracks, and track specific start/end positions for showing regions. This can
be used to imitate the output from the Artemis Comparison Tool (ACT).
Also, a new attribute circle_core makes it easier to have an empty space in
the middle of a circular diagram (see tutorial).

Bio.Align.Applications now includes a wrapper for command line tool Clustal
Omega for protein multiple sequence alignment.

Bio.AlignIO now supports sequential PHYLIP files (as well as interlaced
PHYLIP files) as a separate format variant.

New module Bio.TogoWS offers a wrapper for the TogoWS REST API, a web service
based in Japan offering access to KEGG, DDBJ, PDBj, CBRC plus access to some
NCBI, EBI resources including PubMed, GenBank and UniProt. This is much easier
to use than the NCBI Entrez API, but should be especially useful for Biopython
users based in Asia.

Bio.Entrez function efetch has been updated to handle the NCBI's stricter
handling of multiple ID arguments in EFetch 2.0, however the NCBI have also
changed the retmode default argument so you may need to make this explicit.
e.g. retmode="text"

Additionally there have been other minor bug fixes and more unit tests.

Many thanks to the Biopython developers and community for making this release
possible, especially the following contributors:

Andreas Wilm (first contribution)
Alessio Papini (first contribution)
Brad Chapman
Brandon Invergo
Connor McCoy
Eric Talevich
João Rodrigues
Konrad Förstner (first contribution)
Michiel de Hoon
Matej Repič (first contribution)
Leighton Pritchard
Peter Cock

===================================================================

18 August 2011: Biopython 1.58

A new interface and parsers for the PAML (Phylogenetic Analysis by Maximum
Likelihood) package of programs, supporting codeml, baseml and yn00 as well
as a Python re-implementation of chi2 was added as the Bio.Phylo.PAML module.

Bio.SeqIO now includes read and write support for the SeqXML, a simple XML
format offering basic annotation support. See Schmitt et al (2011) in
Briefings in Bioinformatics, http://dx.doi.org/10.1093/bib/bbr025

Bio.SeqIO now includes read support for ABI files ("Sanger" capillary
sequencing trace files, containing called sequence with PHRED qualities).

The Bio.AlignIO "fasta-m10" parser was updated to cope with the >>><<< lines
as used in Bill Pearson's FASTA version 3.36, without this fix the parser
would only return alignments for the first query sequence.

The Bio.AlignIO "phylip" parser and writer now treat a dot/period in the
sequence as an error, in line with the official PHYLIP specification. Older
versions of our code didn't do anything special with this character. Also,
support for "phylip-relaxed" has been added which allows longer record names
as used in RAxML and PHYML.

Of potential interest to anyone subclassing Biopython objects, any remaining
"old style" Python classes have been switched to "new style" classes. This
allows things like defining properties.

Bio.HMM's Viterbi algorithm now expects the initial probabilities explicitly.

Many thanks to the Biopython developers and community for making this release
possible, especially the following contributors:

Aaron Gallagher (first contribution)
Bartek Wilczynski
Bogdan T. (first contribution)
Brandon Invergo (first contribution)
Connor McCoy (first contribution)
David Cain (first contribution)
Eric Talevich
Fábio Madeira (first contribution)
Hongbo Zhu
Joao Rodrigues
Michiel de Hoon
Peter Cock
Thomas Schmitt (first contribution)
Tiago Antao
Walter Gillett
Wibowo Arindrarto (first contribution)

===================================================================

2 April 2011: Biopython 1.57

Bio.SeqIO now includes an index_db() function which extends the existing
indexing functionality to allow indexing many files, and more importantly
this keeps the index on disk in a simple SQLite3 database rather than in
memory in a Python dictionary.

Bio.Blast.Applications now includes a wrapper for the BLAST+ blast_formatter
tool from NCBI BLAST 2.2.24+ or later. This release of BLAST+ added the
ability to run the BLAST tools and save the output as ASN.1 format, and then
convert this to any other supported BLAST output format (plain text, tabular,
XML, or HTML) with the blast_formatter tool. The wrappers were also updated
to include new arguments added in BLAST 2.2.25+ such as -db_hard_mask.

The SeqRecord object now has a reverse_complement method (similar to that of
the Seq object). This is most useful to reversing per-letter-annotation (such
as quality scores from FASTQ) or features (such as annotation from GenBank).

Bio.SeqIO.write's QUAL output has been sped up, and Bio.SeqIO.convert now
uses an optimised routine for FASTQ to QUAL making this much faster.

Biopython can now be installed with pip. Thanks to David Koppstein and 
James Casbon for reporting the problem.

Bio.SeqIO.write now uses lower case for the sequence for GenBank, EMBL and
IMGT output.

The Bio.PDB module received several fixes and improvements, including starting 
to merge João's work from GSoC 2010; consequently Atom objects now know
their element type and IUPAC mass. (The new features that use these
attributes won't be included in Biopython until the next release, though, so
stay tuned.)

The nodetype hierarchy in the Bio.SCOP.Cla.Record class is now a dictionary
(previously it was a list of key,value tuples) to better match the standard.

Many thanks to the Biopython developers and community for making this release
possible, especially the following contributors:

Brad Chapman
Eric Talevich
Erick Matsen (first contribution)
Hongbo Zhu
Jeffrey Finkelstein (first contribution)
Joanna & Dominik Kasprzak (first contribution)
Joao Rodrigues
Kristian Rother
Leighton Pritchard
Michiel de Hoon
Peter Cock
Peter Thorpe (first contribution)
Phillip Garland
Walter Gillett (first contribution)

===================================================================

26 November 2010: Biopython 1.56 released.

This is planned to be our last release to support Python 2.4, however this
could be delayed given immediate feedback from our users (e.g. if this proves
to be a problem in combination with other libraries or a popular Linux
distribution).

Bio.SeqIO can now read and index UniProt XML files (under format name
"uniprot-xml", which was agreed with EMBOSS and BioPerl for when/if they
support it too).

Bio.SeqIO can now read, write and index IMGT files. These are a variant of
the EMBL sequence text file format with longer feature indentation.

Bio.SeqIO now supports protein EMBL files (used in the EMBL patents database
file epo_prt.dat) - previously we only expected nucleotide EMBL files.

The Bio.Seq translation methods and function will now accept an arbitrary
CodonTable object (for those of you working on very unusual organisms).

The SeqFeature object now supports len(feature) giving the length consistent
with the existing extract method. Also, it now supports iteration giving the
coordinate (with respect to the parent sequence) of each letter within the
feature (in frame aware order), and "in" which allows you to check if a
(parent based) coordinate is within the feature location.

Bio.Entrez will now try to download any missing NCBI DTD files and cache them
in the user's home directory.

The provisional database schema for BioSQL support on SQLite which Biopython
has been using since Release 1.53 has now been added to BioSQL, and updated
slightly.

Bio.PopGen.FDist now supports the DFDist command line tool as well as FDist2.

Bio.Motif now has a chapter in the Tutorial.

(At least) 13 people have contributed to this release, including 6 new people:

Andrea Pierleoni (first contribution)
Bart de Koning (first contribution)
Bartek Wilczynski
Bartosz Telenczuk (first contribution)
Cymon Cox
Eric Talevich
Frank Kauff
Michiel de Hoon
Peter Cock
Phillip Garland (first contribution)
Siong Kong (first contribution)
Tiago Antao
Uri Laserson (first contribution)

===================================================================

31 August 2010: Biopython 1.55 released.

See the notes below for the Biopython 1.55 beta release for changes since
Biopython 1.54 was released. Since the beta release we have marked a few
modules as obsolete or deprecated, and removed some deprecated code. There
have also been a few bug fixes, extra unit tests, and documentation
improvements.

(At least) 12 people have contributed to this release, including 6 new people:

Andres Colubri (first contribution)
Carlos Rios Vera (first contribution)
Claude Paroz (first contribution)
Cymon Cox
Eric Talevich
Frank Kauff
Joao Rodrigues (first contribution)
Konstantin Okonechnikov (first contribution)
Michiel de Hoon
Nathan Edwards (first contribution)
Peter Cock
Tiago Antao

===================================================================

18 August 2010: Biopython 1.55 beta released.

This is a beta release for testing purposes, both for new features added,
and more importantly updates to avoid code deprecated in Python 2.7 or in
Python 3. This is an important step towards Python 3 support.

We are phasing out support for Python 2.4. We will continue to support it
for at least one further release (Biopython 1.56). This could be delayed
given feedback from our users (e.g. if this proves to be a problem in
combination with other libraries or a popular Linux distribution).

The SeqRecord object now has upper and lower methods (like the Seq object and
Python strings), which return a new SeqRecord with the sequence in upper or
lower case and a copy of all the annotation unchanged.

Several small issues with Bio.PDB have been resolved, which includes better
handling of model numbers, and files missing the element column.

Feature location parsing for GenBank and EMBL files has been rewritten,
making the parser much faster.

Ace parsing by SeqIO now uses zero rather than None for the quality score of
any gaps (insertions) in the contig sequence.

The BioSQL classes DBServer and BioSeqDatabase now act more like Python
dictionaries, making it easier to count, delete, iterate over, or check for
membership of namespaces and records.

The command line tool application wrapper classes are now executable, so you
can use them to call the tool (using the subprocess module internally) and
capture the output and any error messages as strings (stdout and stderr).
This avoids having to worry about the details of how best to use subprocess.

(At least) 10 people have contributed to this release, including 5 new people:

Andres Colubri (first contribution)
Carlos Rios Vera (first contribution)
Claude Paroz (first contribution)
Eric Talevich
Frank Kauff
Joao Rodrigues (first contribution)
Konstantin Okonechnikov (first contribution)
Michiel de Hoon
Peter Cock
Tiago Antao

===================================================================

May 20, 2010: Biopython 1.54 released.

See the notes below for the Biopython 1.54 beta release for changes since
Biopython 1.53 was released. Since then there have been some changes to
the new Bio.Phylo module, more documentation, and a number of smaller
bug fixes.

===================================================================

April 2, 2010: Biopython 1.54 beta released.

We are phasing out support for Python 2.4. We will continue to support it
for at least two further releases, and at least one year (whichever takes
longer), before dropping support for Python 2.4. This could be delayed
given feedback from our users (e.g. if this proves to be a problem in
combination with other libraries or a popular Linux distribution).

New module Bio.Phylo includes support for reading, writing and working with
phylogenetic trees from Newick, Nexus and phyloXML files. This was work by
Eric Talevich on a Google Summer of Code 2009 project, under The National
Evolutionary Synthesis Center (NESCent), mentored by Brad Chapman and
Christian Zmasek.

Bio.Entrez includes some more DTD files, in particular eLink_090910.dtd,
needed for our NCBI Entrez Utilities XML parser.

The parse, read and write functions in Bio.SeqIO and Bio.AlignIO will now
accept filenames as well as handles. This follows a general shift from
other Python libraries, and does make usage a little simpler. Also
the write functions will now accept a single SeqRecord or alignment.

Bio.SeqIO now supports writing EMBL files (DNA and RNA sequences only).

The dictionary-like objects from Bio.SeqIO.index() now support a get_raw
method for most file formats, giving you the original unparsed data from the
file as a string. This is useful for selecting a subset of records from a
file where Bio.SeqIO.write() does not support the file format (e.g. the
"swiss" format) or where you need to exactly preserve the original layout.

Based on code from Jose Blanca (author of sff_extract), Bio.SeqIO now
supports reading, indexing and writing Standard Flowgram Format (SFF)
files which are used by 454 Life Sciences (Roche) sequencers. This means
you can use SeqIO to convert from SFF to FASTQ, FASTA and QUAL (as
trimmed or untrimmed reads).

An improved multiple sequence alignment object has been introduced,
and is used by Bio.AlignIO for input. This is a little stricter than the
old class but should otherwise be backwards compatible.

(At least) 11 people contributed to this release, including 5 new people:

Anne Pajon (first contribution)
Brad Chapman
Christian Zmasek
Diana Jaunzeikare (first contribution)
Eric Talevich
Jose Blanca (first contribution)
Kevin Jacobs (first contribution)
Leighton Pritchard
Michiel de Hoon
Peter Cock
Thomas Holder (first contribution)

===================================================================

December 15, 2009: Biopython 1.53 released.

Biopython is now using git for source code control, currently on github. Our
old CVS repository will remain on the OBF servers in the short/medium term
as a backup, but will not be updated in future.

The Bio.Blast.Applications wrappers now covers the new NCBI BLAST C++ tools
(where blastall is replaced by blastp, blastn, etc, and the command line
switches have all been renamed). These will be replacing the old wrappers in
Bio.Blast.NCBIStandalone which are now obsolete, and will be deprecated in
our next release.

The plain text BLAST parser has been updated, and should cope with recent
versions of NCBI BLAST, including the new C++ based version. Nevertheless,
we (and the NCBI) still recommend using the XML output for parsing.

The Seq (and related UnknownSeq) objects gained upper and lower methods,
like the string methods of the same name but alphabet aware. The Seq object
also gained a new ungap method for removing gap characters in an alphabet
aware manner.

The SeqFeature object now has an extract method, used with the parent
sequence (as a string or Seq object) to get the region of that sequence
described by the feature's location information (including the strand and
any sub-features for a join). As an example, this is useful to get the
nucleotide sequence for features in GenBank or EMBL files.

SeqRecord objects now support addition, giving a new SeqRecord with the
combined sequence, all the SeqFeatures, and any common annotation.

Bio.Entrez includes the new (Jan 2010) DTD files from the NCBI for parsing
MedLine/PubMed data.

The NCBI codon tables have been updated from version 3.4 to 3.9, which adds
a few extra start codons, and a few new tables (Tables 16, 21, 22 and 23).
Note that Table 14 which used to be called "Flatworm Mitochondrial" is now
called "Alternative Flatworm Mitochondrial", and "Flatworm Mitochondrial" is
now an alias for Table 9 ("Echinoderm Mitochondrial").

The restriction enzyme list in Bio.Restriction has been updated to the
Nov 2009 release of REBASE.

The Bio.PDB parser and output code has been updated to understand the
element column in ATOM and HETATM lines (based on patches contributed by
Hongbo Zhu and Frederik Gwinner). Bio.PDB.PDBList has also been updated
for recent changes to the PDB FTP site (Paul T. Bathen).

SQLite support was added for BioSQL databases (Brad Chapman), allowing access
to BioSQL through a lightweight embedded SQL engine. Python 2.5+ includes
support for SQLite built in, but on Python 2.4 the optional sqlite3 library
must be installed to use this. We currently use a draft BioSQL on SQLite
schema, which will be merged with the main BioSQL release for use in other
projects.

Support for running Biopython under Jython (using the Java Virtual Machine)
has been much improved thanks to input from Kyle Ellrott. Note that Jython
does not support C code - this means NumPy isn't available, and nor are a
selection of Biopython modules (including Bio.Cluster, Bio.PDB and BioSQL).
Also, currently Jython does not parse DTD files, which means the XML parser
in Bio.Entrez won't work. However, most of the Biopython modules seem fine
from testing Jython 2.5.0 and 2.5.1.

(At least) 12 people contributed to this release, including 3 first timers:

Bartek Wilczynski
Brad Chapman
Chris Lasher
Cymon Cox
Frank Kauff
Frederik Gwinner (first contribution)
Hongbo Zhu (first contribution)
Kyle Ellrott
Leighton Pritchard
Michiel de Hoon
Paul Bathen (first contribution)
Peter Cock

===================================================================

September 22, 2009: Biopython 1.52 released.

The Population Genetics module now allows the calculation of several tests,
and statistical estimators via a wrapper to GenePop. Supported are tests for
Hardy-Weinberg equilibrium, linkage disequilibrium and estimates for various
F statistics (Cockerham and Wier Fst and Fis, Robertson and Hill Fis, etc),
null allele frequencies and number of migrants among many others. Isolation
By Distance (IBD) functionality is also supported.

New helper functions Bio.SeqIO.convert() and Bio.AlignIO.convert() allow an
easier way to use Biopython for simple file format conversions. Additionally,
these new functions allow Biopython to offer important file format specific
optimisations (e.g. FASTQ to FASTA, and interconverting FASTQ variants).

New function Bio.SeqIO.index() allows indexing of most sequence file formats
(but not alignment file formats), allowing dictionary like random access to
all the entries in the file as SeqRecord objects, keyed on the record id.
This is especially useful for very large sequencing files, where all the
records cannot be held in memory at once. This supplements the more flexible
but memory demanding Bio.SeqIO.to_dict() function.

Bio.SeqIO can now write "phd" format files (used by PHRED, PHRAD and CONSED),
allowing interconversion with FASTQ files, or FASTA+QUAL files.

Bio.Emboss.Applications now includes wrappers for the "new" PHYLIP EMBASSY
package (e.g. fneighbor) which replace the "old" PHYLIP EMBASSY package (e.g.
eneighbor) whose Biopython wrappers are now obsolete.

See also the DEPRECATED file, as several old deprecated modules have finally
been removed (e.g. Bio.EUtils which had been replaced by Bio.Entrez).

On a technical note, this will be the last release using CVS for source code
control. Biopython is moving from CVS to git.

===================================================================

August 17, 2009: Biopython 1.51 released.

FASTQ support in Bio.SeqIO has been improved, extended and sped up since
Biopython 1.50. Support for Illumina 1.3+ style FASTQ files was added in the
1.51 beta release. Furthermore, we now follow the interpretation agreed on
the OBF mailing lists with EMBOSS, BioPerl, BioJava and BioRuby for inter-
conversion and the valid score range for each FASTQ variant. This means
Solexa FASTQ scores can be from -5 to 62 (format name "fastq-solexa" in
Bio.SeqIO), Illumina 1.3+ FASTQ files have PHRED scores from 0 to 62 (format
name "fastq-illumina"), and Sanger FASTQ files have PHRED scores from 0 to
93 (format name "fastq" or "fastq-sanger").

Bio.Sequencing.Phd has been updated, for example to cope with missing peak
positions. The "phd" support in Bio.SeqIO has also been updated to record
the PHRED qualities (and peak positions) in the SeqRecord's per-letter
annotation. This allows conversion of PHD files into FASTQ or QUAL which may
be useful for meta-assembly.

See the notes below for the Biopython 1.50 beta release for changes since
Biopython 1.49 was released. This includes dropping support for Python 2.3,
removing our deprecated parsing infrastructure (Martel and Bio.Mindy), and
hence removing any dependence on mxTextTools.

Additionally, since the beta, a number of small bugs have been fixed, and
there have been further additions to the test suite and documentation.

===================================================================

June 23, 2009: Biopython 1.51 beta released.

Biopython no longer supports Python 2.3.  Currently we support Python 2.4,
2.5 and 2.6.

Our deprecated parsing infrastructure (Martel and Bio.Mindy) has been
removed.  This means Biopython no longer has any dependence on mxTextTools.

A few cosmetic issues in GenomeDiagram with arrow sigils and labels on
circular diagrams have been fixed.

Bio.SeqIO will now write GenBank files with the feature table (previously
omitted), and a couple of obscure errors parsing ambiguous locations have
been fixed.

Bio.SeqIO can now read and write Illumina 1.3+ style FASTQ files (which use
PHRED quality scores with an ASCII offset of 64) under the format name
"fastq-illumina". Biopython 1.50 supported just "fastq" (the original Sanger
style FASTQ files using PHRED scores with an ASCII offset of 33), and
"fastq-solexa" (the original Solexa/Illumina FASTQ format variant holding
Solexa scores with an ASCII offset of 64) .

For parsing the "swiss" format, Bio.SeqIO now uses the new Bio.SwissProt
parser, making it about twice as fast as in Biopython 1.50, where the older
now deprecated Bio.SwissProt.SProt was used. There should be no functional
differences as a result of this change.

Our command line wrapper objects have been updated to support accessing
parameters via python properties, and setting of parameters at initiation
with keyword arguments.  Additionally Cymon Cox has contributed several new
multiple alignment wrappers under Bio.Align.Applications.

A few more issues with Biopython's BioSQL support have been fixed (mostly by
Cymon Cox). In particular, the default PostgreSQL schema includes some rules
intended for BioPerl support only, which were causing problems in Biopython
(see BioSQL bug 2839).

There have also been additions to the tutorial, such as the new alignment
wrappers, with a whole chapter for the SeqRecord object. We have also added
to the unit test coverage.

===================================================================

April 20, 2009: Biopython 1.50 released.

See the notes below for the Biopython 1.50 beta release for more details,
but the highlights are:
* The SeqRecord supports slicing and per-letter-annotation
* Bio.SeqIO can read and write FASTQ and QUAL files
* Bio.Seq now has an UnknownSeq object
* GenomeDiagram has been integrated into Biopython
* New module Bio.Motif will later replace Bio.AlignAce and Bio.MEME
* This will be the final release to support Python 2.3
* This will be the final release with Martel and Bio.Mindy

Since the 1.50 beta release:
* The NCBI's Entrez EFetch no longer supports rettype="genbank"
  and "gb" (or "gp") should be used instead.
* Bio.SeqIO now supports "gb" as an alias for "genbank".
* The Seq object now has string-like startswith and endswith methods
* Bio.Blast.NCBIXML now has a read function for single record files
* A few more unit tests were added
* More documentation

===================================================================

April 3, 2009: Biopython 1.50 beta released.

The SeqRecord object has a new dictionary attribute, letter_annotations,
which is for holding per-letter-annotation information like sequence
quality scores or secondary structure predictions.  As part of this work,
the SeqRecord object can now be sliced to give a new SeqRecord covering
just part of the sequence.  This will slice the per-letter-annotation to
match, and will also include any SeqFeature objects as appropriate.

Bio.SeqIO can now read and write FASTQ and QUAL quality files using PHRED
quality scores (Sanger style, also used for Roche 454 sequencing), and FASTQ
files using Solexa/Illumina quality scores.

The Bio.Seq module now has an UnknownSeq object, used for when we have a
sequence of known length, but unknown content.  This is used in parsing
GenBank and EMBL files where the sequence may not be present (e.g. for a
contig record) and when parsing QUAL files (which don't have the sequence)

GenomeDiagram by Leighton Pritchard has been integrated into Biopython as
the Bio.Graphics.GenomeDiagram module  If you use this code, please cite the
publication Pritchard et al. (2006), Bioinformatics 22 616-617.  Note that
like Bio.Graphics, this requires the ReportLab python library.

A new module Bio.Motif has been added, which is intended to replace the
existing Bio.AlignAce and Bio.MEME modules.

The set of NCBI DTD files included with Bio.Entrez has been updated with the
revised files the NCBI introduced on 1 Jan 2009.

Minor fix to BioSQL for retrieving references and comments.

Bio.SwissProt has a new faster parser which will be replacing the older
slower code in Bio.SwissProt.SProt (which we expect to deprecate in the next
release).

We've also made some changes to our test framework, which is now given a
whole chapter in the tutorial.  This intended to help new developers or
contributors wanting to improve our unit test coverage.

===================================================================

November 21, 2008: Biopython 1.49 released.

See the notes below for the Biopython 1.49 beta release for more details,
but the highlights are:
* Biopython has transitioned from Numeric to NumPy
* Martel and Bio.Mindy are now deprecated

Since the 1.49 beta release:
* A couple of NumPy issues have been resolved
* Further small improvements to BioSQL
* Bio.PopGen.SimCoal should now work on Windows
* A few more unit tests were added

===================================================================

November 7, 2008: Biopython 1.49 beta released.

Biopython has transitioned from Numeric to NumPy.  Please move to NumPy.

A number of small changes have been made to support Python 2.6 (mostly
avoiding deprecated functionality), and further small changes have been
made for better compatibility with Python 3 (this work is still ongoing).
However, we intend to support Python 2.3 for only a couple more releases.

As part of the Numeric to NumPy migration, Bio.KDTree has been rewritten in
C instead of C++ which therefore simplifies building Biopython from source.

Martel and Bio.Mindy are now considered to be deprecated, meaning mxTextTools
is no longer required to use Biopython.  See the DEPRECATED file for details
of other deprecations.

The Seq object now supports more string like methods (gaining find, rfind,
split, rsplit, strip, lstrip and rstrip in addition to previously supported
methods like count).  Also, biological methods transcribe, back_transcribe
and translate have been added, joining the pre-existing reverse_complement
and complement methods.  Together these changes allow a more object
orientated programming style using the Seq object.

The behaviour of the Bio.Seq module's translate function has changed so that
ambiguous codons which could be a stop codon like "TAN" or "NNN" are now
translated as "X" (consistent with EMBOSS and BioPerl - Biopython previously
raised an exception), and a bug was fixed so that invalid codons (like "A-T")
now raise an exception (previously these were translated as stop codons).

BioSQL had a few bugs fixed, and can now optionally fetch the NCBI taxonomy
on demand when loading sequences (via Bio.Entrez) allowing you to populate
the taxon/taxon_name tables gradually.  This has been tested in combination
with the BioSQL load_ncbi_taxonomy.pl script used to populate or update the
taxon/taxon_name tables.  BioSQL should also now work with the psycopg2
driver for PostgreSQL as well as the older psycopg driver.

The PDB and PopGen sections of the Tutorial have been promoted to full
chapters, and a new chapter has been added on supervised learning methods
like logistic regression.  The "Cookbook" section now has a few graphical
examples using Biopython to calculate sequence properties, and matplotlib
(pylab) to plot them.

The input functions in Bio.SeqIO and Bio.AlignIO now accept an optional
argument to specify the expected sequence alphabet.

The somewhat quirky unit test GUI has been removed, the unit tests are now
run via the command line by default.

===================================================================

September 8, 2008: Biopython 1.48 released.

The SeqRecord and Alignment objects have a new method to format the object as
a string in a requested file format (handled via Bio.SeqIO and Bio.AlignIO).

Additional file formats supported in Bio.SeqIO and Bio.AlignIO:
- reading and writing "tab" format (simple tab separated)
- writing "nexus" files.
- reading "pir" files (NBRF/PIR)
- basic support for writing "genbank" files (GenBank plain text)

Fixed some problems reading Clustal alignments (introduced in Biopython 1.46
when consolidating Bio.AlignIO and Bio.Clustalw).

Updates to the Bio.Sequencing parsers.

Bio.PubMed and the online code in Bio.GenBank are now considered obsolete,
and we intend to deprecate them after the next release. For accessing PubMed
and GenBank, please use Bio.Entrez instead.

Bio.Fasta is now considered to be obsolete, please use Bio.SeqIO instead. We
do intend to deprecate this module eventually, however, for several years
this was the primary FASTA parsing module in Biopython and is likely to be in
use in many existing scripts.

Martel and Bio.Mindy are now considered to be obsolete, and are likely to be
deprecated and removed in a future release.

In addition a number of other modules have been deprecated, including:
Bio.MetaTool, Bio.EUtils, Bio.Saf, Bio.NBRF, and Bio.IntelliGenetics
See the DEPRECATED file for full details.

===================================================================

July 5, 2008: Biopython 1.47 released.

Improved handling of ambiguous nucleotides in Bio.Seq.Translate().
Better handling of stop codons in the alphabet from a translation.
Fixed some codon tables (problem introduced in Biopython 1.46).

Updated Nexus file handling.

Fixed a bug in Bio.Cluster potentially causing segfaults in the
single-linkage hierarchical clustering library.

Added some DTDs to be able to parse EFetch results from the
nucleotide database.

Added IntelliGenetics/MASE parsing to Bio.SeqIO (as the "ig" format).

===================================================================

June 29, 2008: Biopython 1.46 released.

Bio.Entrez now has several Entrez format XML parsers, and a chapter
in the tutorial.

Addition of new Bio.AlignIO module for working with sequence alignments
in the style introduced with Bio.SeqIO in recent releases, with a whole
chapter in the tutorial.

A problem parsing certain EMBL files was fixed.

Several minor fixes were made to the NCBI BLAST XML parser, including
support for the online version 2.2.18+ introduced in May 2008.

The NCBIWWW.qblast() function now allows other programs (blastx, tblastn,
tblastx) in addition to just blastn and blastp.

Bio.EUtils has been updated to explicitly enforce the NCBI's rule of at
most one query every 3 seconds, rather than assuming the user would obey
this.

Iterators in Bio.Medline, Bio.SCOP, Bio.Prosite, Bio.Prosite.Prodoc,
Bio.SwissProt, and others to make them more generally usable.

Phylip export added to Bio.Nexus.

Improved handling of ambiguous nucleotides and stop codons in
Bio.Seq.Translate (plus introduced a regression fixed in Biopython 1.47).

===================================================================

March 22, 2008: Biopython 1.45 released.

The Seq and MutableSeq objects act more like python strings, in particular
str(object) now returns the full sequence as a plain string.  The existing
tostring() method is preserved for backwards compatibility.

BioSQL has had some bugs fixed, and has an additional unit test which loads
records into a database using Bio.SeqIO and then checks the records can be
retrieved correctly.  The DBSeq and DBSeqRecord classes now subclass the
Seq and SeqRecord classes, which provides more functionality.

The modules under Bio.WWW are being deprecated.
Functionality in Bio.WWW.NCBI, Bio.WWW.SCOP, Bio.WWW.InterPro and
Bio.WWW.ExPASy is now available from Bio.Entrez, Bio.SCOP, Bio.InterPro and
Bio.ExPASy instead. Bio.Entrez was used to fix a nasty bug in Bio.GenBank.

Tiago Antao has included more functionality in the Population Genetics
module, Bio.PopGen.

The Bio.Cluster module has been updated to be more consistent with other
Biopython code.

The tutorial has been updated, including devoting a whole chapter to
Swiss-Prot, Prosite, Prodoc, and ExPASy. There is also a new chapter on
Bio.Entrez.

Bio.biblio was deprecated.

===================================================================

October 28, 2007: Biopython 1.44 released.

NOTE: This release includes some rather drastic code changes, which were
necessary to get Biopython to work with the new release of mxTextTools.

The (reverse)complement functions in Bio.Seq support ambiguous nucleotides.

Bio.Kabat, which was previously deprecated, is now removed from Biopython.

Bio.MarkupEditor was deprecated, as it does not appear to have any users.

Bio.Blast.NCBI.qblast() updated with more URL options, thanks to a patch
from Chang Soon Ong.

Several fixes to the Blast parser.

The deprecated Bio.Blast.NCBIWWW functions blast and blasturl were removed.

The standalone Blast functions blastall, blastpgp now create XML output by
default.

Bio.SeqIO.FASTA and Bio.SeqIO.generic have been deprecated in favour of
the new Bio.SeqIO module.

Bio.FormatIO has been removed (a gradual deprecation was not possible).
Please look at Bio.SeqIO for sequence input/output instead.

Fix for a bug in Bio.Cluster, which caused kcluster() to hang on some platforms.

Bio.expressions has been deprecated.

Bio.SeqUtils.CheckSum created, including new methods from Sebastian Bassi,
and functions crc32 and crc64 which were moved from Bio/crc.py.
Bio.crc is now deprecated. Bio.lcc was updated and moved to Bio.SeqUtils.lcc.

Bio.SwissProt parser updated to cope with recent file format updates.

Bio.Fasta, Bio.KEGG and Bio.Geo updated to pure python parsers which
don't rely on Martel.

Numerous fixes in the Genbank parser.

Several fixes in Bio.Nexus.

Bio.MultiProc and Bio.Medline.NLMMedlineXML were deprecating, as they failed
on some platforms, and seemed to have no users. Deprecated concurrent
behavior in Bio.config.DBRegistry and timeouts in Bio.dbdefs.swissprot,
which relies on Bio.MultiProc.

Tiago Antao has started work on a Population Genetics module, Bio.PopGen

Updates to the tutorial, including giving Bio.Seq and Bio.SeqIO a whole
chapter each.

===================================================================

March 17, 2007: Biopython 1.43 released.

New Bio.SeqIO module for reading and writing biological sequence files
in various formats, based on SeqRecord objects.  This includes a new fasta
parser which is much faster than Bio.Fasta, particularly for larger files.
Easier to use, too.

Various improvements in Bio.SeqRecord.

Running Blast using Bio.Blast.NCBIStandalone now generates output in XML
format by default.
The new function Bio.Blast.NCBIXML.parse can parse multiple Blast records
in XML format.

Bio.Cluster no longer uses ranlib, but uses its own random number generator
instead. Some modifications to make Bio.Cluster more compatible with the new
NumPy (we're not quite there yet though).

New Bio.UniGene parser.

Numerous improvements in Bio.PDB.

Bug fixes in Bio.SwissProt, BioSQL, Bio.Nexus, and other modules.

Faster parsing of large GenBank files.

New EMBL parser under Bio.GenBank and also integrated into (new) Bio.SeqIO

Compilation of KDTree (C++ code) is optional (setup.py asks the user if it
should be compiled). For the Windows installer, C++ code is now included.

Nominating Bio.Kabat for removal.

Believe it or not, even the documentation was updated.

===================================================================

July 16, 2006: Biopython 1.42 released.

Bio.GenBank: New parser by Peter, which doesn't rely on Martel.

Numerous updates in Bio.Nexus and Bio.Geo.

Bio.Cluster became (somewhat) object-oriented.

Lots of bug fixes, and updates to the documentation.

===================================================================

October 28, 2005: Biopython 1.41 released.
Major changes:

NEW: Bio.MEME -- thanks to Jason Hackney

Added transcribe, translate, and reverse_complement functions to Bio.Seq that
work both on Seq objects and plain strings.

Major code optimization in cpairwise2module.

CompareACE support added to AlignAce.

Updates to Blast parsers in Bio.Blast, in particular use of the XML parser
in NCBIXML contributed by Bertrand Frottier, and the BLAT parser by Yair
Benita.

Pairwise single-linkage hierarchical clustering in Bio.Cluster became much
faster and memory-efficient, allowing clustering of large data sets.

Bio.Emboss: Added command lines for einverted and palindrome.

Bio.Nexus: Added support for StringIO objects.

Numerous updates in Bio.PDB.

Lots of fixes in the documentation.

March 29, 2005: MEME parser added. Thanks to Jason Hackney

===================================================================

Feb 18, 2005: Biopython 1.40 beta
Major Changes since v1.30. For a full list of changes please see the CVS

IMPORTANT: Biopython now works with Python version >= 2.3

NEW: Bio.Nexus -- thanks to Frank Kauff
Bio.Nexus is a Nexus file parser. Nexus is  a common format for phylogenetic trees.

NEW: CAPS module -- Thanks to Jonathan Taylor

NEW: Restriction enzyme package contributed by Frederic Sohm. This includes classes for
manipulating enzymes, updating from Rebase, as well as documentation and Tests.
CHANGED: Bio.PDB -- thanks to Thomas Hamelryck
Added atom serial number.
Epydoc style documentation.
Added secondary structure support (through DSSP)
Added Accessible Surface Area support (through DSSP)
Added Residue Depth support (through MSMS)
Added Half Sphere Exposure.
Added Fragment classification of the protein backbone (see Kolodny et al., 
JMB, 2002)
Corrected problem on Windows with PDBList (thanks to Matt Dimmic)
Added StructureAlignment module to superimpose structures based on a FASTA 
sequence alignment.
Various additions to Polypeptide.
Various bug corrections in Vector.
Lots of smaller bug corrections and additional features

CHANGED: MutableSeq -- thanks to Michiel De Hoon
Added the functions 'complement' and 'reverse_complement' to Bio.Seq's Seq and
MutableSeq objects. Similar functions previous existed in various locations in
BioPython:
- forward_complement, reverse_complement in Bio.GFF.easy
- complement, antiparallel in Bio.SeqUtils
These functions have now been deprecated, and will generate a DeprecationWarning
when used.
The functions complement and reverse_complement, when applied to a Seq object,
will return a new Seq object. The same function applied to a MutableSeq object
will modify the MutableSeq object itself, and don't return anything.


===================================================================

May 14, 2004: Biopython 1.30
 Affy package added for dealing with Affymetrix cel files -- thanks to Harry 
  Zuzan.
 Added code for parsing Blast XML output -- thanks to Bertrand Frottier.
 Added code for parsing Compass output -- thanks to James Casbon.
 New melting temperature calculation module -- thanks to Sebastian Bassi.
 Added lowess function for non-parameteric regression -- thanks to Michiel.
 Reduced protein alphabet supported added -- thanks to Iddo.
 
 Added documentation for Logistic Regression and Bio.PDB -- thanks to Michiel
  and Thomas.
 Documentation added for converting between file formats.
 Updates to install documentation for non-root users -- thanks to Jakob 
  Fredslund.
 epydoc now used for automatic generation of documentation.

 Fasta parser updated to use Martel for parsing and indexing, allowing better
  speed and dealing with large data files.
 Updated to Registry code. Now 'from Bio import db' gives you a number of new
  retrieval options, including embl, fasta, genbak, interpro, prodoc and swissprot.
 GenBank parser uses new Martel format. GenBank retrieval now uses EUtils instead
  of the old non-working entrez scripts. GenBank indexing uses standard Mindy
  indexing. Fix for valueless qualifiers in feature keys -- thanks to Leighton 
  Pritchard.
 Numerous updated to Bio.PDB modules -- thanks to Thomas. PDB can now parse headers
  -- thanks to Kristian Rother.
 Updates to the Ace parser -- thanks to Frank Kauff and Leighton Pritchard.

 Added pgdb (PyGreSQL) support to BioSQL -- thanks to Marc Colosimo.
 Fix problems with using py2exe and Biopython -- thanks to Michael Cariaso.
 PSIBlast parser fixes -- thanks to Jer-Yee John Chuang and James Casbon.
 Fix to NCBIWWW retrieval so that HTML results are returned correctly.
 Fix to Clustalw to handle question marks in title names -- thanks to Ashleigh 
  Smythe.
 Fix to NBRF parsing to it accepts files produced by Clustalw -- thanks to
  Ashleigh Smythe.
 Fixes to the Enyzme module -- thanks to Marc Colosimo.
 Fix for bugs in SeqUtils -- thanks to Frank Kauff.
 Fix for optional hsps in ncbiblast Martel format -- thanks to Heiko.
 Fix to Fasta parsing to allow # comment lines -- thanks to Karl Diedrich.
 Updates to the C clustering library -- thanks to Michiel.
 Fixes for breakage in the SCOP module and addition of regression tests to
  framework -- thanks to Gavin.
 Various fixes to Bio.Wise -- thanks to Michael.
 Fix for bug in FastaReader -- thanks to Micheal.
 Fix EUtils bug where efetch would only return 500 sequences.
 Updates for Emboss commandlines, water and tranalign.
 Fixes to the FormatIO system of file conversion.

 C++ code (KDTree, Affy) now compiled by default on most platforms -- thanks to
  Michael for some nice distutils hacks and many people for testing.
 Deprecated Bio.sequtils -- use Bio.SeqUtils instead.
 Deprecated Bio.SVM -- use libsvm instead.
 Deprecated Bio.kMeans and Bio.xkMeans -- use Bio.cluster instead.
 Deprecated RecordFile -- doesn't appear to be finished code.


Feb 16, 2004: Biopython 1.24
 New parsers for Phred and Ace format files -- thanks to Frank Kauff
 New Code for dealing with NMR data -- thanks to Bob Bussell
 New SeqUtils modules for codon usage, isoelectric points and other
  protein properties -- thanks to Yair Benita
 New code for dealing with Wise contributed by Michael
 EZ-Retrieve sequence retrieval now supported thanks to Jeff
 Bio.Cluster updated along with documentation by Michiel 
 BioSQL fixed so it now works with the current SQL schema -- thanks to Yves
  Bastide for patches
 Patches to Bio/__init__ to make it compatible with py2exe -- thanks to 
  Leighton Pritchard
 Added __iter__ to all Biopython Iterators to make them Python 2.2 compatible
 Fixes to NCBIWWW for retrieving from NCBI -- thanks to Chris Wroe
 Retrieval of multiple alignment objects from BLAST records -- thanks to 
  James Casbon
 Fixes to GenBank format for new tags by Peter
 Parsing fixes in clustalw parsed -- thanks to Greg Singer and Iddo
 Fasta Indexes can have a specified filename -- thanks to Chunlei Wu
 Fix to Prosite parser -- thanks to Mike Liang
 Fix in GenBank parsing -- mRNAs now get strand information 


Oct 18, 2003: Biopython 1.23
  Fixed distribution of files in Bio/Cluster
  Now distributing Bio/KDTree/_KDTree.swig.C
  minor updates in installation code
  added mmCIF support for PDB files

Oct 9, 2003: Biopython 1.22
  Added Peter Slicker's patches for speeding up modules under Python 2.3
  Fixed Martel installation.
  Does not install Bio.Cluster without Numeric.
  Distribute EUtils DTDs.
  Yves Bastide patched NCBIStandalone.Iterator to be Python 2.0 iterator
  Ashleigh's string coersion fixes in Clustalw.
  Yair Benita added precision to the protein molecular weights.
  Bartek updated AlignAce.Parser and added Motif.sim method
  bug fixes in Michiel De Hoon's clustering library
  Iddo's bug fixes to Bio.Enzyme and new RecordConsumer
  Guido Draheim added patches for fixing import path to xbb scripts
  regression tests updated to be Python 2.3 compatible
  GenBank.NCBIDictionary is smarter about guessing the format

Jul 28, 2003: Biopython 1.21
  Martel added back into the released package
  new AlignACE module by Bartek Wilczynski
  Andreas Kuntzagk fix for GenBank Iterator on empty files

Jul 27, 2003: Biopython 1.20
  added Andrew Dalke's EUtils library
  added Michiel de Hoon's gene expression analysis package
  updates to setup code, now smarter about dependencies
  updates to test suite, now smarter about code that is imported
  Michael Hoffman's fixes to DocSQL
  syntax fixes in triemodule.c to compile on SGI, Python 2.1 compatible
  updates in NCBIStandalone, short query error
  Sebastian Bassi submitted code to calculate LCC complexity
  Greg Kettler's NCBIStandalone fix for long query lengths
  slew of miscellaneous fixes from George Paci
  miscellaneous cleanups and updates from Andreas Kuntzagk
  Peter Bienstman's fixes to Genbank code -- now parses whole database
  Kayte Lindner's LocusLink package
  miscellaneous speedups and code cleanup in ParserSupport by Brad Chapman
  miscellaneous BLAST fixes and updates
  Iddo added new code to parse BLAST table output format
  Karl Diedrich's patch to read T_Coffee files
  Larry Heisler's fix for primer3 output
  Bio.Medline now uses proper iterator objects
  copen now handles SIGTERM correctly
  small bugfixes and updates in Thomas Hamelryck's PDB package
  bugfixes and updates to SeqIO.FASTA reader
  updates to Registry system, conforms to 2003 hackathon OBDA spec
  Yu Huang patch to support tblastn in wublast expression

Dec 17, 2002: Biopython 1.10
  Python requirement bumped up to 2.2
  hierarchy reorg, many things moved upwards into Bio namespace
  pairwise2 replaces fastpairwise and pairwise
  removed deprecated Sequence.py package
  minor bug fix in File.SGMLStripper
  added Scripts/debug/debug_blast_parser.py to diagnose blast parsing errors
  IPI supported by SwissProt/SProt.py parser
  large speedup for kmeans
  new registry framework for generic access to databases and parsers
  small bug fix in stringfns.split
  scripts that access NCBI moved over to new EUtils system
  new crc module
  biblio.py supports the EBI Bibliographic database
  new CDD parser
  new Ndb parser
  new ECell parser
  new Geo parser
  access to GFF databases
  new KDTree data structure
  new LocusLink parser
  new MarkovModel algorithm
  new Saf parser
  miscellaneous sequence handling functions in sequtils
  new SVDSuperimpose algorithm


Dec 18, 2001: Biopython1.00a4
  minor bug fix in NCBIStandalone.blastall
  optimization in dynamic programming code
  new modules for logistic regression and maximum entropy
  minor bug fix in ParserSupport
  minor bug fixes in SCOP package
  minor updates in the kMeans cluster selection code
  minor bug fixes in SubsMat code
  support for XML-formatted MEDLINE files
  added MultiProc.run to simplify splitting code across processors
  listfns.items now supports lists with unhashable items
  new data type for pathways
  new support for intelligenetics format
  new support for metatool format
  new support for NBRF format
  new support for generalized launching of applications
  new support for genetic algorithms
  minor bug fixes in GenBank parsing
  new support for Primer in the Emboss package
  new support for chromosome graphics
  new support for HMMs
  new support for NeuralNetwork
  slew of Martel fixes (see Martel docs)

Sept 3, 2001: Biopython1.00a3
  added package to support KEGG
  added sequtils module for computations on sequences
  added pairwise sequence alignment algorithm
  major bug fixes in UndoHandle
  format updates in PubMed  
  Tk interface to kMeans clustering

July 5, 2001: Biopython1.00a2
  deprecated old regression testing frameworks
  deprecated Sequence.py
  Swiss-Prot parser bug fixes
  GenBank parser bug fixes
  Can now output GenBank format
  can now download many sequences at a time from GenBank
  kMeans clustering algorithm
  Kabat format now supported
  FSSP format now supported
  more functionality for alignment code
  SubsMat bug fixes and updates
  fixed memory leak in listfns bug fixes
  Martel bundled and part of the install procedure
  Medline.Parser bug fixes
  PubMed.download_many handles broken IDs better


Mar 3, 2001: Biopython 1.00a1
  Refactoring of modules.  X/X.py moved to X/__init__.py.
  Can search sequences for Prosite patterns at ExPASy
  Can do BLAST searches against stable URL at NCBI
  Prosite Pattern bug fixes
  GenBank parser
  Complete Seq and SeqFeatures framework
  distutils cleanup
  compile warning cleanups
  support for UniGene
  code for working with substitution matrices
  Tools.MultiProc package for rudimentary multiprocessing stuff


Nov 10, 2000: Biopython 0.90d04
  Added support for multiple alignments, ClustalW
  BLAST updates, bug fixes, and BlastErrorParser
  Fixes for PSI-BLAST in master-slave mode
  Minor update in stringfns, split separators can be negated
  Added download_many function to PubMed
  xbbtools updates
  Prodoc parser now accepts a copyright at the end of a record
  Swiss-Prot parser now handles taxonomy ID tag


Sept 6, 2000: Biopython 0.90d03
  Blast updates:
    - bug fixes in NCBIStandalone, NCBIWWW
    - some __str__ methods in Record.py implemented (incomplete)
  Tests
    - new BLAST regression tests
    - prosite tests fixed
  New parsers for Rebase, Gobase
  pure python implementation of C-based tools
  Thomas Sicheritz-Ponten's xbbtools
  can now generate documentation from docstrings using HappyDoc


Aug17-18, 2000: Bioinformatics Open Source Conference 2000
We had a very good Birds-of-a-Feather meeting:
http://www.biopython.org/pipermail/biopython/2000-August/000360.html


Aug 2, 2000: Biopython 0.90d02 is released.
  Blast updates:
    - now works with v2.0.14
    - HSP.identities and HSP.positives now tuples
    - HSP.gaps added
  SCOP updates:
    - Lin.Iterator now works with release 50
  Starting a tutorial
  New regression tests for Prodoc

July 6, 2000: Biopython 0.90d01 is released.

February 8, 2000: Anonymous CVS made available.


August 1999
Biopython project founded.

Call for Participation sent out to relevant mailing lists, news
groups.

The Biopython Project (http://www.biopython.org/) is a new open
collaborative effort to develop freely available Python libraries and
applications that address the needs of current and future work in
bioinformatics, including sequence analysis, structural biology,
pathways, expression data, etc.  When available, the source code will
be released as open source (http://www.biopython.org/License.shtml)
under terms similar to Python.

This is a Call for Participation for interested people to join the
project.  We are hoping to attract people from a diverse set of
backgrounds to help with code development, site maintenance,
scientific discussion, etc.  This project is open to everyone.  If
you're interested, please visit the web page, join the biopython
mailing list, and let us know what you think!

Jeffrey Chang <jchang@smi.stanford.edu>
Andrew Dalke <dalke@bioreason.com>


