name: Basic Checks

on: [push, pull_request]

jobs:
  # Style Checking: one OS and Python version only.
  style:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - uses: trilom/file-changes-action@v1.2.4
      with:
        # Creates files.txt
        output: ' '
        fileOutput: ' '

    - name: Cache pre-commit hooks
      id: cache-precommit
      uses: actions/cache@v2
      env:
        cache-name: cache-precommit-hooks
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/.pre-commit-config.yaml') }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Installing pre-commit
      run: |
        python -m pip install pre-commit

    - name: Installing pre-commit hooks
      if: steps.cache-precommit.outputs.cache-hit != 'true'
      run: |
        pre-commit install --install-hooks

    - name: Run style checking via pre-commit
      run: |
        pre-commit run --files $( cat ${HOME}/files.txt )

  # Build package: sdist, bdist_wheel
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel

    - name: Package tarball
      run: |
        python setup.py sdist --formats=gztar,zip

    - name: Build wheel
      run: |
        python setup.py bdist_wheel
  
  # Run test suite
  # Triggers only if style & build pass.
  tests:
    needs: [style, build]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install
      run: |
        python setup.py install

    - name: Run test suite (simple version)
      run: |
        cd Tests
        python run_tests.py --offline
