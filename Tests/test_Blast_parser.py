# Copyright 2005 by Michiel de Hoon.  All rights reserved.
# This code is part of the Biopython distribution and governed by its
# license.  Please see the LICENSE file that should have been included
# as part of this package.
"""Test the Blast XML parser."""

import os
import unittest

import numpy as np

from Bio import Blast
from Bio.SeqRecord import SeqRecord


class TestBlastXML(unittest.TestCase):
    """Tests for the Blast XML parser."""

    def test_xml_2212L_blastp_001(self):
        """Parsing BLASTP 2.2.12 (xml_2212L_blastp_001.xml)."""
        filename = "xml_2212L_blastp_001.xml"
        datafile = os.path.join("Blast", filename)
        with open(datafile, "rb") as handle:
            records = Blast.parse(handle)
            self.assertEqual(records.program, "blastp")
            self.assertEqual(records.version, "BLASTP 2.2.12 [Aug-07-2005]")
            self.assertEqual(
                records.reference,
                'Altschul, Stephen F., Thomas L. Madden, Alejandro A. SchÃ¤ffer, Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), "Gapped BLAST and PSI-BLAST: a new generation of protein database search programs", Nucleic Acids Res. 25:3389-3402.',
            )
            self.assertEqual(records.db, "nr")
            self.assertIsInstance(records.query, SeqRecord)
            self.assertEqual(records.query.id, "gi|49176427|ref|NP_418280.3|")
            self.assertEqual(
                records.query.description,
                "component of Sec-independent translocase [Escherichia coli K12]",
            )
            self.assertEqual(repr(records.query.seq), "Seq(None, length=103)")
            self.assertEqual(len(records.param), 5)
            self.assertEqual(records.param["matrix"], "BLOSUM62")
            self.assertAlmostEqual(records.param["expect"], 10)
            self.assertEqual(records.param["gap-open"], 11)
            self.assertEqual(records.param["gap-extend"], 1)
            self.assertEqual(records.param["filter"], "L;")
            record = next(records)
            self.assertRaises(StopIteration, next, records)
        self.check_xml_2212L_blastp_001(record)

        with open(datafile, "rb") as handle:
            record = Blast.read(handle)
            self.check_xml_2212L_blastp_001(record)

    def check_xml_2212L_blastp_001(self, record):
        self.assertEqual(record.num, 1)
        self.assertIsInstance(record.query, SeqRecord)
        self.assertEqual(record.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            record.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(repr(record.query.seq), "Seq(None, length=103)")
        self.assertEqual(len(record.stat), 7)
        self.assertEqual(record.stat["db-num"], 2934173)
        self.assertEqual(record.stat["db-len"], 1011751523)
        self.assertEqual(record.stat["hsp-len"], 0)
        self.assertAlmostEqual(record.stat["eff-space"], 0)
        self.assertAlmostEqual(record.stat["kappa"], 0.041)
        self.assertAlmostEqual(record.stat["lambda"], 0.267)
        self.assertAlmostEqual(record.stat["entropy"], 0.14)
        hits = record.hits
        self.assertEqual(len(hits), 212)

        hit = hits[0]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(hit.target.name, "NP_418280")
        self.assertEqual(
            hit.target.description,
            "component of Sec-independent translocase [Escherichia coli K12] >gi|26250604|ref|NP_756644.1| Sec-independent protein translocase protein tatA [Escherichia coli CFT073] >gi|30064867|ref|NP_839038.1| hypothetical protein S3840 [Shigella flexneri 2a str. 2457T] >gi|24115132|ref|NP_709642.1| hypothetical protein SF3914 [Shigella flexneri 2a str. 301] >gi|24054404|gb|AAN45349.1| orf, conserved hypothetical protein [Shigella flexneri 2a str. 301] >gi|2367310|gb|AAC76839.1| component of Sec-independent translocase [Escherichia coli K12] >gi|30043127|gb|AAP18849.1| hypothetical protein S3840 [Shigella flexneri 2a str. 2457T] >gi|26111035|gb|AAN83218.1| Sec-independent protein translocase protein tatA [Escherichia coli CFT073] >gi|3193217|gb|AAC19240.1| MttA1 [Escherichia coli] >gi|7444818|pir||E65188 hypothetical 11.3 kD protein in udp-rfaH intergenic region - Escherichia coli (strain K-12)",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=103)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 469.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 185.267)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.20576e-46)
        self.assertEqual(hsp.annotations["identity"], 103)
        self.assertEqual(hsp.annotations["positive"], 103)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0, 103],
                          [  0, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 103))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('MRLCLIIIYHRGTCMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFK...EQV')",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MRLCLIIIYHRGTCMGGISIWQLLIIAVIVVLLFGTKKLGSIGSDLGASIKGFK...EQV')",
        )
        self.assertEqual(hsp.target.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(hsp.target.name, "NP_418280")
        self.assertEqual(
            hsp.target.description,
            "component of Sec-independent translocase [Escherichia coli K12] >gi|26250604|ref|NP_756644.1| Sec-independent protein translocase protein tatA [Escherichia coli CFT073] >gi|30064867|ref|NP_839038.1| hypothetical protein S3840 [Shigella flexneri 2a str. 2457T] >gi|24115132|ref|NP_709642.1| hypothetical protein SF3914 [Shigella flexneri 2a str. 301] >gi|24054404|gb|AAN45349.1| orf, conserved hypothetical protein [Shigella flexneri 2a str. 301] >gi|2367310|gb|AAC76839.1| component of Sec-independent translocase [Escherichia coli K12] >gi|30043127|gb|AAP18849.1| hypothetical protein S3840 [Shigella flexneri 2a str. 2457T] >gi|26111035|gb|AAN83218.1| Sec-independent protein translocase protein tatA [Escherichia coli CFT073] >gi|3193217|gb|AAC19240.1| MttA1 [Escherichia coli] >gi|7444818|pir||E65188 hypothetical 11.3 kD protein in udp-rfaH intergenic region - Escherichia coli (strain K-12)",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MRLCLIIIYHRGTCMGGISIWQLLIIAVIVVLLFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQV",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|491764         0 MRLCLIIIYHRGTCMGGISIWQLLIIAVIVVLLFGTKKLGSIGSDLGASIKGFKKAMSDD
                  0 ||||||||||||||||||||||...........|||||||||||||||||||||||||||
gi|491764         0 MRLCLIIIYHRGTCMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDD

gi|491764        60 EPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQV 103
                 60 ||||||||||||||||||||||||||||||||||||||||||| 103
gi|491764        60 EPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQV 103
""",
        )
        hit = hits[1]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|15804428|ref|NP_290468.1|")
        self.assertEqual(hit.target.name, "NP_290468")
        self.assertEqual(
            hit.target.description,
            "twin arginine translocation protein; sec-independent protein export [Escherichia coli O157:H7 EDL933] >gi|12518713|gb|AAG59032.1| twin arginine translocation protein; sec-independent protein export [Escherichia coli O157:H7 EDL933] >gi|25302684|pir||D86071 hypothetical protein tatA [imported] - Escherichia coli  (strain O157:H7, substrain EDL933)",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=103)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 462.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 182.57)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.72609e-45)
        self.assertEqual(hsp.annotations["identity"], 102)
        self.assertEqual(hsp.annotations["positive"], 102)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0, 103],
                          [  0, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 103))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('MRLCLIIIYHRGTCMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFK...EQV')",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MRLCLIIIYHRXTCMGGISIWQLLIIAVIVVLLFGTKKLGSIGSDLGASIKGFK...EQV')",
        )
        self.assertEqual(hsp.target.id, "gi|15804428|ref|NP_290468.1|")
        self.assertEqual(hsp.target.name, "NP_290468")
        self.assertEqual(
            hsp.target.description,
            "twin arginine translocation protein; sec-independent protein export [Escherichia coli O157:H7 EDL933] >gi|12518713|gb|AAG59032.1| twin arginine translocation protein; sec-independent protein export [Escherichia coli O157:H7 EDL933] >gi|25302684|pir||D86071 hypothetical protein tatA [imported] - Escherichia coli  (strain O157:H7, substrain EDL933)",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MRLCLIIIYHR TCMGGISIWQLLIIAVIVVLLFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQV",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|158044         0 MRLCLIIIYHRXTCMGGISIWQLLIIAVIVVLLFGTKKLGSIGSDLGASIKGFKKAMSDD
                  0 |||||||||||.||||||||||...........|||||||||||||||||||||||||||
gi|491764         0 MRLCLIIIYHRGTCMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDD

gi|158044        60 EPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQV 103
                 60 ||||||||||||||||||||||||||||||||||||||||||| 103
gi|491764        60 EPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQV 103
""",
        )
        hit = hits[2]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|74314349|ref|YP_312768.1|")
        self.assertEqual(hit.target.name, "YP_312768")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein SSO_4011 [Shigella sonnei Ss046] >gi|73857826|gb|AAZ90533.1| conserved hypothetical protein [Shigella sonnei Ss046]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=103)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 462.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 182.57)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.72609e-45)
        self.assertEqual(hsp.annotations["identity"], 102)
        self.assertEqual(hsp.annotations["positive"], 102)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0, 103],
                          [  0, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 103))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('MRLCLIIIYHRGTCMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFK...EQV')",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MRPCLIIIYHRGTCMGGISIWQLLIIAVIVVLLFGTKKLGSIGSDLGASIKGFK...EQV')",
        )
        self.assertEqual(hsp.target.id, "gi|74314349|ref|YP_312768.1|")
        self.assertEqual(hsp.target.name, "YP_312768")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein SSO_4011 [Shigella sonnei Ss046] >gi|73857826|gb|AAZ90533.1| conserved hypothetical protein [Shigella sonnei Ss046]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MR CLIIIYHRGTCMGGISIWQLLIIAVIVVLLFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQV",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|743143         0 MRPCLIIIYHRGTCMGGISIWQLLIIAVIVVLLFGTKKLGSIGSDLGASIKGFKKAMSDD
                  0 ||.|||||||||||||||||||...........|||||||||||||||||||||||||||
gi|491764         0 MRLCLIIIYHRGTCMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDD

gi|743143        60 EPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQV 103
                 60 ||||||||||||||||||||||||||||||||||||||||||| 103
gi|491764        60 EPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQV 103
""",
        )
        hit = hits[3]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|75256240|ref|ZP_00727918.1|")
        self.assertEqual(hit.target.name, "ZP_00727918")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Escherichia coli E22] >gi|75238286|ref|ZP_00722285.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli E110019] >gi|75237629|ref|ZP_00721649.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli F11] >gi|75230797|ref|ZP_00717260.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli B7A] >gi|75209537|ref|ZP_00709758.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli B171] >gi|75197719|ref|ZP_00707789.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli HS] >gi|75188578|ref|ZP_00701845.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli E24377A] >gi|75177802|ref|ZP_00697867.1| COG1826: Sec-independent protein secretion pathway components [Shigella boydii BS512] >gi|3123496|emb|CAA06724.1| TatA protein [Escherichia coli] >gi|13364242|dbj|BAB38189.1| Sec-independent protein translocase [Escherichia coli O157:H7] >gi|60415956|sp|P69428|TATA_ECOLI Sec-independent protein translocase protein tatA >gi|60415959|sp|P69431|TATA_SHIFL Sec-independent protein translocase protein tatA >gi|60415958|sp|P69430|TATA_ECO57 Sec-independent protein translocase protein tatA >gi|60415957|sp|P69429|TATA_ECOL6 Sec-independent protein translocase protein tatA >gi|15834020|ref|NP_312793.1| Sec-independent protein translocase [Escherichia coli O157:H7]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=89)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 390.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 154.836)
        self.assertAlmostEqual(hsp.annotations["evalue"], 6.0872e-37)
        self.assertEqual(hsp.annotations["identity"], 89)
        self.assertEqual(hsp.annotations["positive"], 89)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  89],
                          [ 14, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 89))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...EQV'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGGISIWQLLIIAVIVVLLFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...EQV')",
        )
        self.assertEqual(hsp.target.id, "gi|75256240|ref|ZP_00727918.1|")
        self.assertEqual(hsp.target.name, "ZP_00727918")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Escherichia coli E22] >gi|75238286|ref|ZP_00722285.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli E110019] >gi|75237629|ref|ZP_00721649.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli F11] >gi|75230797|ref|ZP_00717260.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli B7A] >gi|75209537|ref|ZP_00709758.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli B171] >gi|75197719|ref|ZP_00707789.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli HS] >gi|75188578|ref|ZP_00701845.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli E24377A] >gi|75177802|ref|ZP_00697867.1| COG1826: Sec-independent protein secretion pathway components [Shigella boydii BS512] >gi|3123496|emb|CAA06724.1| TatA protein [Escherichia coli] >gi|13364242|dbj|BAB38189.1| Sec-independent protein translocase [Escherichia coli O157:H7] >gi|60415956|sp|P69428|TATA_ECOLI Sec-independent protein translocase protein tatA >gi|60415959|sp|P69431|TATA_SHIFL Sec-independent protein translocase protein tatA >gi|60415958|sp|P69430|TATA_ECO57 Sec-independent protein translocase protein tatA >gi|60415957|sp|P69429|TATA_ECOL6 Sec-independent protein translocase protein tatA >gi|15834020|ref|NP_312793.1| Sec-independent protein translocase [Escherichia coli O157:H7]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLIIAVIVVLLFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQV",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|752562         0 MGGISIWQLLIIAVIVVLLFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT
                  0 ||||||||...........|||||||||||||||||||||||||||||||||||||||||
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|752562        60 AKTIADKQADTNQEQAKTEDAKRHDKEQV  89
                 60 |||||||||||||||||||||||||||||  89
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQV 103
""",
        )
        hit = hits[4]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|148236|gb|AAA67633.1|")
        self.assertEqual(hit.target.name, "AAA67633")
        self.assertEqual(hit.target.description, "o261 [Escherichia coli]")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=261)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 312.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 124.79)
        self.assertAlmostEqual(hsp.annotations["evalue"], 6.74582e-28)
        self.assertEqual(hsp.annotations["identity"], 62)
        self.assertEqual(hsp.annotations["positive"], 62)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[18, 80],
                          [33, 95]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 62))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...EDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({18: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...EDA'}, length=261)",
        )
        self.assertEqual(hsp.target.id, "gi|148236|gb|AAA67633.1|")
        self.assertEqual(hsp.target.name, "AAA67633")
        self.assertEqual(hsp.target.description, "o261 [Escherichia coli]")
        self.assertEqual(
            hsp.annotations["midline"],
            "FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDA",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|148236        18 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|148236        78 DA 80
                 60 || 62
gi|491764        93 DA 95
""",
        )
        hit = hits[5]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|29143650|ref|NP_806992.1|")
        self.assertEqual(hit.target.name, "NP_806992")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein translocase protein [Salmonella enterica subsp. enterica serovar Typhi Ty2] >gi|16504464|emb|CAD07919.1| sec-independent protein translocase protein [Salmonella enterica subsp. enterica serovar Typhi] >gi|16422538|gb|AAL22817.1| component of Sec-independent protein secretion pathway [Salmonella typhimurium LT2] >gi|62182441|ref|YP_218858.1| component of Sec-independent protein secretion pathway [Salmonella enterica subsp. enterica serovar Choleraesuis str. SC-B67] >gi|16762161|ref|NP_457778.1| sec-independent protein translocase protein [Salmonella enterica subsp. enterica serovar Typhi str. CT18] >gi|56415827|ref|YP_152902.1| sec-independent protein translocase protein [Salmonella enterica subsp. enterica serovar Paratyphi A str. ATCC 9150] >gi|29139285|gb|AAO70852.1| sec-independent protein translocase protein [Salmonella enterica subsp. enterica serovar Typhi Ty2] >gi|56130084|gb|AAV79590.1| sec-independent protein translocase protein [Salmonella enterica subsp. enterica serovar Paratyphi A str. ATCC 9150] >gi|62130074|gb|AAX67777.1| component of Sec-independent protein secretion pathway [Salmonella enterica subsp. enterica serovar Choleraesuis str. SC-B67] >gi|6960229|gb|AAF33419.1| 83% identity with amino acids 10-79 of E. coli hypothetical protein (YIGT) (SP:P27856) [Salmonella typhimurium LT2] >gi|68064449|sp|P0A2H3|TATA_SALTY Sec-independent protein translocase protein tatA >gi|68064450|sp|P0A2H4|TATA_SALTI Sec-independent protein translocase protein tatA >gi|25302682|pir||AI0915 sec-independent protein translocase protein [imported] - Salmonella enterica subsp. enterica serovar Typhi (strain CT18) >gi|16767243|ref|NP_462858.1| Sec-independent protein secretion pathway component [Salmonella typhimurium LT2]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=84)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 305.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 122.094)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.37251e-27)
        self.assertEqual(hsp.annotations["identity"], 75)
        self.assertEqual(hsp.annotations["positive"], 79)
        self.assertEqual(hsp.annotations["gaps"], 5)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  69,  69,  84],
                          [ 14,  83,  88, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 89))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...EQV'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGGISIWQLLIVAVIVVLLFGTKKLGSIGSDLGASIKGFKKAMSDDDAKQDKTS...EQV')",
        )
        self.assertEqual(hsp.target.id, "gi|29143650|ref|NP_806992.1|")
        self.assertEqual(hsp.target.name, "NP_806992")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein translocase protein [Salmonella enterica subsp. enterica serovar Typhi Ty2] >gi|16504464|emb|CAD07919.1| sec-independent protein translocase protein [Salmonella enterica subsp. enterica serovar Typhi] >gi|16422538|gb|AAL22817.1| component of Sec-independent protein secretion pathway [Salmonella typhimurium LT2] >gi|62182441|ref|YP_218858.1| component of Sec-independent protein secretion pathway [Salmonella enterica subsp. enterica serovar Choleraesuis str. SC-B67] >gi|16762161|ref|NP_457778.1| sec-independent protein translocase protein [Salmonella enterica subsp. enterica serovar Typhi str. CT18] >gi|56415827|ref|YP_152902.1| sec-independent protein translocase protein [Salmonella enterica subsp. enterica serovar Paratyphi A str. ATCC 9150] >gi|29139285|gb|AAO70852.1| sec-independent protein translocase protein [Salmonella enterica subsp. enterica serovar Typhi Ty2] >gi|56130084|gb|AAV79590.1| sec-independent protein translocase protein [Salmonella enterica subsp. enterica serovar Paratyphi A str. ATCC 9150] >gi|62130074|gb|AAX67777.1| component of Sec-independent protein secretion pathway [Salmonella enterica subsp. enterica serovar Choleraesuis str. SC-B67] >gi|6960229|gb|AAF33419.1| 83% identity with amino acids 10-79 of E. coli hypothetical protein (YIGT) (SP:P27856) [Salmonella typhimurium LT2] >gi|68064449|sp|P0A2H3|TATA_SALTY Sec-independent protein translocase protein tatA >gi|68064450|sp|P0A2H4|TATA_SALTI Sec-independent protein translocase protein tatA >gi|25302682|pir||AI0915 sec-independent protein translocase protein [imported] - Salmonella enterica subsp. enterica serovar Typhi (strain CT18) >gi|16767243|ref|NP_462858.1| Sec-independent protein secretion pathway component [Salmonella typhimurium LT2]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLI+AVIVVLLFGTKKLGSIGSDLGASIKGFKKAMSDD+ KQDKTSQDADFTAK+IADKQ      +AK EDAK  DKEQV",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|291436         0 MGGISIWQLLIVAVIVVLLFGTKKLGSIGSDLGASIKGFKKAMSDDDAKQDKTSQDADFT
                  0 ||||||||...........|||||||||||||||||||||||||||..||||||||||||
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|291436        60 AKSIADKQG-----EAKKEDAKSQDKEQV  84
                 60 ||.|||||.-----.||.||||..|||||  89
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQV 103
""",
        )
        hit = hits[6]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|49609685|emb|CAG73118.1|")
        self.assertEqual(hit.target.name, "CAG73118")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein translocase [Erwinia carotovora subsp. atroseptica SCRI1043] >gi|50119159|ref|YP_048326.1| sec-independent protein translocase [Erwinia carotovora subsp. atroseptica SCRI1043]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=86)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 219.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 88.9669)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.10205e-17)
        self.assertEqual(hsp.annotations["identity"], 59)
        self.assertEqual(hsp.annotations["positive"], 67)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  48,  50,  72,  72,  86],
                          [ 14,  62,  62,  84,  89, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 91))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...EQV'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGGISLWNLLIIAVIVILLFGTNKLRTLGSDLGASIKGFKKAMGDDQPSTNADK...EQV')",
        )
        self.assertEqual(hsp.target.id, "gi|49609685|emb|CAG73118.1|")
        self.assertEqual(hsp.target.name, "CAG73118")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein translocase [Erwinia carotovora subsp. atroseptica SCRI1043] >gi|50119159|ref|YP_048326.1| sec-independent protein translocase [Erwinia carotovora subsp. atroseptica SCRI1043]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGIS+W LLIIAVIV+LLFGT KL ++GSDLGASIKGFKKAM DD+P    DK   DADF+ K+IAD Q+D     AK  D K   KEQV",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|496096         0 MGGISLWNLLIIAVIVILLFGTNKLRTLGSDLGASIKGFKKAMGDDQPSTNADKAQPDAD
                  0 |||||.|............|||.||...|||||||||||||||.||.|--..||...|||
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEP--KQDKTSQDAD

gi|496096        60 FSTKSIADNQSD-----AKQGDTKSQHKEQV  86
                 60 |..|.|||.|.|-----||..|.|...||||  91
gi|491764        72 FTAKTIADKQADTNQEQAKTEDAKRHDKEQV 103
""",
        )
        hit = hits[7]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|37528238|ref|NP_931583.1|")
        self.assertEqual(hit.target.name, "NP_931583")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein [Photorhabdus luminescens subsp. laumondii TTO1] >gi|36787675|emb|CAE16782.1| Sec-independent protein translocase protein [Photorhabdus luminescens subsp. laumondii TTO1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=86)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 204.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 83.1889)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.25087e-15)
        self.assertEqual(hsp.annotations["identity"], 59)
        self.assertEqual(hsp.annotations["positive"], 71)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  46,  47,  51,  52,  71,  71,  86],
                          [ 14,  60,  60,  64,  64,  83,  88, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 91))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...EQV'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGGISIWQLLIIAVIVVLLFGTNKLRTLGSDLGASIKGFKKAIGDDNQPQQAQK...EQV')",
        )
        self.assertEqual(hsp.target.id, "gi|37528238|ref|NP_931583.1|")
        self.assertEqual(hsp.target.name, "NP_931583")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein [Photorhabdus luminescens subsp. laumondii TTO1] >gi|36787675|emb|CAE16782.1| Sec-independent protein translocase protein [Photorhabdus luminescens subsp. laumondii TTO1]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLIIAVIVVLLFGT KL ++GSDLGASIKGFKKA+ DD +P+Q  KTS DADF  K I +KQ+      A++E ++  +KEQV",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|375282         0 MGGISIWQLLIIAVIVVLLFGTNKLRTLGSDLGASIKGFKKAIGDDNQPQQAQKTSSDAD
                  0 ||||||||...........|||.||...||||||||||||||..||-.|.|-.|||.|||
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDD-EPKQ-DKTSQDAD

gi|375282        60 FETKNITEKQS-----VAQSETSESKNKEQV  86
                 60 |..|.|..||.-----.|..|......||||  91
gi|491764        72 FTAKTIADKQADTNQEQAKTEDAKRHDKEQV 103
""",
        )
        hit = hits[8]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|59710656|ref|YP_203432.1|")
        self.assertEqual(hit.target.name, "YP_203432")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein TatA [Vibrio fischeri ES114] >gi|71657992|sp|Q5E8V2|TATA_VIBF1 Sec-independent protein translocase protein tatA/E homolog >gi|59478757|gb|AAW84544.1| Sec-independent protein translocase protein TatA [Vibrio fischeri ES114]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=82)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 201.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 82.0333)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.01441e-15)
        self.assertEqual(hsp.annotations["identity"], 52)
        self.assertEqual(hsp.annotations["positive"], 70)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  51,  51,  74,  74,  81],
                          [ 14,  65,  66,  89,  95, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 88))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISIWQLLIIAVIIVLLFGTKKLRGVGSDLGSAVKGFKKAISEDEPAKEAKK...KEQ'}, length=82)",
        )
        self.assertEqual(hsp.target.id, "gi|59710656|ref|YP_203432.1|")
        self.assertEqual(hsp.target.name, "YP_203432")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein TatA [Vibrio fischeri ES114] >gi|71657992|sp|Q5E8V2|TATA_VIBF1 Sec-independent protein translocase protein tatA/E homolog >gi|59478757|gb|AAW84544.1| Sec-independent protein translocase protein TatA [Vibrio fischeri ES114]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLIIAVI+VLLFGTKKL  +GSDLG+++KGFKKA+S+DEP ++   +DADF  + +  K+A+T ++Q      K++DKEQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|597106         0 MGGISIWQLLIIAVIIVLLFGTKKLRGVGSDLGSAVKGFKKAISEDEPAKE-AKKDADFV
                  0 ||||||||...........||||||...|||||...||||||.|.|||...-...||||.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|597106        59 PQNLEKKEAETVEKQ------KQNDKEQ  81
                 60 ......|.|.|...|------|..||||  88
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[9]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|54307340|ref|YP_128360.1|")
        self.assertEqual(hit.target.name, "YP_128360")
        self.assertEqual(
            hit.target.description,
            "putative TatA protein [Photobacterium profundum SS9] >gi|46911760|emb|CAG18558.1| putative TatA protein [Photobacterium profundum SS9]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=87)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 191.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 78.1814)
        self.assertAlmostEqual(hsp.annotations["evalue"], 7.2408e-14)
        self.assertEqual(hsp.annotations["identity"], 51)
        self.assertEqual(hsp.annotations["positive"], 67)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  47,  49,  81,  81,  87],
                          [ 14,  61,  61,  93,  97, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 91))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...EQV'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGGISIWQLLIIALIIVLLFGTKKLRSLGGDLGSAVKGFKKAIGDEELTVKKDN...EQV')",
        )
        self.assertEqual(hsp.target.id, "gi|54307340|ref|YP_128360.1|")
        self.assertEqual(hsp.target.name, "YP_128360")
        self.assertEqual(
            hsp.target.description,
            "putative TatA protein [Photobacterium profundum SS9] >gi|46911760|emb|CAG18558.1| putative TatA protein [Photobacterium profundum SS9]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLIIA+I+VLLFGTKKL S+G DLG+++KGFKKA+ D+E   K+D T  DADF  KT++ ++  +     K++     DKEQV",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|543073         0 MGGISIWQLLIIALIIVLLFGTKKLRSLGGDLGSAVKGFKKAIGDEELTVKKDNTEADAD
                  0 ||||||||...........||||||.|.|.|||...||||||..|.|--.|.|.|..|||
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE--PKQDKTSQDAD

gi|543073        60 FEQKTLSKEEQQSEDPVQKSQ----KDKEQV  87
                 60 |..||.............|..----.|||||  91
gi|491764        72 FTAKTIADKQADTNQEQAKTEDAKRHDKEQV 103
""",
        )
        hit = hits[10]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|45437890|gb|AAS63439.1|")
        self.assertEqual(hit.target.name, "AAS63439")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein TatA [Yersinia pestis biovar Medievalis str. 91001] >gi|51594613|ref|YP_068804.1| Sec-independent protein translocase protein TatA [Yersinia pseudotuberculosis IP 32953] >gi|22124367|ref|NP_667790.1| hypothetical protein y0452 [Yersinia pestis KIM] >gi|77633885|ref|ZP_00795999.1| COG1826: Sec-independent protein secretion pathway components [Yersinia pestis Angola] >gi|77630676|ref|ZP_00793262.1| COG1826: Sec-independent protein secretion pathway components [Yersinia pseudotuberculosis IP 31758] >gi|51587895|emb|CAH19498.1| Sec-independent protein translocase protein TatA [Yersinia pseudotuberculosis IP 32953] >gi|15981691|emb|CAC93245.1| Sec-independent protein translocase protein TatA [Yersinia pestis CO92] >gi|21957146|gb|AAM84041.1| hypothetical protein [Yersinia pestis KIM] >gi|45443023|ref|NP_994562.1| Sec-independent protein translocase protein TatA [Yersinia pestis biovar Medievalis str. 91001] >gi|16123912|ref|NP_407225.1| Sec-independent protein translocase protein TatA [Yersinia pestis CO92] >gi|25302681|pir||AI0459 Sec-independent protein translocase protein TatA [imported] - Yersinia pestis (strain CO92) >gi|24212497|sp|Q8ZAM2|TATA_YERPE Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=88)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 188.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 77.0258)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.61308e-13)
        self.assertEqual(hsp.annotations["identity"], 59)
        self.assertEqual(hsp.annotations["positive"], 66)
        self.assertEqual(hsp.annotations["gaps"], 9)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  47,  51,  63,  63,  71,  71,  87],
                          [ 14,  61,  61,  73,  74,  82,  86, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 92))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSIGWAQLLIIAVIVVLLFGTNKLRTLGSDLGASIKGFKKAMGDDSQTPPTNV...KEQ'}, length=88)",
        )
        self.assertEqual(hsp.target.id, "gi|45437890|gb|AAS63439.1|")
        self.assertEqual(hsp.target.name, "AAS63439")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein TatA [Yersinia pestis biovar Medievalis str. 91001] >gi|51594613|ref|YP_068804.1| Sec-independent protein translocase protein TatA [Yersinia pseudotuberculosis IP 32953] >gi|22124367|ref|NP_667790.1| hypothetical protein y0452 [Yersinia pestis KIM] >gi|77633885|ref|ZP_00795999.1| COG1826: Sec-independent protein secretion pathway components [Yersinia pestis Angola] >gi|77630676|ref|ZP_00793262.1| COG1826: Sec-independent protein secretion pathway components [Yersinia pseudotuberculosis IP 31758] >gi|51587895|emb|CAH19498.1| Sec-independent protein translocase protein TatA [Yersinia pseudotuberculosis IP 32953] >gi|15981691|emb|CAC93245.1| Sec-independent protein translocase protein TatA [Yersinia pestis CO92] >gi|21957146|gb|AAM84041.1| hypothetical protein [Yersinia pestis KIM] >gi|45443023|ref|NP_994562.1| Sec-independent protein translocase protein TatA [Yersinia pestis biovar Medievalis str. 91001] >gi|16123912|ref|NP_407225.1| Sec-independent protein translocase protein TatA [Yersinia pestis CO92] >gi|25302681|pir||AI0459 Sec-independent protein translocase protein TatA [imported] - Yersinia pestis (strain CO92) >gi|24212497|sp|Q8ZAM2|TATA_YERPE Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG I   QLLIIAVIVVLLFGT KL ++GSDLGASIKGFKKAM DD        DKTS DADF AK+I +KQ    Q  AK E++K H+KEQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|454378         0 MGSIGWAQLLIIAVIVVLLFGTNKLRTLGSDLGASIKGFKKAMGDDSQTPPTNVDKTSND
                  0 ||.|...|...........|||.||...|||||||||||||||.||.----...||||.|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE----PKQDKTSQD

gi|454378        60 ADF-AKSITEKQ----QPVAKAEESKSHEKEQ  87
                 60 |||-||.|..||----|..||.|..|.|.|||  92
gi|491764        70 ADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[11]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|75856473|ref|ZP_00764101.1|")
        self.assertEqual(hit.target.name, "ZP_00764101")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Vibrio sp. Ex25]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=81)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 187.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 76.6406)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.10675e-13)
        self.assertEqual(hsp.annotations["identity"], 54)
        self.assertEqual(hsp.annotations["positive"], 66)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  49,  49,  66,  66,  76,  76,  80],
                          [ 14,  63,  65,  82,  86,  96,  98, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 88))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISVWQLLIIAVIVVLLFGTKKLRGIGGDLGGAVKGFKKAMSEDEPAKNDKD...KEQ'}, length=81)",
        )
        self.assertEqual(hsp.target.id, "gi|75856473|ref|ZP_00764101.1|")
        self.assertEqual(hsp.target.name, "ZP_00764101")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Vibrio sp. Ex25]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGIS+WQLLIIAVIVVLLFGTKKL  IG DLG ++KGFKKAMS+DEP   K  +DADF  K++ ++Q    +++A  E  K  DKEQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|758564         0 MGGISVWQLLIIAVIVVLLFGTKKLRGIGGDLGGAVKGFKKAMSEDEPA--KNDKDADFE
                  0 |||||.||...........||||||..||.|||...||||||||.|||.--|...||||.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|758564        58 PKSLEEQQ----KKEAAPETKK--DKEQ  80
                 60 .|.....|----...|..|..|--||||  88
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[12]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|75829371|ref|ZP_00758676.1|")
        self.assertEqual(hit.target.name, "ZP_00758676")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae MO10] >gi|75828068|ref|ZP_00757503.1| COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae O395] >gi|75823218|ref|ZP_00752737.1| COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae RC385] >gi|75816411|ref|ZP_00746882.1| COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae V52] >gi|9654483|gb|AAF93264.1| tatA protein [Vibrio cholerae O1 biovar eltor str. N16961] >gi|15640118|ref|NP_229745.1| tatA protein [Vibrio cholerae O1 biovar eltor str. N16961] >gi|11356194|pir||G82366 tatA protein VC0086 [imported] - Vibrio cholerae (strain N16961 serogroup O1) >gi|9979012|sp|P57051|TATA_VIBCH Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=82)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 186.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 76.2554)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.7515e-13)
        self.assertEqual(hsp.annotations["identity"], 55)
        self.assertEqual(hsp.annotations["positive"], 63)
        self.assertEqual(hsp.annotations["gaps"], 11)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  62,  62,  73,  75,  81],
                          [ 14,  76,  85,  96,  96, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 90))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISIWQLLIIAVIVVLLFGTKKLRGIGSDLGSAVKGFKKAMSEEESNSAANQ...KEQ'}, length=82)",
        )
        self.assertEqual(hsp.target.id, "gi|75829371|ref|ZP_00758676.1|")
        self.assertEqual(hsp.target.name, "ZP_00758676")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae MO10] >gi|75828068|ref|ZP_00757503.1| COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae O395] >gi|75823218|ref|ZP_00752737.1| COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae RC385] >gi|75816411|ref|ZP_00746882.1| COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae V52] >gi|9654483|gb|AAF93264.1| tatA protein [Vibrio cholerae O1 biovar eltor str. N16961] >gi|15640118|ref|NP_229745.1| tatA protein [Vibrio cholerae O1 biovar eltor str. N16961] >gi|11356194|pir||G82366 tatA protein VC0086 [imported] - Vibrio cholerae (strain N16961 serogroup O1) >gi|9979012|sp|P57051|TATA_VIBCH Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLIIAVIVVLLFGTKKL  IGSDLG+++KGFKKAMS++E       +DADF  K         N EQAKT  +   + DKEQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|758293         0 MGGISIWQLLIIAVIVVLLFGTKKLRGIGSDLGSAVKGFKKAMSEEESNSAANQKDADFE
                  0 ||||||||...........||||||..||||||...||||||||..|........||||.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|758293        60 TK---------NLEQAKTNASAEVKKDKEQ  81
                 60 .|---------|.|||||....--..||||  90
gi|491764        74 AKTIADKQADTNQEQAKTEDAK--RHDKEQ 102
""",
        )
        hit = hits[13]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|75820019|ref|ZP_00750077.1|")
        self.assertEqual(hit.target.name, "ZP_00750077")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae V51]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=82)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 185.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 75.8702)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.59357e-13)
        self.assertEqual(hsp.annotations["identity"], 55)
        self.assertEqual(hsp.annotations["positive"], 63)
        self.assertEqual(hsp.annotations["gaps"], 11)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  62,  62,  72,  74,  81],
                          [ 14,  76,  85,  95,  95, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 90))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISIWQLLIIAVIVVLLFGTKKLRGIGSDLGSAVKGFKKAMSEEESNSAANQ...KEQ'}, length=82)",
        )
        self.assertEqual(hsp.target.id, "gi|75820019|ref|ZP_00750077.1|")
        self.assertEqual(hsp.target.name, "ZP_00750077")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae V51]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLIIAVIVVLLFGTKKL  IGSDLG+++KGFKKAMS++E       +DADF  K         N EQAKT  +   + DKEQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|758200         0 MGGISIWQLLIIAVIVVLLFGTKKLRGIGSDLGSAVKGFKKAMSEEESNSAANQKDADFE
                  0 ||||||||...........||||||..||||||...||||||||..|........||||.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|758200        60 TK---------NLEQAKTNASVEVKKDKEQ  81
                 60 .|---------|.|||||...--...||||  90
gi|491764        74 AKTIADKQADTNQEQAKTEDA--KRHDKEQ 102
""",
        )
        hit = hits[14]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|28896872|ref|NP_796477.1|")
        self.assertEqual(hit.target.name, "NP_796477")
        self.assertEqual(
            hit.target.description,
            "TatA protein [Vibrio parahaemolyticus RIMD 2210633] >gi|28805080|dbj|BAC58361.1| TatA protein [Vibrio parahaemolyticus RIMD 2210633] >gi|32130181|sp|Q87TH1|TATA_VIBPA Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=81)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 178.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 73.1738)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.32928e-12)
        self.assertEqual(hsp.annotations["identity"], 53)
        self.assertEqual(hsp.annotations["positive"], 65)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  47,  47,  66,  66,  76,  76,  80],
                          [ 14,  61,  63,  82,  86,  96,  98, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 88))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISVWQLLIIAVIVVLLFGTKKLRGIGGDLGSAVKGFKKAMSDEDSAKNEKD...KEQ'}, length=81)",
        )
        self.assertEqual(hsp.target.id, "gi|28896872|ref|NP_796477.1|")
        self.assertEqual(hsp.target.name, "NP_796477")
        self.assertEqual(
            hsp.target.description,
            "TatA protein [Vibrio parahaemolyticus RIMD 2210633] >gi|28805080|dbj|BAC58361.1| TatA protein [Vibrio parahaemolyticus RIMD 2210633] >gi|32130181|sp|Q87TH1|TATA_VIBPA Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGIS+WQLLIIAVIVVLLFGTKKL  IG DLG+++KGFKKAMSD++    K  +DADF  K++  +Q    Q++A  E  K  DKEQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|288968         0 MGGISVWQLLIIAVIVVLLFGTKKLRGIGGDLGSAVKGFKKAMSDED--SAKNEKDADFE
                  0 |||||.||...........||||||..||.|||...|||||||||..--..|...||||.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|288968        58 PKSLEKQQ----QKEAAPETKK--DKEQ  80
                 60 .|.....|----|..|..|..|--||||  88
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[15]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|27364353|ref|NP_759881.1|")
        self.assertEqual(hit.target.name, "NP_759881")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein secretion pathway component TatA [Vibrio vulnificus CMCP6] >gi|27360472|gb|AAO09408.1| Sec-independent protein secretion pathway component TatA [Vibrio vulnificus CMCP6] >gi|32130186|sp|Q8DDQ2|TATA_VIBVU Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=78)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 176.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 72.4034)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.97316e-12)
        self.assertEqual(hsp.annotations["identity"], 54)
        self.assertEqual(hsp.annotations["positive"], 65)
        self.assertEqual(hsp.annotations["gaps"], 11)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  50,  50,  60,  60,  73,  73,  77],
                          [ 14,  64,  68,  78,  83,  96,  98, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 88))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISIWQLLIIAVIVVLLFGTKKLRGIGSDLGGAIKGFKKAMNEEESEKKDAD...KEQ'}, length=78)",
        )
        self.assertEqual(hsp.target.id, "gi|27364353|ref|NP_759881.1|")
        self.assertEqual(hsp.target.name, "NP_759881")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein secretion pathway component TatA [Vibrio vulnificus CMCP6] >gi|27360472|gb|AAO09408.1| Sec-independent protein secretion pathway component TatA [Vibrio vulnificus CMCP6] >gi|32130186|sp|Q8DDQ2|TATA_VIBVU Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLIIAVIVVLLFGTKKL  IGSDLG +IKGFKKAM+++E ++    +DADF  K++     +   +QA TE  K  DKEQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|273643         0 MGGISIWQLLIIAVIVVLLFGTKKLRGIGSDLGGAIKGFKKAMNEEESEK----KDADFE
                  0 ||||||||...........||||||..||||||..||||||||...|...----.||||.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|273643        56 PKSL-----EQQSKQAATESKK--DKEQ  77
                 60 .|..-----.....||.||..|--||||  88
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[16]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|37678364|ref|NP_932973.1|")
        self.assertEqual(hit.target.name, "NP_932973")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein secretion pathway component [Vibrio vulnificus YJ016] >gi|37197103|dbj|BAC92944.1| Sec-independent protein secretion pathway component [Vibrio vulnificus YJ016] >gi|71153586|sp|Q7MQ30|TATA_VIBVY Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=78)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 176.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 72.4034)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.97316e-12)
        self.assertEqual(hsp.annotations["identity"], 54)
        self.assertEqual(hsp.annotations["positive"], 65)
        self.assertEqual(hsp.annotations["gaps"], 11)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  50,  50,  60,  60,  73,  73,  77],
                          [ 14,  64,  68,  78,  83,  96,  98, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 88))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISIWQLLIIAVIVVLLFGTKKLRGIGSDLGGAIKGFKKAMNEEESEKKDAD...KEQ'}, length=78)",
        )
        self.assertEqual(hsp.target.id, "gi|37678364|ref|NP_932973.1|")
        self.assertEqual(hsp.target.name, "NP_932973")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein secretion pathway component [Vibrio vulnificus YJ016] >gi|37197103|dbj|BAC92944.1| Sec-independent protein secretion pathway component [Vibrio vulnificus YJ016] >gi|71153586|sp|Q7MQ30|TATA_VIBVY Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLIIAVIVVLLFGTKKL  IGSDLG +IKGFKKAM+++E ++    +DADF  K++     +   +QA TE  K  DKEQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|376783         0 MGGISIWQLLIIAVIVVLLFGTKKLRGIGSDLGGAIKGFKKAMNEEESEK----KDADFE
                  0 ||||||||...........||||||..||||||..||||||||...|...----.||||.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|376783        56 PKSL-----EQQNKQAATESKK--DKEQ  77
                 60 .|..-----.....||.||..|--||||  88
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[17]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71277787|ref|YP_266931.1|")
        self.assertEqual(hit.target.name, "YP_266931")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein TatA [Colwellia psychrerythraea 34H] >gi|71143527|gb|AAZ24000.1| Sec-independent protein translocase protein TatA [Colwellia psychrerythraea 34H]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=85)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 176.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 72.4034)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.97316e-12)
        self.assertEqual(hsp.annotations["identity"], 48)
        self.assertEqual(hsp.annotations["positive"], 64)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  46,  46,  52,  52,  84],
                          [ 14,  60,  62,  68,  70, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 88))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGIGIWQLVIVAVIVVLLFGTKKLRNIGGDLGSAIKGFKSAIGEDKEQKNSAE...SDQ'}, length=85)",
        )
        self.assertEqual(hsp.target.id, "gi|71277787|ref|YP_266931.1|")
        self.assertEqual(hsp.target.name, "YP_266931")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein TatA [Colwellia psychrerythraea 34H] >gi|71143527|gb|AAZ24000.1| Sec-independent protein translocase protein TatA [Colwellia psychrerythraea 34H]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGI IWQL+I+AVIVVLLFGTKKL +IG DLG++IKGFK A+ +D  K+ K S  A+ T+ T+AD    T +E  KT ++K  + +Q",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|712777         0 MGGIGIWQLVIVAVIVVLLFGTKKLRNIGGDLGSAIKGFKSAIGED--KEQKNS--AEKT
                  0 ||||.|||...........||||||..||.|||..|||||.|...|--|..|.|--|..|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|712777        56 SDTLADSSKSTTEEVVKTTESKTKESDQ  84
                 60 ..|.||....|..|..||...|.....|  88
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[18]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68541995|ref|ZP_00581733.1|")
        self.assertEqual(hit.target.name, "ZP_00581733")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Shewanella baltica OS155] >gi|68520382|gb|EAN43890.1| Twin-arginine translocation protein TatA/E [Shewanella baltica OS155]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=79)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 169.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 69.707)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.57533e-11)
        self.assertEqual(hsp.annotations["identity"], 46)
        self.assertEqual(hsp.annotations["positive"], 60)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 63, 66, 79],
                          [14, 77, 77, 90]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 79))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...EQA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGGISIWQLLIVALIVVLLFGTKKLRSLGGDLGGAVKGFKNAMSSEEDKKALED...EQA')",
        )
        self.assertEqual(hsp.target.id, "gi|68541995|ref|ZP_00581733.1|")
        self.assertEqual(hsp.target.name, "ZP_00581733")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Shewanella baltica OS155] >gi|68520382|gb|EAN43890.1| Twin-arginine translocation protein TatA/E [Shewanella baltica OS155]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLI+A+IVVLLFGTKKL S+G DLG ++KGFK AMS +E K+     +A  TA+T     +K+ ++N+EQA",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|685419         0 MGGISIWQLLIVALIVVLLFGTKKLRSLGGDLGGAVKGFKNAMSSEEDKKALEDTEAAKT
                  0 ||||||||...........||||||.|.|.|||...||||.|||..|.|.......|..|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|685419        60 AQTTQQATEKKPESNKEQA 79
                 60 |.|---...|....|.||| 79
gi|491764        74 AKT---IADKQADTNQEQA 90
""",
        )
        hit = hits[19]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|77813363|ref|ZP_00812641.1|")
        self.assertEqual(hit.target.name, "ZP_00812641")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Shewanella putrefaciens CN-32] >gi|77811811|gb|EAO96181.1| Twin-arginine translocation protein TatA/E [Shewanella putrefaciens CN-32]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=79)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 169.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 69.707)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.57533e-11)
        self.assertEqual(hsp.annotations["identity"], 47)
        self.assertEqual(hsp.annotations["positive"], 60)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 63, 66, 79],
                          [14, 77, 77, 90]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 79))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...EQA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGGISIWQLLIIALIVVLLFGTKKLRSLGGDLGGAVKGFKNAMSSEEDKKALED...EQA')",
        )
        self.assertEqual(hsp.target.id, "gi|77813363|ref|ZP_00812641.1|")
        self.assertEqual(hsp.target.name, "ZP_00812641")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Shewanella putrefaciens CN-32] >gi|77811811|gb|EAO96181.1| Twin-arginine translocation protein TatA/E [Shewanella putrefaciens CN-32]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLIIA+IVVLLFGTKKL S+G DLG ++KGFK AMS +E K+     +A  TA+T     +K+ ++N+EQA",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|778133         0 MGGISIWQLLIIALIVVLLFGTKKLRSLGGDLGGAVKGFKNAMSSEEDKKALEDTEAAKT
                  0 ||||||||...........||||||.|.|.|||...||||.|||..|.|.......|..|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|778133        60 AQTTQQATEKKPESNKEQA 79
                 60 |.|---...|....|.||| 79
gi|491764        74 AKT---IADKQADTNQEQA 90
""",
        )
        hit = hits[20]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|52306607|gb|AAU37107.1|")
        self.assertEqual(hit.target.name, "AAU37107")
        self.assertEqual(
            hit.target.description,
            "TatA protein [Mannheimia succiniciproducens MBEL55E] >gi|52424555|ref|YP_087692.1| TatA protein [Mannheimia succiniciproducens MBEL55E]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=75)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 168.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 69.3218)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.36348e-11)
        self.assertEqual(hsp.annotations["identity"], 49)
        self.assertEqual(hsp.annotations["positive"], 60)
        self.assertEqual(hsp.annotations["gaps"], 14)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  49,  49,  57,  57,  70,  70,  74],
                          [ 14,  63,  69,  77,  78,  91,  98, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 88))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISIWQLLIIVAIIVLLFGTKKLRTLGTDLGESVKGFKKAMNEDEPKDAEFK...KEQ'}, length=75)",
        )
        self.assertEqual(hsp.target.id, "gi|52306607|gb|AAU37107.1|")
        self.assertEqual(hsp.target.name, "AAU37107")
        self.assertEqual(
            hsp.target.description,
            "TatA protein [Mannheimia succiniciproducens MBEL55E] >gi|52424555|ref|YP_087692.1| TatA protein [Mannheimia succiniciproducens MBEL55E]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLII  I+VLLFGTKKL ++G+DLG S+KGFKKAM++DEPK      DA+F +    D+ A    E+ K       DKEQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|523066         0 MGGISIWQLLIIVAIIVLLFGTKKLRTLGTDLGESVKGFKKAMNEDEPK------DAEFK
                  0 ||||||||...........||||||...|.|||.|.|||||||..||||------||.|.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|523066        54 SLN-KDESATAGSEKVK-------DKEQ  74
                 60 ...-.|..|....|..|-------||||  88
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[21]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|75429751|ref|ZP_00732413.1|")
        self.assertEqual(hit.target.name, "ZP_00732413")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein secretion pathway components [Actinobacillus succinogenes 130Z] >gi|74276959|gb|EAO50546.1| sec-independent protein secretion pathway components [Actinobacillus succinogenes 130Z]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=74)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 168.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 69.3218)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.36348e-11)
        self.assertEqual(hsp.annotations["identity"], 48)
        self.assertEqual(hsp.annotations["positive"], 59)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 44, 44, 48, 48, 74],
                          [14, 58, 59, 63, 69, 95]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 81))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...EDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGGISIWQLLIIVAIVVLLFGTKKLRTLGSDLGESVKGFKKAMAEEPKDAEFKS...EQA')",
        )
        self.assertEqual(hsp.target.id, "gi|75429751|ref|ZP_00732413.1|")
        self.assertEqual(hsp.target.name, "ZP_00732413")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein secretion pathway components [Actinobacillus succinogenes 130Z] >gi|74276959|gb|EAO50546.1| sec-independent protein secretion pathway components [Actinobacillus succinogenes 130Z]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLII  IVVLLFGTKKL ++GSDLG S+KGFKKAM+ +EPK      DA+F +   A+  A T +E+ + E A",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|754297         0 MGGISIWQLLIIVAIVVLLFGTKKLRTLGSDLGESVKGFKKAMA-EEPK------DAEFK
                  0 ||||||||...........||||||...|||||.|.|||||||.-.|||------||.|.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|754297        53 SLDKAENTAQTKKEEKEKEQA 74
                 60 ....|...|.|..|....|.| 81
gi|491764        74 AKTIADKQADTNQEQAKTEDA 95
""",
        )
        hit = hits[22]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|32033565|ref|ZP_00133892.1|")
        self.assertEqual(hit.target.name, "ZP_00133892")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Actinobacillus pleuropneumoniae serovar 1 str. 4074]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=76)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 165.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 68.1662)
        self.assertAlmostEqual(hsp.annotations["evalue"], 7.49305e-11)
        self.assertEqual(hsp.annotations["identity"], 43)
        self.assertEqual(hsp.annotations["positive"], 60)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 47, 47, 74],
                          [14, 61, 67, 94]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 80))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...TED'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISIWQLLIIVAIIVLLFGTKKLRTLGTDLGESVKGFKKAMADDKSQPQDAS...EKE'}, length=76)",
        )
        self.assertEqual(hsp.target.id, "gi|32033565|ref|ZP_00133892.1|")
        self.assertEqual(hsp.target.name, "ZP_00133892")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Actinobacillus pleuropneumoniae serovar 1 str. 4074]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLII  I+VLLFGTKKL ++G+DLG S+KGFKKAM+DD+      SQ  D + + +  K+A + +++AK ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|320335         0 MGGISIWQLLIIVAIIVLLFGTKKLRTLGTDLGESVKGFKKAMADDK------SQPQDAS
                  0 ||||||||...........||||||...|.|||.|.|||||||.||.------||..|..
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|320335        54 FEKVEAKEAASTEQKAKEKE 74
                 60 ......|.|......||... 80
gi|491764        74 AKTIADKQADTNQEQAKTED 94
""",
        )
        hit = hits[23]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|12722097|gb|AAK03773.1|")
        self.assertEqual(hit.target.name, "AAK03773")
        self.assertEqual(
            hit.target.description,
            "unknown [Pasteurella multocida subsp. multocida str. Pm70] >gi|15603554|ref|NP_246628.1| hypothetical protein PM1689 [Pasteurella multocida subsp. multocida str. Pm70] >gi|24212511|sp|Q9CKD3|TATA_PASMU Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=76)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 162.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 67.0106)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.66928e-10)
        self.assertEqual(hsp.annotations["identity"], 53)
        self.assertEqual(hsp.annotations["positive"], 63)
        self.assertEqual(hsp.annotations["gaps"], 13)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  49,  49,  54,  54,  64,  64,  71,  71,  75],
                          [ 14,  63,  68,  73,  75,  85,  89,  96,  98, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 88))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISITQLLIIVAIVVLLFGTKKLRTLGSDLGESVKGFKKAMADDNKEKDAEF...KEQ'}, length=76)",
        )
        self.assertEqual(hsp.target.id, "gi|12722097|gb|AAK03773.1|")
        self.assertEqual(hsp.target.name, "AAK03773")
        self.assertEqual(
            hsp.target.description,
            "unknown [Pasteurella multocida subsp. multocida str. Pm70] >gi|15603554|ref|NP_246628.1| hypothetical protein PM1689 [Pasteurella multocida subsp. multocida str. Pm70] >gi|24212511|sp|Q9CKD3|TATA_PASMU Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISI QLLII  IVVLLFGTKKL ++GSDLG S+KGFKKAM+DD  +     +DA+F  K+++D    T    AKTE AK  DKEQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|127220         0 MGGISITQLLIIVAIVVLLFGTKKLRTLGSDLGESVKGFKKAMADDNKE-----KDAEF-
                  0 ||||||.|...........||||||...|||||.|.|||||||.||...-----.||.|-
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|127220        54 -KSLSDDSETT----AKTEKAK--DKEQ  75
                 60 -|...|....|----||||.||--||||  88
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[24]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68546478|ref|ZP_00586025.1|")
        self.assertEqual(hit.target.name, "ZP_00586025")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Shewanella amazonensis SB2B] >gi|68515892|gb|EAN39606.1| Twin-arginine translocation protein TatA/E [Shewanella amazonensis SB2B]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=77)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 161.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 66.6254)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.18014e-10)
        self.assertEqual(hsp.annotations["identity"], 48)
        self.assertEqual(hsp.annotations["positive"], 56)
        self.assertEqual(hsp.annotations["gaps"], 13)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  49,  49,  75],
                          [ 14,  63,  76, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 88))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISIWQLLIIALIVVLLFGTKKLRSLGGDLGGAIKGFKNAMSDEEKKALEDK...KKE'}, length=77)",
        )
        self.assertEqual(hsp.target.id, "gi|68546478|ref|ZP_00586025.1|")
        self.assertEqual(hsp.target.name, "ZP_00586025")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Shewanella amazonensis SB2B] >gi|68515892|gb|EAN39606.1| Twin-arginine translocation protein TatA/E [Shewanella amazonensis SB2B]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLIIA+IVVLLFGTKKL S+G DLG +IKGFK AMSD+E K              + DK+A     Q  TE     DK++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|685464         0 MGGISIWQLLIIALIVVLLFGTKKLRSLGGDLGGAIKGFKNAMSDEEKK-----------
                  0 ||||||||...........||||||.|.|.|||..|||||.||||.|.|-----------
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|685464        49 --ALEDKEAAAQTTQQATEKKPEADKKE  75
                 60 --...||.|.....|..||.....||..  88
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[25]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|33151888|ref|NP_873241.1|")
        self.assertEqual(hit.target.name, "NP_873241")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein secretion pathway component TatA [Haemophilus ducreyi 35000HP] >gi|33148109|gb|AAP95630.1| sec-independent protein secretion pathway component TatA [Haemophilus ducreyi 35000HP] >gi|71153585|sp|Q7VN63|TATA_HAEDU Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=74)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 159.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 65.855)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.71876e-10)
        self.assertEqual(hsp.annotations["identity"], 45)
        self.assertEqual(hsp.annotations["positive"], 58)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 47, 47, 54, 54, 74],
                          [14, 61, 67, 74, 75, 95]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 81))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...EDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGGISIWQLLIIVAIIVLLFGTKKLRTLGTDLGESVKGFKKAMAEDKSQDANFD...EQA')",
        )
        self.assertEqual(hsp.target.id, "gi|33151888|ref|NP_873241.1|")
        self.assertEqual(hsp.target.name, "NP_873241")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein secretion pathway component TatA [Haemophilus ducreyi 35000HP] >gi|33148109|gb|AAP95630.1| sec-independent protein secretion pathway component TatA [Haemophilus ducreyi 35000HP] >gi|71153585|sp|Q7VN63|TATA_HAEDU Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLII  I+VLLFGTKKL ++G+DLG S+KGFKKAM++D+      SQDA+F  K  A +   T ++  + E A",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|331518         0 MGGISIWQLLIIVAIIVLLFGTKKLRTLGTDLGESVKGFKKAMAEDK------SQDANFD
                  0 ||||||||...........||||||...|.|||.|.|||||||..|.------||||.|.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|331518        54 -KVEAKESTSTTEKTKEKEQA 74
                 60 -|..|.....|.......|.| 81
gi|491764        74 AKTIADKQADTNQEQAKTEDA 95
""",
        )
        hit = hits[26]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|24375687|ref|NP_719730.1|")
        self.assertEqual(hit.target.name, "NP_719730")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein TatA [Shewanella oneidensis MR-1] >gi|24350613|gb|AAN57174.1| Sec-independent protein translocase protein TatA [Shewanella oneidensis MR-1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=88)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 159.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 65.855)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.71876e-10)
        self.assertEqual(hsp.annotations["identity"], 48)
        self.assertEqual(hsp.annotations["positive"], 59)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  76,  76,  87],
                          [ 14,  90,  91, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 88))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISIWQLLIIALIVVLLFGTKKLRSLGGDLGGAVKGFKNAMSSEEDKKALED...KEQ'}, length=88)",
        )
        self.assertEqual(hsp.target.id, "gi|24375687|ref|NP_719730.1|")
        self.assertEqual(hsp.target.name, "NP_719730")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein TatA [Shewanella oneidensis MR-1] >gi|24350613|gb|AAN57174.1| Sec-independent protein translocase protein TatA [Shewanella oneidensis MR-1]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLIIA+IVVLLFGTKKL S+G DLG ++KGFK AMS +E K+     +A    +T    Q+    +QA TE     +KEQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|243756         0 MGGISIWQLLIIALIVVLLFGTKKLRSLGGDLGGAVKGFKNAMSSEEDKKALEDAEAAKP
                  0 ||||||||...........||||||.|.|.|||...||||.|||..|.|.......|...
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|243756        60 VQTAQTVQSAQPTQQA-TEKKPESNKEQ  87
                 60 ..|....|......||-||......|||  88
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[27]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71278553|ref|YP_269744.1|")
        self.assertEqual(hit.target.name, "YP_269744")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein TatA [Colwellia psychrerythraea 34H] >gi|71144293|gb|AAZ24766.1| Sec-independent protein translocase protein TatA [Colwellia psychrerythraea 34H]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=79)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 158.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 65.4698)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.85685e-10)
        self.assertEqual(hsp.annotations["identity"], 47)
        self.assertEqual(hsp.annotations["positive"], 62)
        self.assertEqual(hsp.annotations["gaps"], 10)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  56,  56,  70,  71,  78],
                          [ 14,  70,  79,  93,  93, 100]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 87))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...HDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISIWQLVMIAVIVVLLFGTKKLKNLGADLGSSIKGFKKAITDVDDEDRTES...KDK'}, length=79)",
        )
        self.assertEqual(hsp.target.id, "gi|71278553|ref|YP_269744.1|")
        self.assertEqual(hsp.target.name, "YP_269744")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein TatA [Colwellia psychrerythraea 34H] >gi|71144293|gb|AAZ24766.1| Sec-independent protein translocase protein TatA [Colwellia psychrerythraea 34H]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQL++IAVIVVLLFGTKKL ++G+DLG+SIKGFKKA++D + +    S++         D  ADT+  +A+ E D K  DK",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|712785         0 MGGISIWQLVMIAVIVVLLFGTKKLKNLGADLGSSIKGFKKAITDVDDEDRTESKN----
                  0 ||||||||...........||||||...|.|||.||||||||..|........|..----
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|712785        56 -----DVLADTSNTEARVEVDVKEKDK  78
                 60 -----|..|||....|..|-|.|..||  87
gi|491764        74 AKTIADKQADTNQEQAKTE-DAKRHDK 100
""",
        )
        hit = hits[28]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|69159855|gb|EAN71956.1|")
        self.assertEqual(hit.target.name, "EAN71956")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Shewanella denitrificans OS217] >gi|69941450|ref|ZP_00633384.1| Twin-arginine translocation protein TatA/E [Shewanella denitrificans OS-217]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=79)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 157.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 65.0846)
        self.assertAlmostEqual(hsp.annotations["evalue"], 6.34325e-10)
        self.assertEqual(hsp.annotations["identity"], 47)
        self.assertEqual(hsp.annotations["positive"], 62)
        self.assertEqual(hsp.annotations["gaps"], 12)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  52,  52,  59,  60,  74,  74,  78],
                          [ 14,  66,  75,  82,  82,  96,  98, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 89))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISIWQLLIIALIVILLFGTKKLRSLGGDLGGAVKGFKNAMTSETSEEEKKA...KEQ'}, length=79)",
        )
        self.assertEqual(hsp.target.id, "gi|69159855|gb|EAN71956.1|")
        self.assertEqual(hsp.target.name, "EAN71956")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Shewanella denitrificans OS217] >gi|69941450|ref|ZP_00633384.1| Twin-arginine translocation protein TatA/E [Shewanella denitrificans OS-217]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLIIA+IV+LLFGTKKL S+G DLG ++KGFK AM+ +  +++K         K + D Q A T+Q+  K  ++K  DKEQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|691598         0 MGGISIWQLLIIALIVILLFGTKKLRSLGGDLGGAVKGFKNAMTSETSEEEK--------
                  0 ||||||||...........||||||.|.|.|||...||||.||........|--------
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|691598        52 -KALEDSQTAQTSQQAEKKPESK--DKEQ  78
                 60 -|...|.|-|.|.|...|....|--||||  89
gi|491764        74 AKTIADKQ-ADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[29]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|69949858|ref|ZP_00637822.1|")
        self.assertEqual(hit.target.name, "ZP_00637822")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Shewanella frigidimarina NCIMB 400] >gi|69166482|gb|EAN75453.1| Twin-arginine translocation protein TatA/E [Shewanella frigidimarina NCIMB 400]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=81)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 155.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 64.3142)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.08199e-09)
        self.assertEqual(hsp.annotations["identity"], 41)
        self.assertEqual(hsp.annotations["positive"], 58)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 63, 63, 78],
                          [14, 77, 79, 94]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 80))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...TED'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISIWQLLIVALIVILLFGTKKLRSLGGDLGGAVKGFKNAMTPEDENKSLDD...SKD'}, length=81)",
        )
        self.assertEqual(hsp.target.id, "gi|69949858|ref|ZP_00637822.1|")
        self.assertEqual(hsp.target.name, "ZP_00637822")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Shewanella frigidimarina NCIMB 400] >gi|69166482|gb|EAN75453.1| Twin-arginine translocation protein TatA/E [Shewanella frigidimarina NCIMB 400]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGISIWQLLI+A+IV+LLFGTKKL S+G DLG ++KGFK AM+ ++  +    ++ D TA T   +QA   Q + +++D",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|699498         0 MGGISIWQLLIVALIVILLFGTKKLRSLGGDLGGAVKGFKNAMTPEDENKSLDDKEKDQT
                  0 ||||||||...........||||||.|.|.|||...||||.||..............|.|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|699498        60 AAT--SQQAAEKQPETESKD 78
                 60 |.|--..||...|......| 80
gi|491764        74 AKTIADKQADTNQEQAKTED 94
""",
        )
        hit = hits[30]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|48863844|ref|ZP_00317737.1|")
        self.assertEqual(hit.target.name, "ZP_00317737")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein Mdeg02000203 [Microbulbifer degradans 2-40]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=83)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 154.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 63.929)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.41313e-09)
        self.assertEqual(hsp.annotations["identity"], 41)
        self.assertEqual(hsp.annotations["positive"], 53)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 2, 81],
                          [14, 93]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 79))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KTE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({2: 'LGGISIWQLLIVLVIVLLLFGTKRLKGLGGDLGGAIKGFKKAMSDDEAAKQEAE...KTE'}, length=83)",
        )
        self.assertEqual(hsp.target.id, "gi|48863844|ref|ZP_00317737.1|")
        self.assertEqual(hsp.target.name, "ZP_00317737")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein Mdeg02000203 [Microbulbifer degradans 2-40]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+GGISIWQLLI+ VIV+LLFGTK+L  +G DLG +IKGFKKAMSDDE  + +  +             A T +++ KTE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|488638         2 LGGISIWQLLIVLVIVLLLFGTKRLKGLGGDLGGAIKGFKKAMSDDEAAKQEAEEAEQKK
                  0 .|||||||...........||||.|...|.|||..||||||||||||.............
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|488638        62 VAAEEAAAAKTAEQKEKTE 81
                 60 ........|.|.....||| 79
gi|491764        74 AKTIADKQADTNQEQAKTE 93
""",
        )
        hit = hits[31]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|77361831|ref|YP_341406.1|")
        self.assertEqual(hit.target.name, "YP_341406")
        self.assertEqual(
            hit.target.description,
            "twin-arginine translocase subunit, sec-independent protein export [Pseudoalteromonas haloplanktis TAC125] >gi|76876742|emb|CAI87964.1| twin-arginine translocase subunit, sec-independent protein export [Pseudoalteromonas haloplanktis TAC125]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=82)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 145.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 60.4622)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.5624e-08)
        self.assertEqual(hsp.annotations["identity"], 39)
        self.assertEqual(hsp.annotations["positive"], 53)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 3, 47, 53, 81],
                          [15, 59, 59, 87]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 78))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({15: 'GGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ...TNQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({3: 'GGISLWQLLIVLAIIVLLFGTKKLRGIGGDLGGAVKGFKKAMSDEKNTDKEKPE...NNK'}, length=82)",
        )
        self.assertEqual(hsp.target.id, "gi|77361831|ref|YP_341406.1|")
        self.assertEqual(hsp.target.name, "YP_341406")
        self.assertEqual(
            hsp.target.description,
            "twin-arginine translocase subunit, sec-independent protein export [Pseudoalteromonas haloplanktis TAC125] >gi|76876742|emb|CAI87964.1| twin-arginine translocase subunit, sec-independent protein export [Pseudoalteromonas haloplanktis TAC125]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "GGIS+WQLLI+  I+VLLFGTKKL  IG DLG ++KGFKKAMSD      ++P+Q + S+++        +K  D N+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|773618         3 GGISLWQLLIVLAIIVLLFGTKKLRGIGGDLGGAVKGFKKAMSDEKNTDKEKPEQIQKSE
                  0 ||||.||...........||||||..||.|||...|||||||||------..|.|...|.
gi|491764        15 GGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSD------DEPKQDKTSQ

gi|773618        63 ESAPLDSAHTEKNKDNNK 81
                 60 ...........|..|.|. 78
gi|491764        69 DADFTAKTIADKQADTNQ 87
""",
        )
        hit = hits[32]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67676224|ref|ZP_00472975.1|")
        self.assertEqual(hit.target.name, "ZP_00472975")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Chromohalobacter salexigens DSM 3043] >gi|67519761|gb|EAM23710.1| Twin-arginine translocation protein TatA/E [Chromohalobacter salexigens DSM 3043]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=90)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 144.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 60.077)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.04055e-08)
        self.assertEqual(hsp.annotations["identity"], 40)
        self.assertEqual(hsp.annotations["positive"], 55)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 1, 51, 51, 62, 62, 73],
                          [14, 64, 68, 79, 81, 92]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 78))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...AKT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1: 'LGGISIWQLLIVLGIVILIFGTKKLRNLGSDLGGAVKGFKSAVGEEEQKKQDGE...LDT'}, length=90)",
        )
        self.assertEqual(hsp.target.id, "gi|67676224|ref|ZP_00472975.1|")
        self.assertEqual(hsp.target.name, "ZP_00472975")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Chromohalobacter salexigens DSM 3043] >gi|67519761|gb|EAM23710.1| Twin-arginine translocation protein TatA/E [Chromohalobacter salexigens DSM 3043]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+GGISIWQLLI+  IV+L+FGTKKL ++GSDLG ++KGFK A+ ++E K+    QD + TA+       DTN+E   T",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|676762         1 LGGISIWQLLIVLGIVILIFGTKKLRNLGSDLGGAVKGFKSAVGEEEQKK----QDGEET
                  0 .|||||||...........||||||...|||||...||||.|....|.|.----||...|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|676762        57 AQHRV--AHDTNEEPLDT 73
                 60 |....--..|||.|...| 78
gi|491764        74 AKTIADKQADTNQEQAKT 92
""",
        )
        hit = hits[33]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|74317722|ref|YP_315462.1|")
        self.assertEqual(hit.target.name, "YP_315462")
        self.assertEqual(
            hit.target.description,
            "twin-arginine translocation protein TatA/E [Thiobacillus denitrificans ATCC 25259] >gi|74057217|gb|AAZ97657.1| twin-arginine translocation protein TatA/E [Thiobacillus denitrificans ATCC 25259] >gi|52007795|ref|ZP_00335172.1| COG1826: Sec-independent protein secretion pathway components [Thiobacillus denitrificans ATCC 25259]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=70)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 142.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 59.3066)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.48066e-08)
        self.assertEqual(hsp.annotations["identity"], 34)
        self.assertEqual(hsp.annotations["positive"], 46)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 68],
                          [14, 82]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 68))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...DKQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLVVVLLIFGTKKLRNIGSDLGGAVKGFKEGMKDDAPKISESD...DKQ'}, length=70)",
        )
        self.assertEqual(hsp.target.id, "gi|74317722|ref|YP_315462.1|")
        self.assertEqual(hsp.target.name, "YP_315462")
        self.assertEqual(
            hsp.target.description,
            "twin-arginine translocation protein TatA/E [Thiobacillus denitrificans ATCC 25259] >gi|74057217|gb|AAZ97657.1| twin-arginine translocation protein TatA/E [Thiobacillus denitrificans ATCC 25259] >gi|52007795|ref|ZP_00335172.1| COG1826: Sec-independent protein secretion pathway components [Thiobacillus denitrificans ATCC 25259]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+ V+V+L+FGTKKL +IGSDLG ++KGFK+ M DD PK  ++ +        + DKQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|743177         0 MGSFSIWHWLIVLVVVLLIFGTKKLRNIGSDLGGAVKGFKEGMKDDAPKISESDKGGHTI
                  0 ||..|||............||||||..||||||...||||..|.||.||...........
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|743177        60 DAEVKDKQ 68
                 60 .....||| 68
gi|491764        74 AKTIADKQ 82
""",
        )
        hit = hits[34]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|77166504|ref|YP_345029.1|")
        self.assertEqual(hit.target.name, "YP_345029")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Nitrosococcus oceani ATCC 19707] >gi|76884818|gb|ABA59499.1| Twin-arginine translocation protein TatA/E [Nitrosococcus oceani ATCC 19707]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=90)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 140.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 58.5362)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.9371e-08)
        self.assertEqual(hsp.annotations["identity"], 41)
        self.assertEqual(hsp.annotations["positive"], 58)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 2, 49, 49, 54, 54, 76],
                          [14, 61, 67, 72, 73, 95]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 81))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...EDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({2: 'VGGISIWQLLIVLVIILLLFGTKKLRSIGTDLGSAIKGFRNSLRDEERRDAEEA...QQA'}, length=90)",
        )
        self.assertEqual(hsp.target.id, "gi|77166504|ref|YP_345029.1|")
        self.assertEqual(hsp.target.name, "YP_345029")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Nitrosococcus oceani ATCC 19707] >gi|76884818|gb|ABA59499.1| Twin-arginine translocation protein TatA/E [Nitrosococcus oceani ATCC 19707]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+GGISIWQLLI+ VI++LLFGTKKL SIG+DLG++IKGF+ ++ D+E       +DA+  A TI  KQA   +  ++ + A",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|771665         2 VGGISIWQLLIVLVIILLLFGTKKLRSIGTDLGSAIKGFRNSLRDEE------RRDAE-E
                  0 .|||||||...........||||||.|||.|||..||||.....|.|------..||.-.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|771665        55 AATIEHKQAHKAENPSQRQQA 76
                 60 |.||..|||...........| 81
gi|491764        74 AKTIADKQADTNQEQAKTEDA 95
""",
        )
        hit = hits[35]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|16128610|ref|NP_415160.1|")
        self.assertEqual(hit.target.name, "NP_415160")
        self.assertEqual(
            hit.target.description,
            "component of Sec-independent translocase [Escherichia coli K12] >gi|26246607|ref|NP_752647.1| Sec-independent protein translocase protein tatE [Escherichia coli CFT073] >gi|30062184|ref|NP_836355.1| hypothetical protein S0676 [Shigella flexneri 2a str. 2457T] >gi|24112073|ref|NP_706583.1| hypothetical protein SF0654 [Shigella flexneri 2a str. 301] >gi|15800341|ref|NP_286353.1| hypothetical protein Z0772 [Escherichia coli O157:H7 EDL933] >gi|24050900|gb|AAN42290.1| orf, conserved hypothetical protein [Shigella flexneri 2a str. 301] >gi|74311162|ref|YP_309581.1| hypothetical protein SSO_0580 [Shigella sonnei Ss046] >gi|1786845|gb|AAC73728.1| component of Sec-independent translocase [Escherichia coli K12] >gi|75514720|ref|ZP_00736975.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli 53638] >gi|75258637|ref|ZP_00730044.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli E22] >gi|75240782|ref|ZP_00724689.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli F11] >gi|75236608|ref|ZP_00720696.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli E110019] >gi|75229489|ref|ZP_00716036.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli B7A] >gi|75210746|ref|ZP_00710878.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli B171] >gi|75194810|ref|ZP_00704880.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli HS] >gi|75189665|ref|ZP_00702932.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli E24377A] >gi|75177456|ref|ZP_00697537.1| COG1826: Sec-independent protein secretion pathway components [Shigella boydii BS512] >gi|73854639|gb|AAZ87346.1| conserved hypothetical protein [Shigella sonnei Ss046] >gi|30040429|gb|AAP16161.1| hypothetical protein S0676 [Shigella flexneri 2a str. 2457T] >gi|13360123|dbj|BAB34088.1| Sec-independent protein translocase [Escherichia coli O157:H7] >gi|1778544|gb|AAB40827.1| HI0187 homolog [Escherichia coli] >gi|26107006|gb|AAN79190.1| Sec-independent protein translocase protein tatE [Escherichia coli CFT073] >gi|4062250|dbj|BAA35270.1| Hypothetical protein (lip 3' region) [Escherichia coli K12] >gi|67473128|sp|P0A843|TATE_ECOLI Sec-independent protein translocase protein tatE >gi|67473131|sp|P0A846|TATE_SHIFL Sec-independent protein translocase protein tatE >gi|67473130|sp|P0A845|TATE_ECO57 Sec-independent protein translocase protein tatE >gi|67473129|sp|P0A844|TATE_ECOL6 Sec-independent protein translocase protein tatE >gi|12513528|gb|AAG54961.1| orf, hypothetical protein [Escherichia coli O157:H7 EDL933] >gi|15829919|ref|NP_308692.1| Sec-independent protein translocase [Escherichia coli O157:H7]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=67)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 137.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 57.3806)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.32265e-07)
        self.assertEqual(hsp.annotations["identity"], 38)
        self.assertEqual(hsp.annotations["positive"], 51)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 50, 50, 67],
                          [14, 64, 65, 82]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 68))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...DKQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGEISITKLLVVAALVVLLFGTKKLRTLGGDLGAAIKGFKKAMNDDDAAAKKGA...HKE')",
        )
        self.assertEqual(hsp.target.id, "gi|16128610|ref|NP_415160.1|")
        self.assertEqual(hsp.target.name, "NP_415160")
        self.assertEqual(
            hsp.target.description,
            "component of Sec-independent translocase [Escherichia coli K12] >gi|26246607|ref|NP_752647.1| Sec-independent protein translocase protein tatE [Escherichia coli CFT073] >gi|30062184|ref|NP_836355.1| hypothetical protein S0676 [Shigella flexneri 2a str. 2457T] >gi|24112073|ref|NP_706583.1| hypothetical protein SF0654 [Shigella flexneri 2a str. 301] >gi|15800341|ref|NP_286353.1| hypothetical protein Z0772 [Escherichia coli O157:H7 EDL933] >gi|24050900|gb|AAN42290.1| orf, conserved hypothetical protein [Shigella flexneri 2a str. 301] >gi|74311162|ref|YP_309581.1| hypothetical protein SSO_0580 [Shigella sonnei Ss046] >gi|1786845|gb|AAC73728.1| component of Sec-independent translocase [Escherichia coli K12] >gi|75514720|ref|ZP_00736975.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli 53638] >gi|75258637|ref|ZP_00730044.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli E22] >gi|75240782|ref|ZP_00724689.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli F11] >gi|75236608|ref|ZP_00720696.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli E110019] >gi|75229489|ref|ZP_00716036.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli B7A] >gi|75210746|ref|ZP_00710878.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli B171] >gi|75194810|ref|ZP_00704880.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli HS] >gi|75189665|ref|ZP_00702932.1| COG1826: Sec-independent protein secretion pathway components [Escherichia coli E24377A] >gi|75177456|ref|ZP_00697537.1| COG1826: Sec-independent protein secretion pathway components [Shigella boydii BS512] >gi|73854639|gb|AAZ87346.1| conserved hypothetical protein [Shigella sonnei Ss046] >gi|30040429|gb|AAP16161.1| hypothetical protein S0676 [Shigella flexneri 2a str. 2457T] >gi|13360123|dbj|BAB34088.1| Sec-independent protein translocase [Escherichia coli O157:H7] >gi|1778544|gb|AAB40827.1| HI0187 homolog [Escherichia coli] >gi|26107006|gb|AAN79190.1| Sec-independent protein translocase protein tatE [Escherichia coli CFT073] >gi|4062250|dbj|BAA35270.1| Hypothetical protein (lip 3' region) [Escherichia coli K12] >gi|67473128|sp|P0A843|TATE_ECOLI Sec-independent protein translocase protein tatE >gi|67473131|sp|P0A846|TATE_SHIFL Sec-independent protein translocase protein tatE >gi|67473130|sp|P0A845|TATE_ECO57 Sec-independent protein translocase protein tatE >gi|67473129|sp|P0A844|TATE_ECOL6 Sec-independent protein translocase protein tatE >gi|12513528|gb|AAG54961.1| orf, hypothetical protein [Escherichia coli O157:H7 EDL933] >gi|15829919|ref|NP_308692.1| Sec-independent protein translocase [Escherichia coli O157:H7]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG ISI +LL++A +VVLLFGTKKL ++G DLGA+IKGFKKAM+DD+    K   D D  A+ ++ K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|161286         0 MGEISITKLLVVAALVVLLFGTKKLRTLGGDLGAAIKGFKKAMNDDDAAA-KKGADVDLQ
                  0 ||.|||.............||||||...|.||||.||||||||.||....-|...|.|..
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|161286        59 AEKLSHKE 67
                 60 |.....|. 68
gi|491764        74 AKTIADKQ 82
""",
        )
        hit = hits[36]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|12831974|emb|CAC29147.1|")
        self.assertEqual(hit.target.name, "CAC29147")
        self.assertEqual(hit.target.description, "TatA protein [Pseudomonas stutzeri]")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=76)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 136.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 56.9954)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.72743e-07)
        self.assertEqual(hsp.annotations["identity"], 36)
        self.assertEqual(hsp.annotations["positive"], 50)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 3, 51, 54, 71],
                          [15, 63, 63, 80]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 68))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({15: 'GGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ...IAD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({3: 'GGISIWQLLIILLIVIMLFGTKRLKGVGSDLGDAIKGFRKSMGTDEEKPSVEEK...VEE'}, length=76)",
        )
        self.assertEqual(hsp.target.id, "gi|12831974|emb|CAC29147.1|")
        self.assertEqual(hsp.target.name, "CAC29147")
        self.assertEqual(hsp.target.description, "TatA protein [Pseudomonas stutzeri]")
        self.assertEqual(
            hsp.annotations["midline"],
            "GGISIWQLLII +IV++LFGTK+L  +GSDLG +IKGF+K+M  DE K   ++K +   D  A+ + +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|128319         3 GGISIWQLLIILLIVIMLFGTKRLKGVGSDLGDAIKGFRKSMGTDEEKPSVEEKQNHTID
                  0 |||||||...........||||.|...|||||..||||.|.|..||.|---..|.....|
gi|491764        15 GGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPK---QDKTSQDAD

gi|128319        63 AQARKVEE 71
                 60 ..|..... 68
gi|491764        72 FTAKTIAD 80
""",
        )
        hit = hits[37]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|32029972|ref|ZP_00132908.1|")
        self.assertEqual(hit.target.name, "ZP_00132908")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Haemophilus somnus 2336] >gi|23467861|ref|ZP_00123438.1| COG1826: Sec-independent protein secretion pathway components [Haemophilus somnus 129PT]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=73)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 135.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 56.6102)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.2561e-07)
        self.assertEqual(hsp.annotations["identity"], 38)
        self.assertEqual(hsp.annotations["positive"], 57)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 1, 48, 48, 52, 52, 71],
                          [16, 63, 69, 73, 75, 94]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 78))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({16: 'GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD...TED'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1: 'GLSWQQLLILLLVVVVIFGTKKLRNIGSDLGGAVKDFKKAMNDDQPKDAEFKKI...QKE'}, length=73)",
        )
        self.assertEqual(hsp.target.id, "gi|32029972|ref|ZP_00132908.1|")
        self.assertEqual(hsp.target.name, "ZP_00132908")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Haemophilus somnus 2336] >gi|23467861|ref|ZP_00123438.1| COG1826: Sec-independent protein secretion pathway components [Haemophilus somnus 129PT]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "G+S  QLLI+ ++VV++FGTKKL +IGSDLG ++K FKKAM+DD+PK      DA+F  K I+++   T+ E +K ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|320299         1 GLSWQQLLILLLVVVVIFGTKKLRNIGSDLGGAVKDFKKAMNDDQPK------DAEF--K
                  0 |.|..|...........||||||..||||||...|.|||||.||.||------||.|--|
gi|491764        16 GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAK

gi|320299        53 KISEEVEQTSVENSKQKE 71
                 60 .|......|..|..|... 78
gi|491764        76 TIADKQADTNQEQAKTED 94
""",
        )
        hit = hits[38]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|455172|gb|AAA24073.1|")
        self.assertEqual(hit.target.name, "AAA24073")
        self.assertEqual(hit.target.description, "ORF; putative")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=67)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 134.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 56.225)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.94655e-07)
        self.assertEqual(hsp.annotations["identity"], 38)
        self.assertEqual(hsp.annotations["positive"], 50)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 50, 50, 67],
                          [14, 64, 65, 82]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 68))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...DKQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGEISITKLLVVAALVVLLFGTKKLRTLGGDLGAAIKGFKKAMIDDDAAAKKGA...HKE')",
        )
        self.assertEqual(hsp.target.id, "gi|455172|gb|AAA24073.1|")
        self.assertEqual(hsp.target.name, "AAA24073")
        self.assertEqual(hsp.target.description, "ORF; putative")
        self.assertEqual(
            hsp.annotations["midline"],
            "MG ISI +LL++A +VVLLFGTKKL ++G DLGA+IKGFKKAM DD+    K   D D  A+ ++ K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|455172         0 MGEISITKLLVVAALVVLLFGTKKLRTLGGDLGAAIKGFKKAMIDDDAAA-KKGADVDLQ
                  0 ||.|||.............||||||...|.||||.||||||||.||....-|...|.|..
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|455172        59 AEKLSHKE 67
                 60 |.....|. 68
gi|491764        74 AKTIADKQ 82
""",
        )
        hit = hits[39]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|1224007|gb|AAA92108.1|")
        self.assertEqual(hit.target.name, "AAA92108")
        self.assertEqual(hit.target.description, "ORF4")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=192)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 133.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 55.8398)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.84832e-07)
        self.assertEqual(hsp.annotations["identity"], 36)
        self.assertEqual(hsp.annotations["positive"], 48)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 3, 49, 53, 62],
                          [15, 61, 61, 70]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 59))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({15: 'GGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({3: 'GGISIWQLLIILLIVVMLFGTKRLKSLGSDLGDAIKGFRKSMDNEENKAPPVEEQKGQD'}, length=192)",
        )
        self.assertEqual(hsp.target.id, "gi|1224007|gb|AAA92108.1|")
        self.assertEqual(hsp.target.name, "AAA92108")
        self.assertEqual(hsp.target.description, "ORF4")
        self.assertEqual(
            hsp.annotations["midline"],
            "GGISIWQLLII +IVV+LFGTK+L S+GSDLG +IKGF+K+M ++E    P +++  QD",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|122400         3 GGISIWQLLIILLIVVMLFGTKRLKSLGSDLGDAIKGFRKSMDNEENKAPPVEEQKGQD
                  0 |||||||...........||||.|.|.|||||..||||.|.|...|----|......||
gi|491764        15 GGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE----PKQDKTSQD

gi|122400        62
                 59
gi|491764        70
""",
        )
        hit = hits[40]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68056990|gb|AAX87243.1|")
        self.assertEqual(hit.target.name, "AAX87243")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein TatA/E [Haemophilus influenzae 86-028NP] >gi|68248791|ref|YP_247903.1| Sec-independent protein translocase protein TatA/E [Haemophilus influenzae 86-028NP]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=95)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 131.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 55.0694)
        self.assertAlmostEqual(hsp.annotations["evalue"], 6.56423e-07)
        self.assertEqual(hsp.annotations["identity"], 39)
        self.assertEqual(hsp.annotations["positive"], 60)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 7, 63, 63, 74, 74, 93],
                          [ 1, 57, 62, 73, 75, 94]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 93))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({1: 'RLCLIIIYHRGTCMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKK...TED'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({7: 'RAKFFLFYRTEFIMFGLSPAQLIILLVVILLIFGTKKLRNAGSDLGAAVKGFKK...EKE'}, length=95)",
        )
        self.assertEqual(hsp.target.id, "gi|68056990|gb|AAX87243.1|")
        self.assertEqual(hsp.target.name, "AAX87243")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein TatA/E [Haemophilus influenzae 86-028NP] >gi|68248791|ref|YP_247903.1| Sec-independent protein translocase protein TatA/E [Haemophilus influenzae 86-028NP]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "R    + Y     M G+S  QL+I+ V+++L+FGTKKL + GSDLGA++KGFKKAM     K+D+  +DA+F  K+I ++ A   +E  K ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|680569         7 RAKFFLFYRTEFIMFGLSPAQLIILLVVILLIFGTKKLRNAGSDLGAAVKGFKKAM----
                  0 |......|.....|.|.|..|...........||||||...||||||..|||||||----
gi|491764         1 RLCLIIIYHRGTCMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE

gi|680569        63 -KEDEKVKDAEF--KSIDNETASAKKENIKEKE 93
                 60 -|.|....||.|--|.|....|....|..|... 93
gi|491764        61 PKQDKTSQDADFTAKTIADKQADTNQEQAKTED 94
""",
        )
        hit = hits[41]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|56461470|ref|YP_156751.1|")
        self.assertEqual(hit.target.name, "YP_156751")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein secretion pathway component, TatA family [Idiomarina loihiensis L2TR] >gi|56180480|gb|AAV83202.1| Sec-independent protein secretion pathway component, TatA family [Idiomarina loihiensis L2TR]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=73)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 129.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 54.299)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.11969e-06)
        self.assertEqual(hsp.annotations["identity"], 33)
        self.assertEqual(hsp.annotations["positive"], 43)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 1, 51],
                          [16, 66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 50))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({16: 'GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1: 'GVSPWQLLILLVIVVLLFGTKRLRSLGSDLGNAVKGFKKSMGDEDDSKDK'}, length=73)",
        )
        self.assertEqual(hsp.target.id, "gi|56461470|ref|YP_156751.1|")
        self.assertEqual(hsp.target.name, "YP_156751")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein secretion pathway component, TatA family [Idiomarina loihiensis L2TR] >gi|56180480|gb|AAV83202.1| Sec-independent protein secretion pathway component, TatA family [Idiomarina loihiensis L2TR]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "G+S WQLLI+ VIVVLLFGTK+L S+GSDLG ++KGFKK+M D++  +DK",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|564614         1 GVSPWQLLILLVIVVLLFGTKRLRSLGSDLGNAVKGFKKSMGDEDDSKDK 51
                  0 |.|.||...........||||.|.|.|||||...|||||.|.|.....|| 50
gi|491764        16 GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK 66
""",
        )
        hit = hits[42]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|76793313|ref|ZP_00775802.1|")
        self.assertEqual(hit.target.name, "ZP_00775802")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Pseudoalteromonas atlantica T6c] >gi|76591415|gb|EAO67616.1| Twin-arginine translocation protein TatA/E [Pseudoalteromonas atlantica T6c]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=84)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 128.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 53.9138)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.46236e-06)
        self.assertEqual(hsp.annotations["identity"], 43)
        self.assertEqual(hsp.annotations["positive"], 57)
        self.assertEqual(hsp.annotations["gaps"], 11)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  47,  47,  65,  69,  84],
                          [ 14,  61,  68,  86,  86, 101]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 91))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...DKE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MFGISPMQLIIILVIVVLLFGTKKLRNMGGDLGSAVKGFKKAVSDDDKDADFKA...KSE')",
        )
        self.assertEqual(hsp.target.id, "gi|76793313|ref|ZP_00775802.1|")
        self.assertEqual(hsp.target.name, "ZP_00775802")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Pseudoalteromonas atlantica T6c] >gi|76591415|gb|EAO67616.1| Twin-arginine translocation protein TatA/E [Pseudoalteromonas atlantica T6c]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "M GIS  QL+II VIVVLLFGTKKL ++G DLG+++KGFKKA+SDD+       +DADF A    +  +  N    Q+  K+E   +   E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|767933         0 MFGISPMQLIIILVIVVLLFGTKKLRNMGGDLGSAVKGFKKAVSDDD-------KDADFK
                  0 |.|||..|...........||||||...|.|||...||||||.|||.-------.||||.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|767933        53 ADEKVEDNSKANDQTVQQNVKSESDTKAKSE  84
                 60 |..........|----|...|.|.......|  91
gi|491764        74 AKTIADKQADTN----QEQAKTEDAKRHDKE 101
""",
        )
        hit = hits[43]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|42630489|ref|ZP_00156028.1|")
        self.assertEqual(hit.target.name, "ZP_00156028")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Haemophilus influenzae R2866] >gi|42629145|ref|ZP_00154694.1| COG1826: Sec-independent protein secretion pathway components [Haemophilus influenzae R2846]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=75)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 127.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 53.5286)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.9099e-06)
        self.assertEqual(hsp.annotations["identity"], 37)
        self.assertEqual(hsp.annotations["positive"], 57)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 43, 43, 54, 54, 73],
                          [14, 57, 62, 73, 75, 94]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 80))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...TED'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MFGLSPAQLIILLVVILLIFGTKKLRNAGSDLGAAVKGFKKAMKEDEKVKDAEF...EKE'}, length=75)",
        )
        self.assertEqual(hsp.target.id, "gi|42630489|ref|ZP_00156028.1|")
        self.assertEqual(hsp.target.name, "ZP_00156028")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Haemophilus influenzae R2866] >gi|42629145|ref|ZP_00154694.1| COG1826: Sec-independent protein secretion pathway components [Haemophilus influenzae R2846]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "M G+S  QL+I+ V+++L+FGTKKL + GSDLGA++KGFKKAM     K+D+  +DA+F  K+I ++ A   +E  K ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|426304         0 MFGLSPAQLIILLVVILLIFGTKKLRNAGSDLGAAVKGFKKAM-----KEDEKVKDAEF-
                  0 |.|.|..|...........||||||...||||||..|||||||-----|.|....||.|-
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|426304        54 -KSIDNETASAKKENIKEKE 73
                 60 -|.|....|....|..|... 80
gi|491764        74 AKTIADKQADTNQEQAKTED 94
""",
        )
        hit = hits[44]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|1074302|pir||B64145")
        self.assertEqual(hit.target.name, "B64145")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein HI0187 - Haemophilus influenzae (strain Rd KW20)",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=109)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 126.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 53.1434)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.49441e-06)
        self.assertEqual(hsp.annotations["identity"], 39)
        self.assertEqual(hsp.annotations["positive"], 59)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 7, 63, 63, 74, 74, 92],
                          [ 1, 57, 62, 73, 75, 93]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 92))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({1: 'RLCLIIIYHRGTCMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKK...KTE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({7: 'RAKFFLFYRTEFIMFGLSPAQLIILLVVILLIFGTKKLRNAGSDLGAAVKGFKK...KRE'}, length=109)",
        )
        self.assertEqual(hsp.target.id, "gi|1074302|pir||B64145")
        self.assertEqual(hsp.target.name, "B64145")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein HI0187 - Haemophilus influenzae (strain Rd KW20)",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "R    + Y     M G+S  QL+I+ V+++L+FGTKKL + GSDLGA++KGFKKAM     K+D+  +DA+F  K+I ++ A   + + K E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|107430         7 RAKFFLFYRTEFIMFGLSPAQLIILLVVILLIFGTKKLRNAGSDLGAAVKGFKKAM----
                  0 |......|.....|.|.|..|...........||||||...||||||..|||||||----
gi|491764         1 RLCLIIIYHRGTCMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE

gi|107430        63 -KEDEKVKDAEF--KSIDNETASAKKGKYKRE 92
                 60 -|.|....||.|--|.|....|.......|.| 92
gi|491764        61 PKQDKTSQDADFTAKTIADKQADTNQEQAKTE 93
""",
        )
        hit = hits[45]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67641583|ref|ZP_00440359.1|")
        self.assertEqual(hit.target.name, "ZP_00440359")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Burkholderia mallei GB8 horse 4] >gi|67635791|ref|ZP_00434743.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia mallei 10399] >gi|67760276|ref|ZP_00498999.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia pseudomallei S13] >gi|67756151|ref|ZP_00495038.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia pseudomallei Pasteur] >gi|67737955|ref|ZP_00488671.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia pseudomallei 668] >gi|67716050|ref|ZP_00485411.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia pseudomallei 1710b] >gi|67684327|ref|ZP_00478308.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia pseudomallei 1710a] >gi|67671615|ref|ZP_00468402.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia pseudomallei 1655] >gi|67651364|ref|ZP_00448787.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia mallei SAVP1] >gi|67646939|ref|ZP_00445189.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia mallei NCTC 10247] >gi|67629330|ref|ZP_00429188.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia mallei 10229] >gi|76809713|ref|YP_335046.1| TatA [Burkholderia pseudomallei 1710b] >gi|76579166|gb|ABA48641.1| TatA [Burkholderia pseudomallei 1710b] >gi|52427678|gb|AAU48271.1| twin-arginine translocation protein, TatA/E family [Burkholderia mallei ATCC 23344] >gi|52211149|emb|CAH37138.1| Sec-independent protein translocase protein TatA [Burkholderia pseudomallei K96243] >gi|53720735|ref|YP_109721.1| Sec-independent protein translocase protein TatA [Burkholderia pseudomallei K96243] >gi|69991749|ref|ZP_00643311.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia mallei FMH]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=77)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 125.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 52.7582)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.25779e-06)
        self.assertEqual(hsp.annotations["identity"], 29)
        self.assertEqual(hsp.annotations["positive"], 39)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 51],
                          [14, 65]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 51))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGLSIWHWLIVLLIVALVFGTKKLRNIGNDLGSAVKGFKDGMKESEAPAD'}, length=77)",
        )
        self.assertEqual(hsp.target.id, "gi|67641583|ref|ZP_00440359.1|")
        self.assertEqual(hsp.target.name, "ZP_00440359")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Burkholderia mallei GB8 horse 4] >gi|67635791|ref|ZP_00434743.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia mallei 10399] >gi|67760276|ref|ZP_00498999.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia pseudomallei S13] >gi|67756151|ref|ZP_00495038.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia pseudomallei Pasteur] >gi|67737955|ref|ZP_00488671.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia pseudomallei 668] >gi|67716050|ref|ZP_00485411.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia pseudomallei 1710b] >gi|67684327|ref|ZP_00478308.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia pseudomallei 1710a] >gi|67671615|ref|ZP_00468402.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia pseudomallei 1655] >gi|67651364|ref|ZP_00448787.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia mallei SAVP1] >gi|67646939|ref|ZP_00445189.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia mallei NCTC 10247] >gi|67629330|ref|ZP_00429188.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia mallei 10229] >gi|76809713|ref|YP_335046.1| TatA [Burkholderia pseudomallei 1710b] >gi|76579166|gb|ABA48641.1| TatA [Burkholderia pseudomallei 1710b] >gi|52427678|gb|AAU48271.1| twin-arginine translocation protein, TatA/E family [Burkholderia mallei ATCC 23344] >gi|52211149|emb|CAH37138.1| Sec-independent protein translocase protein TatA [Burkholderia pseudomallei K96243] >gi|53720735|ref|YP_109721.1| Sec-independent protein translocase protein TatA [Burkholderia pseudomallei K96243] >gi|69991749|ref|ZP_00643311.1| COG1826: Sec-independent protein secretion pathway components [Burkholderia mallei FMH]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGG+SIW  LI+ +IV L+FGTKKL +IG+DLG+++KGFK  M + E   D",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|676415         0 MGGLSIWHWLIVLLIVALVFGTKKLRNIGNDLGSAVKGFKDGMKESEAPAD 51
                  0 |||.|||............||||||..||.|||...||||..|...|...| 51
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQD 65
""",
        )
        hit = hits[46]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67545726|ref|ZP_00423646.1|")
        self.assertEqual(hit.target.name, "ZP_00423646")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Burkholderia vietnamiensis G4] >gi|67533055|gb|EAM29828.1| Twin-arginine translocation protein TatA/E [Burkholderia vietnamiensis G4] >gi|74019444|ref|ZP_00690060.1| Twin-arginine translocation protein TatA/E [Burkholderia ambifaria AMMD] >gi|72607861|gb|EAO43817.1| Twin-arginine translocation protein TatA/E [Burkholderia ambifaria AMMD]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=76)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 125.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 52.7582)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.25779e-06)
        self.assertEqual(hsp.annotations["identity"], 35)
        self.assertEqual(hsp.annotations["positive"], 51)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 43, 43, 58, 58, 75],
                          [14, 57, 62, 77, 80, 97]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 83))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...AKR'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGLSIWHWLIVLLIVALVFGTKKLRNIGNDLGSAVKGFKDGMKEGETPADAQQ...SNK'}, length=76)",
        )
        self.assertEqual(hsp.target.id, "gi|67545726|ref|ZP_00423646.1|")
        self.assertEqual(hsp.target.name, "ZP_00423646")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Burkholderia vietnamiensis G4] >gi|67533055|gb|EAM29828.1| Twin-arginine translocation protein TatA/E [Burkholderia vietnamiensis G4] >gi|74019444|ref|ZP_00690060.1| Twin-arginine translocation protein TatA/E [Burkholderia ambifaria AMMD] >gi|72607861|gb|EAO43817.1| Twin-arginine translocation protein TatA/E [Burkholderia ambifaria AMMD]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGG+SIW  LI+ +IV L+FGTKKL +IG+DLG+++KGFK  M     K+ +T  DA    +T      D N ++    D+ +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|675457         0 MGGLSIWHWLIVLLIVALVFGTKKLRNIGNDLGSAVKGFKDGM-----KEGETPADAQQL
                  0 |||.|||............||||||..||.|||...||||..|-----|...|..||...
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|675457        55 PRT---GTVDVNAKETTRSDSNK 75
                 60 ..|---...|.|.......|... 83
gi|491764        74 AKTIADKQADTNQEQAKTEDAKR 97
""",
        )
        hit = hits[47]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|45435806|gb|AAS61363.1|")
        self.assertEqual(hit.target.name, "AAS61363")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein translocase protein [Yersinia pestis biovar Medievalis str. 91001] >gi|51595437|ref|YP_069628.1| sec-independent protein translocase protein [Yersinia pseudotuberculosis IP 32953] >gi|22125073|ref|NP_668496.1| hypothetical protein y1170 [Yersinia pestis KIM] >gi|77636535|ref|ZP_00798608.1| COG1826: Sec-independent protein secretion pathway components [Yersinia pestis Angola] >gi|77632039|ref|ZP_00794625.1| COG1826: Sec-independent protein secretion pathway components [Yersinia pseudotuberculosis IP 31758] >gi|51588719|emb|CAH20330.1| sec-independent protein translocase protein [Yersinia pseudotuberculosis IP 32953] >gi|15980584|emb|CAC92840.1| sec-independent protein translocase protein [Yersinia pestis CO92] >gi|21957926|gb|AAM84747.1| hypothetical protein [Yersinia pestis KIM] >gi|45440947|ref|NP_992486.1| sec-independent protein translocase protein [Yersinia pestis biovar Medievalis str. 91001] >gi|16122810|ref|NP_406123.1| sec-independent protein translocase protein [Yersinia pestis CO92] >gi|25302680|pir||AI0316 sec-independent protein translocase protein [imported] - Yersinia pestis (strain CO92) >gi|24212499|sp|Q8ZDH1|TATE_YERPE Sec-independent protein translocase protein tatE",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=85)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 125.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 52.7582)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.25779e-06)
        self.assertEqual(hsp.annotations["identity"], 34)
        self.assertEqual(hsp.annotations["positive"], 58)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 61, 63, 84],
                          [14, 75, 75, 96]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 84))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...DAK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MEGLSITKLLVVGILIVLLFGTSKLRTLGADLGAALKGFKKAMRNDDEVSTSVL...ERK'}, length=85)",
        )
        self.assertEqual(hsp.target.id, "gi|45435806|gb|AAS61363.1|")
        self.assertEqual(hsp.target.name, "AAS61363")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein translocase protein [Yersinia pestis biovar Medievalis str. 91001] >gi|51595437|ref|YP_069628.1| sec-independent protein translocase protein [Yersinia pseudotuberculosis IP 32953] >gi|22125073|ref|NP_668496.1| hypothetical protein y1170 [Yersinia pestis KIM] >gi|77636535|ref|ZP_00798608.1| COG1826: Sec-independent protein secretion pathway components [Yersinia pestis Angola] >gi|77632039|ref|ZP_00794625.1| COG1826: Sec-independent protein secretion pathway components [Yersinia pseudotuberculosis IP 31758] >gi|51588719|emb|CAH20330.1| sec-independent protein translocase protein [Yersinia pseudotuberculosis IP 32953] >gi|15980584|emb|CAC92840.1| sec-independent protein translocase protein [Yersinia pestis CO92] >gi|21957926|gb|AAM84747.1| hypothetical protein [Yersinia pestis KIM] >gi|45440947|ref|NP_992486.1| sec-independent protein translocase protein [Yersinia pestis biovar Medievalis str. 91001] >gi|16122810|ref|NP_406123.1| sec-independent protein translocase protein [Yersinia pestis CO92] >gi|25302680|pir||AI0316 sec-independent protein translocase protein [imported] - Yersinia pestis (strain CO92) >gi|24212499|sp|Q8ZDH1|TATE_YERPE Sec-independent protein translocase protein tatE",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "M G+SI +LL++ +++VLLFGT KL ++G+DLGA++KGFKKAM +D+        +   +A  KT+A+ +A ++ + A + + K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|454358         0 MEGLSITKLLVVGILIVLLFGTSKLRTLGADLGAALKGFKKAMRNDDEVSTSVLGETKMS
                  0 |.|.||.............|||.||...|.||||..|||||||..|..............
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|454358        60 AETKTVAETKAASDSQAAASVERK 84
                 60 |--||.|...|......|.....| 84
gi|491764        74 A--KTIADKQADTNQEQAKTEDAK 96
""",
        )
        hit = hits[48]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|49610761|emb|CAG74206.1|")
        self.assertEqual(hit.target.name, "CAG74206")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein [Erwinia carotovora subsp. atroseptica SCRI1043] >gi|50120235|ref|YP_049402.1| Sec-independent protein translocase protein [Erwinia carotovora subsp. atroseptica SCRI1043]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=65)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 125.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 52.7582)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.25779e-06)
        self.assertEqual(hsp.annotations["identity"], 37)
        self.assertEqual(hsp.annotations["positive"], 47)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 48, 49, 63],
                          [14, 62, 62, 76]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 63))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...TAK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MEGISIAKLLVIGALIVLLFGTNKLRSLGGDLGAAIKGFKKAMNDDQSVKTDDT...SRK'}, length=65)",
        )
        self.assertEqual(hsp.target.id, "gi|49610761|emb|CAG74206.1|")
        self.assertEqual(hsp.target.name, "CAG74206")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein [Erwinia carotovora subsp. atroseptica SCRI1043] >gi|50120235|ref|YP_049402.1| Sec-independent protein translocase protein [Erwinia carotovora subsp. atroseptica SCRI1043]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "M GISI +LL+I  ++VLLFGT KL S+G DLGA+IKGFKKAM+DD+  K D T+   D + K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|496107         0 MEGISIAKLLVIGALIVLLFGTNKLRSLGGDLGAAIKGFKKAMNDDQSVKTDDTAALNDS
                  0 |.||||.............|||.||.|.|.||||.||||||||.||..-|.|.|....|.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEP-KQDKTSQDADF

gi|496107        60 SRK 63
                 60 ..| 63
gi|491764        73 TAK 76
""",
        )
        hit = hits[49]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67663266|ref|ZP_00460549.1|")
        self.assertEqual(hit.target.name, "ZP_00460549")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Burkholderia cenocepacia HI2424] >gi|67659452|ref|ZP_00456814.1| Twin-arginine translocation protein TatA/E [Burkholderia cenocepacia AU 1054] >gi|67103109|gb|EAM20236.1| Twin-arginine translocation protein TatA/E [Burkholderia cenocepacia HI2424] >gi|67093009|gb|EAM10556.1| Twin-arginine translocation protein TatA/E [Burkholderia cenocepacia AU 1054]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=76)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 124.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 52.373)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.25481e-06)
        self.assertEqual(hsp.annotations["identity"], 29)
        self.assertEqual(hsp.annotations["positive"], 39)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 51],
                          [14, 65]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 51))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGLSIWHWLIVLLIVALVFGTKKLRNIGNDLGSAVKGFKDGMKEGETPAD'}, length=76)",
        )
        self.assertEqual(hsp.target.id, "gi|67663266|ref|ZP_00460549.1|")
        self.assertEqual(hsp.target.name, "ZP_00460549")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Burkholderia cenocepacia HI2424] >gi|67659452|ref|ZP_00456814.1| Twin-arginine translocation protein TatA/E [Burkholderia cenocepacia AU 1054] >gi|67103109|gb|EAM20236.1| Twin-arginine translocation protein TatA/E [Burkholderia cenocepacia HI2424] >gi|67093009|gb|EAM10556.1| Twin-arginine translocation protein TatA/E [Burkholderia cenocepacia AU 1054]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGG+SIW  LI+ +IV L+FGTKKL +IG+DLG+++KGFK  M + E   D",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|676632         0 MGGLSIWHWLIVLLIVALVFGTKKLRNIGNDLGSAVKGFKDGMKEGETPAD 51
                  0 |||.|||............||||||..||.|||...||||..|...|...| 51
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQD 65
""",
        )
        hit = hits[50]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|33594634|ref|NP_882278.1|")
        self.assertEqual(hit.target.name, "NP_882278")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein [Bordetella pertussis Tohama I] >gi|33598762|ref|NP_886405.1| Sec-independent protein translocase protein [Bordetella parapertussis 12822] >gi|33603836|ref|NP_891396.1| Sec-independent protein translocase protein [Bordetella bronchiseptica RB50] >gi|33577961|emb|CAE35226.1| Sec-independent protein translocase protein [Bordetella bronchiseptica RB50] >gi|33574892|emb|CAE39555.1| Sec-independent protein translocase protein [Bordetella parapertussis] >gi|33564710|emb|CAE44033.1| Sec-independent protein translocase protein [Bordetella pertussis Tohama I]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=75)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 124.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 52.373)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.25481e-06)
        self.assertEqual(hsp.annotations["identity"], 31)
        self.assertEqual(hsp.annotations["positive"], 41)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 45, 48, 58],
                          [14, 59, 59, 69]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 58))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLVIIALVFGTKKLRNVGSDLGSAVKGFKEGMKDASADKPADQVTQQ'}, length=75)",
        )
        self.assertEqual(hsp.target.id, "gi|33594634|ref|NP_882278.1|")
        self.assertEqual(hsp.target.name, "NP_882278")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein [Bordetella pertussis Tohama I] >gi|33598762|ref|NP_886405.1| Sec-independent protein translocase protein [Bordetella parapertussis 12822] >gi|33603836|ref|NP_891396.1| Sec-independent protein translocase protein [Bordetella bronchiseptica RB50] >gi|33577961|emb|CAE35226.1| Sec-independent protein translocase protein [Bordetella bronchiseptica RB50] >gi|33574892|emb|CAE39555.1| Sec-independent protein translocase protein [Bordetella parapertussis] >gi|33564710|emb|CAE44033.1| Sec-independent protein translocase protein [Bordetella pertussis Tohama I]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+ VI+ L+FGTKKL ++GSDLG+++KGFK+ M D   D+P    T Q",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|335946         0 MGSFSIWHWLIVLVIIALVFGTKKLRNVGSDLGSAVKGFKEGMKDASADKPADQVTQQ 58
                  0 ||..|||............||||||...|||||...||||..|.|---|.|....|.| 58
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSD---DEPKQDKTSQ 69
""",
        )
        hit = hits[51]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|46310681|ref|ZP_00211309.1|")
        self.assertEqual(hit.target.name, "ZP_00211309")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Burkholderia cepacia R18194]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=76)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 124.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 52.373)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.25481e-06)
        self.assertEqual(hsp.annotations["identity"], 29)
        self.assertEqual(hsp.annotations["positive"], 39)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 51],
                          [14, 65]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 51))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGLSIWHWLIVLLIVALVFGTKKLRNIGNDLGSAVKGFKDGMKEGEAPAD'}, length=76)",
        )
        self.assertEqual(hsp.target.id, "gi|46310681|ref|ZP_00211309.1|")
        self.assertEqual(hsp.target.name, "ZP_00211309")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Burkholderia cepacia R18194]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGG+SIW  LI+ +IV L+FGTKKL +IG+DLG+++KGFK  M + E   D",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|463106         0 MGGLSIWHWLIVLLIVALVFGTKKLRNIGNDLGSAVKGFKDGMKEGEAPAD 51
                  0 |||.|||............||||||..||.|||...||||..|...|...| 51
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQD 65
""",
        )
        hit = hits[52]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|58584031|ref|YP_203047.1|")
        self.assertEqual(hit.target.name, "YP_203047")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein translocase [Xanthomonas oryzae pv. oryzae KACC10331] >gi|21244935|ref|NP_644517.1| sec-independent protein translocase [Xanthomonas axonopodis pv. citri str. 306] >gi|21110652|gb|AAM39053.1| sec-independent protein translocase [Xanthomonas axonopodis pv. citri str. 306] >gi|58428625|gb|AAW77662.1| sec-independent protein translocase [Xanthomonas oryzae pv. oryzae KACC10331] >gi|24212477|sp|Q8PEX2|TATA_XANAC Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=75)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 123.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 51.9878)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.55696e-06)
        self.assertEqual(hsp.annotations["identity"], 34)
        self.assertEqual(hsp.annotations["positive"], 49)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 58, 58, 73],
                          [14, 72, 73, 88]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 74))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...NQE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGFSIWHWLIVLVIVLLVFGTKRLTSGAKDLGSAVKEFKKGMHDDDKPAGKLG...DRD'}, length=75)",
        )
        self.assertEqual(hsp.target.id, "gi|58584031|ref|YP_203047.1|")
        self.assertEqual(hsp.target.name, "YP_203047")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein translocase [Xanthomonas oryzae pv. oryzae KACC10331] >gi|21244935|ref|NP_644517.1| sec-independent protein translocase [Xanthomonas axonopodis pv. citri str. 306] >gi|21110652|gb|AAM39053.1| sec-independent protein translocase [Xanthomonas axonopodis pv. citri str. 306] >gi|58428625|gb|AAW77662.1| sec-independent protein translocase [Xanthomonas oryzae pv. oryzae KACC10331] >gi|24212477|sp|Q8PEX2|TATA_XANAC Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGG SIW  LI+ VIV+L+FGTK+L S   DLG+++K FKK M DD+    K   D+  TA+   + QA+ +++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|585840         0 MGGFSIWHWLIVLVIVLLVFGTKRLTSGAKDLGSAVKEFKKGMHDDDKPAGKLGDDSR-T
                  0 |||.|||............||||.|.|...|||...|.|||.|.||.....|...|..-|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|585840        59 AEQAREAQAERDRD 73
                 60 |......||..... 74
gi|491764        74 AKTIADKQADTNQE 88
""",
        )
        hit = hits[53]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|17429965|emb|CAD16649.1|")
        self.assertEqual(hit.target.name, "CAD16649")
        self.assertEqual(
            hit.target.description,
            "PROBABLE SIGNAL PEPTIDE PROTEIN [Ralstonia solanacearum] >gi|17547661|ref|NP_521063.1| PROBABLE SIGNAL PEPTIDE PROTEIN [Ralstonia solanacearum GMI1000] >gi|24212492|sp|Q8XV89|TATA_RALSO Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=85)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 123.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 51.9878)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.55696e-06)
        self.assertEqual(hsp.annotations["identity"], 30)
        self.assertEqual(hsp.annotations["positive"], 44)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 43, 46, 60],
                          [14, 57, 57, 71]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 60))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLLIIMMVFGTKKLRNIGSDLGSAVKGFKEGMREGSEDKPAGSQQGQQA'}, length=85)",
        )
        self.assertEqual(hsp.target.id, "gi|17429965|emb|CAD16649.1|")
        self.assertEqual(hsp.target.name, "CAD16649")
        self.assertEqual(
            hsp.target.description,
            "PROBABLE SIGNAL PEPTIDE PROTEIN [Ralstonia solanacearum] >gi|17547661|ref|NP_521063.1| PROBABLE SIGNAL PEPTIDE PROTEIN [Ralstonia solanacearum GMI1000] >gi|24212492|sp|Q8XV89|TATA_RALSO Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+ +I++++FGTKKL +IGSDLG+++KGFK+ M   S+D+P   +  Q A",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|174299         0 MGSFSIWHWLIVLLIIMMVFGTKKLRNIGSDLGSAVKGFKEGMREGSEDKPAGSQQGQQA
                  0 ||..|||............||||||..||||||...||||..|---|.|.|......|.|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAM---SDDEPKQDKTSQDA

gi|174299        60 
                 60 
gi|491764        71 
""",
        )
        hit = hits[54]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|47573371|ref|ZP_00243410.1|")
        self.assertEqual(hit.target.name, "ZP_00243410")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Rubrivivax gelatinosus PM1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=76)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 123.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 51.9878)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.55696e-06)
        self.assertEqual(hsp.annotations["identity"], 35)
        self.assertEqual(hsp.annotations["positive"], 47)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 43, 43, 66],
                          [14, 57, 63, 86]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 72))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...DTN'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLLIVVLVFGTKKLKNIGSDLGGAVKGFKDGVRDGSTAPADPA...DAN'}, length=76)",
        )
        self.assertEqual(hsp.target.id, "gi|47573371|ref|ZP_00243410.1|")
        self.assertEqual(hsp.target.name, "ZP_00243410")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Rubrivivax gelatinosus PM1]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+ +IVVL+FGTKKL +IGSDLG ++KGFK  +      +D ++  AD   +  A+K AD N",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|475733         0 MGSFSIWHWLIVLLIVVLVFGTKKLKNIGSDLGGAVKGFKDGV------RDGSTAPADPA
                  0 ||..|||............||||||..||||||...||||...------.|.....||..
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|475733        54 QQVTANKSADAN 66
                 60 ....|.|.||.| 72
gi|491764        74 AKTIADKQADTN 86
""",
        )
        hit = hits[55]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|16273687|ref|NP_438355.1|")
        self.assertEqual(hit.target.name, "NP_438355")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein secretion pathway component TatA [Haemophilus influenzae Rd KW20] >gi|9988065|sp|P57046|TATA_HAEIN Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=89)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 122.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 51.6026)
        self.assertAlmostEqual(hsp.annotations["evalue"], 7.25761e-06)
        self.assertEqual(hsp.annotations["identity"], 37)
        self.assertEqual(hsp.annotations["positive"], 56)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 43, 43, 54, 54, 72],
                          [14, 57, 62, 73, 75, 93]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 79))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KTE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MFGLSPAQLIILLVVILLIFGTKKLRNAGSDLGAAVKGFKKAMKEDEKVKDAEF...KRE'}, length=89)",
        )
        self.assertEqual(hsp.target.id, "gi|16273687|ref|NP_438355.1|")
        self.assertEqual(hsp.target.name, "NP_438355")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein secretion pathway component TatA [Haemophilus influenzae Rd KW20] >gi|9988065|sp|P57046|TATA_HAEIN Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "M G+S  QL+I+ V+++L+FGTKKL + GSDLGA++KGFKKAM     K+D+  +DA+F  K+I ++ A   + + K E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|162736         0 MFGLSPAQLIILLVVILLIFGTKKLRNAGSDLGAAVKGFKKAM-----KEDEKVKDAEF-
                  0 |.|.|..|...........||||||...||||||..|||||||-----|.|....||.|-
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|162736        54 -KSIDNETASAKKGKYKRE 72
                 60 -|.|....|.......|.| 79
gi|491764        74 AKTIADKQADTNQEQAKTE 93
""",
        )
        hit = hits[56]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|73542784|ref|YP_297304.1|")
        self.assertEqual(hit.target.name, "YP_297304")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Ralstonia eutropha JMP134] >gi|72120197|gb|AAZ62460.1| Twin-arginine translocation protein TatA/E [Ralstonia eutropha JMP134] >gi|53760639|ref|ZP_00165809.2| COG1826: Sec-independent protein secretion pathway components [Ralstonia eutropha JMP134]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=73)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 121.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 51.2174)
        self.assertAlmostEqual(hsp.annotations["evalue"], 9.47873e-06)
        self.assertEqual(hsp.annotations["identity"], 34)
        self.assertEqual(hsp.annotations["positive"], 44)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 49, 56, 70],
                          [14, 63, 63, 77]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 70))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...AKT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLVIVMLVFGTKKLRNIGQDLGGAVKGFKDGMKEGDDKAAPAK...EKT'}, length=73)",
        )
        self.assertEqual(hsp.target.id, "gi|73542784|ref|YP_297304.1|")
        self.assertEqual(hsp.target.name, "YP_297304")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Ralstonia eutropha JMP134] >gi|72120197|gb|AAZ62460.1| Twin-arginine translocation protein TatA/E [Ralstonia eutropha JMP134] >gi|53760639|ref|ZP_00165809.2| COG1826: Sec-independent protein secretion pathway components [Ralstonia eutropha JMP134]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+ VIV+L+FGTKKL +IG DLG ++KGFK  M + + K       +D T+ D D   KT",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|735427         0 MGSFSIWHWLIVLVIVMLVFGTKKLRNIGQDLGGAVKGFKDGMKEGDDKAAPAKELRDST
                  0 ||..|||............||||||..||.|||...||||..|.....|-------.|.|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPK-------QDKT

gi|735427        60 TIDVDAKEKT 70
                 60 ..|.|...|| 70
gi|491764        67 SQDADFTAKT 77
""",
        )
        hit = hits[57]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|26987777|ref|NP_743202.1|")
        self.assertEqual(hit.target.name, "NP_743202")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase TatA [Pseudomonas putida KT2440] >gi|24982471|gb|AAN66666.1| Sec-independent protein translocase TatA [Pseudomonas putida KT2440]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=77)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 121.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 51.2174)
        self.assertAlmostEqual(hsp.annotations["evalue"], 9.47873e-06)
        self.assertEqual(hsp.annotations["identity"], 35)
        self.assertEqual(hsp.annotations["positive"], 49)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 46, 46, 75],
                          [14, 60, 68, 97]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 83))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...AKR'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGIGIWQLVIVLLIVFLLFGTKRLKGLGSDVGEAIQGFRKSMGGDNDASAADQ...ADR'}, length=77)",
        )
        self.assertEqual(hsp.target.id, "gi|26987777|ref|NP_743202.1|")
        self.assertEqual(hsp.target.name, "NP_743202")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase TatA [Pseudomonas putida KT2440] >gi|24982471|gb|AAN66666.1| Sec-independent protein translocase TatA [Pseudomonas putida KT2440]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGI IWQL+I+ +IV LLFGTK+L  +GSD+G +I+GF+K+M  D         DA    +    +Q   N + A+   A R",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|269877         0 MGGIGIWQLVIVLLIVFLLFGTKRLKGLGSDVGEAIQGFRKSMGGD--------NDASAA
                  0 ||||.|||...........||||.|...|||.|..|.||.|.|..|--------.||...
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|269877        52 DQAHVQQQCPLNGQVAQQSQADR 75
                 60 .......|...|...|....|.| 83
gi|491764        74 AKTIADKQADTNQEQAKTEDAKR 97
""",
        )
        hit = hits[58]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|29142636|ref|NP_805978.1|")
        self.assertEqual(hit.target.name, "NP_805978")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein translocase protein TatE [Salmonella enterica subsp. enterica serovar Typhi Ty2] >gi|16501883|emb|CAD05109.1| sec-independent protein translocase protein TatE [Salmonella enterica subsp. enterica serovar Typhi] >gi|16419144|gb|AAL19583.1| putative Sec-independent protein secretion pathway component [Salmonella typhimurium LT2] >gi|62179231|ref|YP_215648.1| putative Sec-independent protein secretion pathway component [Salmonella enterica subsp. enterica serovar Choleraesuis str. SC-B67] >gi|16759591|ref|NP_455208.1| sec-independent protein translocase protein TatE [Salmonella enterica subsp. enterica serovar Typhi str. CT18] >gi|56414233|ref|YP_151308.1| sec-independent protein translocase protein TatE [Salmonella enterica subsp. enterica serovar Paratyphi A str. ATCC 9150] >gi|29138267|gb|AAO69838.1| sec-independent protein translocase protein TatE [Salmonella enterica subsp. enterica serovar Typhi Ty2] >gi|56128490|gb|AAV77996.1| sec-independent protein translocase protein TatE [Salmonella enterica subsp. enterica serovar Paratyphi A str. ATCC 9150] >gi|62126864|gb|AAX64567.1| putative Sec-independent protein secretion pathway component [Salmonella enterica subsp. enterica serovar Choleraesuis str. SC-B67] >gi|61248019|sp|P0A2H5|TATE_SALTY Sec-independent protein translocase protein tatE >gi|61248020|sp|P0A2H6|TATE_SALTI Sec-independent protein translocase protein tatE >gi|25302676|pir||AC0580 sec-independent protein translocase protein TatE [imported] - Salmonella enterica subsp. enterica serovar Typhi (strain CT18) >gi|16764009|ref|NP_459624.1| Sec-independent protein secretion pathway component [Salmonella typhimurium LT2]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=67)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 119.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 50.447)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.61683e-05)
        self.assertEqual(hsp.annotations["identity"], 35)
        self.assertEqual(hsp.annotations["positive"], 49)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 50, 50, 67],
                          [14, 64, 65, 82]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 68))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...DKQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGEISITKLLVVAALVVLLFGTKKLRTLGGDLGTAIKGFKKAMNDEDAGVKKDV...HKE')",
        )
        self.assertEqual(hsp.target.id, "gi|29142636|ref|NP_805978.1|")
        self.assertEqual(hsp.target.name, "NP_805978")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein translocase protein TatE [Salmonella enterica subsp. enterica serovar Typhi Ty2] >gi|16501883|emb|CAD05109.1| sec-independent protein translocase protein TatE [Salmonella enterica subsp. enterica serovar Typhi] >gi|16419144|gb|AAL19583.1| putative Sec-independent protein secretion pathway component [Salmonella typhimurium LT2] >gi|62179231|ref|YP_215648.1| putative Sec-independent protein secretion pathway component [Salmonella enterica subsp. enterica serovar Choleraesuis str. SC-B67] >gi|16759591|ref|NP_455208.1| sec-independent protein translocase protein TatE [Salmonella enterica subsp. enterica serovar Typhi str. CT18] >gi|56414233|ref|YP_151308.1| sec-independent protein translocase protein TatE [Salmonella enterica subsp. enterica serovar Paratyphi A str. ATCC 9150] >gi|29138267|gb|AAO69838.1| sec-independent protein translocase protein TatE [Salmonella enterica subsp. enterica serovar Typhi Ty2] >gi|56128490|gb|AAV77996.1| sec-independent protein translocase protein TatE [Salmonella enterica subsp. enterica serovar Paratyphi A str. ATCC 9150] >gi|62126864|gb|AAX64567.1| putative Sec-independent protein secretion pathway component [Salmonella enterica subsp. enterica serovar Choleraesuis str. SC-B67] >gi|61248019|sp|P0A2H5|TATE_SALTY Sec-independent protein translocase protein tatE >gi|61248020|sp|P0A2H6|TATE_SALTI Sec-independent protein translocase protein tatE >gi|25302676|pir||AC0580 sec-independent protein translocase protein TatE [imported] - Salmonella enterica subsp. enterica serovar Typhi (strain CT18) >gi|16764009|ref|NP_459624.1| Sec-independent protein secretion pathway component [Salmonella typhimurium LT2]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG ISI +LL++A +VVLLFGTKKL ++G DLG +IKGFKKAM+D++    K   D    A+ ++ K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|291426         0 MGEISITKLLVVAALVVLLFGTKKLRTLGGDLGTAIKGFKKAMNDEDAGV-KKDVDGSVQ
                  0 ||.|||.............||||||...|.|||..||||||||.|.....-|...|....
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|291426        59 AEKLSHKE 67
                 60 |.....|. 68
gi|491764        74 AKTIADKQ 82
""",
        )
        hit = hits[59]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|18389921|gb|AAL68797.1|")
        self.assertEqual(hit.target.name, "AAL68797")
        self.assertEqual(hit.target.description, "TatA [Ralstonia eutropha]")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=77)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 119.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 50.447)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.61683e-05)
        self.assertEqual(hsp.annotations["identity"], 35)
        self.assertEqual(hsp.annotations["positive"], 44)
        self.assertEqual(hsp.annotations["gaps"], 11)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 49, 60, 74],
                          [14, 63, 63, 77]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 74))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...AKT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLVIVMLVFGTKKLRNIGQDLGGAVKGFKDGMKDGEGKAAADP...EKT'}, length=77)",
        )
        self.assertEqual(hsp.target.id, "gi|18389921|gb|AAL68797.1|")
        self.assertEqual(hsp.target.name, "AAL68797")
        self.assertEqual(hsp.target.description, "TatA [Ralstonia eutropha]")
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+ VIV+L+FGTKKL +IG DLG ++KGFK  M D E K           +D T+ D +   KT",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|183899         0 MGSFSIWHWLIVLVIVMLVFGTKKLRNIGQDLGGAVKGFKDGMKDGEGKAAADPAQSKEL
                  0 ||..|||............||||||..||.|||...||||..|.|.|.|-----------
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPK-----------

gi|183899        60 RDSTTIDVEAKEKT 74
                 60 .|.|..|.....|| 74
gi|491764        63 QDKTSQDADFTAKT 77
""",
        )
        hit = hits[60]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|48781637|ref|ZP_00278228.1|")
        self.assertEqual(hit.target.name, "ZP_00278228")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Burkholderia fungorum LB400]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=79)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 117.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 49.6766)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.75789e-05)
        self.assertEqual(hsp.annotations["identity"], 28)
        self.assertEqual(hsp.annotations["positive"], 39)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 55],
                          [14, 69]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 55))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSLSIWHWLIVLLIVALVFGTKKLRNIGTDLGGAVKGFKEGMKEAETPAGEAQQ'}, length=79)",
        )
        self.assertEqual(hsp.target.id, "gi|48781637|ref|ZP_00278228.1|")
        self.assertEqual(hsp.target.name, "ZP_00278228")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Burkholderia fungorum LB400]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG +SIW  LI+ +IV L+FGTKKL +IG+DLG ++KGFK+ M + E    +  Q",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|487816         0 MGSLSIWHWLIVLLIVALVFGTKKLRNIGTDLGGAVKGFKEGMKEAETPAGEAQQ 55
                  0 ||..|||............||||||..||.|||...||||..|...|.......| 55
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ 69
""",
        )
        hit = hits[61]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|77456610|ref|YP_346115.1|")
        self.assertEqual(hit.target.name, "YP_346115")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Pseudomonas fluorescens PfO-1] >gi|77380613|gb|ABA72126.1| Twin-arginine translocation protein TatA/E [Pseudomonas fluorescens PfO-1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=92)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 117.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 49.6766)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.75789e-05)
        self.assertEqual(hsp.annotations["identity"], 22)
        self.assertEqual(hsp.annotations["positive"], 28)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 53],
                          [33, 67]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 34))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGTKKLKNLGTDVGESIKGFRKAMNDDEKPADPT'}, length=92)",
        )
        self.assertEqual(hsp.target.id, "gi|77456610|ref|YP_346115.1|")
        self.assertEqual(hsp.target.name, "YP_346115")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Pseudomonas fluorescens PfO-1] >gi|77380613|gb|ABA72126.1| Twin-arginine translocation protein TatA/E [Pseudomonas fluorescens PfO-1]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FGTKKL ++G+D+G SIKGF+KAM+DDE   D T"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|774566        19 FGTKKLKNLGTDVGESIKGFRKAMNDDEKPADPT 53
                  0 ||||||...|.|.|.|||||.|||.|||...|.| 34
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKT 67
""",
        )
        hit = hits[62]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|1684735|emb|CAA98158.1|")
        self.assertEqual(hit.target.name, "CAA98158")
        self.assertEqual(
            hit.target.description,
            "ORF57 protein [Pseudomonas stutzeri] >gi|9979022|sp|P95557|TATA_PSEST Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=57)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 117.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 49.6766)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.75789e-05)
        self.assertEqual(hsp.annotations["identity"], 30)
        self.assertEqual(hsp.annotations["positive"], 40)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 1, 46],
                          [16, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 45))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({16: 'GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1: 'GISVWQLLIILLIVVMLFGTKRLRGLGSDLGSAINGFRKSVSDGE'}, length=57)",
        )
        self.assertEqual(hsp.target.id, "gi|1684735|emb|CAA98158.1|")
        self.assertEqual(hsp.target.name, "CAA98158")
        self.assertEqual(
            hsp.target.description,
            "ORF57 protein [Pseudomonas stutzeri] >gi|9979022|sp|P95557|TATA_PSEST Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"], "GIS+WQLLII +IVV+LFGTK+L  +GSDLG++I GF+K++SD E"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|168473         1 GISVWQLLIILLIVVMLFGTKRLRGLGSDLGSAINGFRKSVSDGE 46
                  0 |||.||...........||||.|...|||||..|.||.|..||.| 45
gi|491764        16 GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE 61
""",
        )
        hit = hits[63]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|56476124|ref|YP_157713.1|")
        self.assertEqual(hit.target.name, "YP_157713")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase subunit A [Azoarcus sp. EbN1] >gi|56312167|emb|CAI06812.1| Sec-independent protein translocase subunit A [Azoarcus sp. EbN1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=75)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 116.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 49.2914)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.60191e-05)
        self.assertEqual(hsp.annotations["identity"], 30)
        self.assertEqual(hsp.annotations["positive"], 37)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 55],
                          [14, 69]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 55))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLVIVVLVFGTKKLRNVGQDLGGAVKGFKDGMRDSEKSGEDVQQ'}, length=75)",
        )
        self.assertEqual(hsp.target.id, "gi|56476124|ref|YP_157713.1|")
        self.assertEqual(hsp.target.name, "YP_157713")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase subunit A [Azoarcus sp. EbN1] >gi|56312167|emb|CAI06812.1| Sec-independent protein translocase subunit A [Azoarcus sp. EbN1]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+ VIVVL+FGTKKL ++G DLG ++KGFK  M D E   +   Q",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|564761         0 MGSFSIWHWLIVLVIVVLVFGTKKLRNVGQDLGGAVKGFKDGMRDSEKSGEDVQQ 55
                  0 ||..|||............||||||...|.|||...||||..|.|.|.......| 55
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ 69
""",
        )
        hit = hits[64]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|34496078|ref|NP_900293.1|")
        self.assertEqual(hit.target.name, "NP_900293")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein TatA [Chromobacterium violaceum ATCC 12472] >gi|34101932|gb|AAQ58299.1| Sec-independent protein translocase protein TatA [Chromobacterium violaceum ATCC 12472]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=68)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 116.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 49.2914)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.60191e-05)
        self.assertEqual(hsp.annotations["identity"], 32)
        self.assertEqual(hsp.annotations["positive"], 44)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 68],
                          [14, 82]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 68))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...DKQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGSLSIWHWLIVLLIVVLVFGTKKLPGIGKDLGNAVKGFKEGMNEGAKDGQPPA...DKK')",
        )
        self.assertEqual(hsp.target.id, "gi|34496078|ref|NP_900293.1|")
        self.assertEqual(hsp.target.name, "NP_900293")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein TatA [Chromobacterium violaceum ATCC 12472] >gi|34101932|gb|AAQ58299.1| Sec-independent protein translocase protein TatA [Chromobacterium violaceum ATCC 12472]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG +SIW  LI+ +IVVL+FGTKKL  IG DLG ++KGFK+ M++        ++DA       ADK+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|344960         0 MGSLSIWHWLIVLLIVVLVFGTKKLPGIGKDLGNAVKGFKEGMNEGAKDGQPPAKDAGRI
                  0 ||..|||............||||||..||.|||...||||..|............||...
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|344960        60 IDGEADKK 68
                 60 ....|||. 68
gi|491764        74 AKTIADKQ 82
""",
        )
        hit = hits[65]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67848115|ref|ZP_00503233.1|")
        self.assertEqual(hit.target.name, "ZP_00503233")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Polaromonas sp. JS666] >gi|67781162|gb|EAM40776.1| Twin-arginine translocation protein TatA/E [Polaromonas sp. JS666]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=83)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 115.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 48.9062)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.70425e-05)
        self.assertEqual(hsp.annotations["identity"], 31)
        self.assertEqual(hsp.annotations["positive"], 42)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 69],
                          [14, 83]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 69))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KQA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLLIVVMVFGTKKLKNMGSDLGSAVKGFKDGMKDGGQSAAATD...AQA'}, length=83)",
        )
        self.assertEqual(hsp.target.id, "gi|67848115|ref|ZP_00503233.1|")
        self.assertEqual(hsp.target.name, "ZP_00503233")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Polaromonas sp. JS666] >gi|67781162|gb|EAM40776.1| Twin-arginine translocation protein TatA/E [Polaromonas sp. JS666]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+ +IVV++FGTKKL ++GSDLG+++KGFK  M D       T       A  + + QA",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|678481         0 MGSFSIWHWLIVLLIVVMVFGTKKLKNMGSDLGSAVKGFKDGMKDGGQSAAATDDKPAAP
                  0 ||..|||............||||||...|||||...||||..|.|.......|.......
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|678481        60 AGQVTNAQA 69
                 60 |......|| 69
gi|491764        74 AKTIADKQA 83
""",
        )
        hit = hits[66]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|26991692|ref|NP_747117.1|")
        self.assertEqual(hit.target.name, "NP_747117")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase TatA [Pseudomonas putida KT2440] >gi|24986793|gb|AAN70581.1| Sec-independent protein translocase TatA [Pseudomonas putida KT2440]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=90)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 115.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 48.9062)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.70425e-05)
        self.assertEqual(hsp.annotations["identity"], 26)
        self.assertEqual(hsp.annotations["positive"], 40)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 19,  47,  47,  85],
                          [ 33,  61,  64, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 69))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGTKKLKNFGSDLGESIKGFRKAMNEEETKPAEQTPPPAQPVPPVQNTAQPQQG...VQE'}, length=90)",
        )
        self.assertEqual(hsp.target.id, "gi|26991692|ref|NP_747117.1|")
        self.assertEqual(hsp.target.name, "NP_747117")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase TatA [Pseudomonas putida KT2440] >gi|24986793|gb|AAN70581.1| Sec-independent protein translocase TatA [Pseudomonas putida KT2440]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FGTKKL + GSDLG SIKGF+KAM+++E    K ++     A+ +   Q     +Q  T + + H  ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|269916        19 FGTKKLKNFGSDLGESIKGFRKAMNEEE---TKPAEQTPPPAQPVPPVQNTAQPQQGHTI
                  0 ||||||...|||||.|||||.|||...|---.|........|......|......|..|.
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|269916        76 EGQAHPVQE  85
                 60 ....|....  69
gi|491764        93 DAKRHDKEQ 102
""",
        )
        hit = hits[67]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|15601293|ref|NP_232924.1|")
        self.assertEqual(hit.target.name, "NP_232924")
        self.assertEqual(
            hit.target.description,
            "tatA protein [Vibrio cholerae O1 biovar eltor str. N16961] >gi|9657940|gb|AAF96436.1| tatA protein [Vibrio cholerae O1 biovar eltor str. N16961] >gi|11356195|pir||A82448 tatA protein VCA0533 [imported] - Vibrio cholerae (strain N16961 serogroup O1)",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=78)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 114.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 48.521)
        self.assertAlmostEqual(hsp.annotations["evalue"], 6.14393e-05)
        self.assertEqual(hsp.annotations["identity"], 38)
        self.assertEqual(hsp.annotations["positive"], 54)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 47, 47, 53, 53, 63, 63, 77],
                          [14, 61, 65, 71, 73, 83, 84, 98]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 84))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KRH'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISVGKLLILGCIVALVFGTKKLRTIGEDAGYAIRSFQKALRGDEVTTQSST...QRH'}, length=78)",
        )
        self.assertEqual(hsp.target.id, "gi|15601293|ref|NP_232924.1|")
        self.assertEqual(hsp.target.name, "NP_232924")
        self.assertEqual(
            hsp.target.description,
            "tatA protein [Vibrio cholerae O1 biovar eltor str. N16961] >gi|9657940|gb|AAF96436.1| tatA protein [Vibrio cholerae O1 biovar eltor str. N16961] >gi|11356195|pir||A82448 tatA protein VCA0533 [imported] - Vibrio cholerae (strain N16961 serogroup O1)",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGIS+ +LLI+  IV L+FGTKKL +IG D G +I+ F+KA+  DE     T+Q +  TA+   D  A   QE + + D++RH",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|156012         0 MGGISVGKLLILGCIVALVFGTKKLRTIGEDAGYAIRSFQKALRGDE----VTTQSS--T
                  0 |||||..............||||||..||.|.|..|..|.||...||----.|.|..--|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|156012        54 AEESVDSFA-IEQESSHSSDSQRH 77
                 60 |....|..|-..||.....|..|| 84
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRH 98
""",
        )
        hit = hits[68]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|66770480|ref|YP_245242.1|")
        self.assertEqual(hit.target.name, "YP_245242")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein translocase [Xanthomonas campestris pv. campestris str. 8004] >gi|21233515|ref|NP_639432.1| sec-independent protein translocase [Xanthomonas campestris pv. campestris str. ATCC 33913] >gi|21115368|gb|AAM43314.1| sec-independent protein translocase [Xanthomonas campestris pv. campestris str. ATCC 33913] >gi|66575812|gb|AAY51222.1| sec-independent protein translocase [Xanthomonas campestris pv. campestris str. 8004] >gi|24212476|sp|Q8P3H8|TATA_XANCP Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=75)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 113.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 48.1358)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.02423e-05)
        self.assertEqual(hsp.annotations["identity"], 32)
        self.assertEqual(hsp.annotations["positive"], 48)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 58, 58, 73],
                          [14, 72, 73, 88]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 74))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...NQE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLVIVLLVFGTKRLTSGAKDLGSAVKEFKKGMHDDDKPAGKLG...DRD'}, length=75)",
        )
        self.assertEqual(hsp.target.id, "gi|66770480|ref|YP_245242.1|")
        self.assertEqual(hsp.target.name, "YP_245242")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein translocase [Xanthomonas campestris pv. campestris str. 8004] >gi|21233515|ref|NP_639432.1| sec-independent protein translocase [Xanthomonas campestris pv. campestris str. ATCC 33913] >gi|21115368|gb|AAM43314.1| sec-independent protein translocase [Xanthomonas campestris pv. campestris str. ATCC 33913] >gi|66575812|gb|AAY51222.1| sec-independent protein translocase [Xanthomonas campestris pv. campestris str. 8004] >gi|24212476|sp|Q8P3H8|TATA_XANCP Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+ VIV+L+FGTK+L S   DLG+++K FKK M DD+    K   D+  +A+   + QA+ +++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|667704         0 MGSFSIWHWLIVLVIVLLVFGTKRLTSGAKDLGSAVKEFKKGMHDDDKPAGKLGDDSR-S
                  0 ||..|||............||||.|.|...|||...|.|||.|.||.....|...|..-.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|667704        59 AEQAREAQAERDRD 73
                 60 |......||..... 74
gi|491764        74 AKTIADKQADTNQE 88
""",
        )
        hit = hits[69]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|53804435|ref|YP_113945.1|")
        self.assertEqual(hit.target.name, "YP_113945")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein TatA [Methylococcus capsulatus str. Bath] >gi|53758196|gb|AAU92487.1| Sec-independent protein translocase protein TatA [Methylococcus capsulatus str. Bath]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=70)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 113.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 48.1358)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.02423e-05)
        self.assertEqual(hsp.annotations["identity"], 30)
        self.assertEqual(hsp.annotations["positive"], 51)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 1, 46, 46, 53, 53, 67],
                          [16, 61, 64, 71, 74, 88]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 72))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({16: 'GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD...NQE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1: 'GIGVWELLLLFLIVLVVFGTKRLRNIGGDLGGAIKSFRQAMSENEDKPSEGGAR...KEK'}, length=70)",
        )
        self.assertEqual(hsp.target.id, "gi|53804435|ref|YP_113945.1|")
        self.assertEqual(hsp.target.name, "YP_113945")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein TatA [Methylococcus capsulatus str. Bath] >gi|53758196|gb|AAU92487.1| Sec-independent protein translocase protein TatA [Methylococcus capsulatus str. Bath]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "GI +W+LL++ +IV+++FGTK+L +IG DLG +IK F++AMS++E   DK S+     A+T+  +  D  ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|538044         1 GIGVWELLLLFLIVLVVFGTKRLRNIGGDLGGAIKSFRQAMSENE---DKPSEGG---AR
                  0 ||..|............||||.|..||.|||..||.|..|||..|---||.|...---|.
gi|491764        16 GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAK

gi|538044        55 TLEGEVVDKKEK 67
                 60 |......|.... 72
gi|491764        76 TIADKQADTNQE 88
""",
        )
        hit = hits[70]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|75825357|ref|ZP_00754793.1|")
        self.assertEqual(hit.target.name, "ZP_00754793")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae O395]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=80)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 113.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 48.1358)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.02423e-05)
        self.assertEqual(hsp.annotations["identity"], 33)
        self.assertEqual(hsp.annotations["positive"], 51)
        self.assertEqual(hsp.annotations["gaps"], 5)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 47, 47, 79],
                          [14, 61, 66, 98]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 84))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KRH'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISVGKLLILGCIVALIFGTKKLRTIGEDAGYAIRSFQKALRSDEVTTQSST...QRH'}, length=80)",
        )
        self.assertEqual(hsp.target.id, "gi|75825357|ref|ZP_00754793.1|")
        self.assertEqual(hsp.target.name, "ZP_00754793")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae O395]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGIS+ +LLI+  IV L+FGTKKL +IG D G +I+ F+KA+  DE      +  +  T +++        QE + + D++RH",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|758253         0 MGGISVGKLLILGCIVALIFGTKKLRTIGEDAGYAIRSFQKALRSDE-----VTTQSSTT
                  0 |||||..............||||||..||.|.|..|..|.||...||-----.......|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|758253        55 EESVDSFSFAIEQEPSHSSDSQRH 79
                 60 ............||.....|..|| 84
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRH 98
""",
        )
        hit = hits[71]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71908987|ref|YP_286574.1|")
        self.assertEqual(hit.target.name, "YP_286574")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Dechloromonas aromatica RCB] >gi|71848608|gb|AAZ48104.1| Twin-arginine translocation protein TatA/E [Dechloromonas aromatica RCB] >gi|41723355|ref|ZP_00150282.1| COG1826: Sec-independent protein secretion pathway components [Dechloromonas aromatica RCB]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=76)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 113.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 48.1358)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.02423e-05)
        self.assertEqual(hsp.annotations["identity"], 31)
        self.assertEqual(hsp.annotations["positive"], 41)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 44, 44, 58],
                          [14, 58, 60, 74]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 60))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLVIVMLIFGTKKLRNVGQDLGGAVKGFKDGMKEANADKPAEEAQPT'}, length=76)",
        )
        self.assertEqual(hsp.target.id, "gi|71908987|ref|YP_286574.1|")
        self.assertEqual(hsp.target.name, "YP_286574")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Dechloromonas aromatica RCB] >gi|71848608|gb|AAZ48104.1| Twin-arginine translocation protein TatA/E [Dechloromonas aromatica RCB] >gi|41723355|ref|ZP_00150282.1| COG1826: Sec-independent protein secretion pathway components [Dechloromonas aromatica RCB]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+ VIV+L+FGTKKL ++G DLG ++KGFK  M   E   DK +++A  T",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|719089         0 MGSFSIWHWLIVLVIVMLIFGTKKLRNVGQDLGGAVKGFKDGMK--EANADKPAEEAQPT
                  0 ||..|||............||||||...|.|||...||||..|.--|...||....|..|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|719089        58 
                 60 
gi|491764        74 
""",
        )
        hit = hits[72]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68526571|gb|EAN49542.1|")
        self.assertEqual(hit.target.name, "EAN49542")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Ralstonia metallidurans CH34] >gi|68559139|ref|ZP_00598474.1| Twin-arginine translocation protein TatA/E [Ralstonia metallidurans CH34]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=77)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 112.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 47.7506)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0001048)
        self.assertEqual(hsp.annotations["identity"], 36)
        self.assertEqual(hsp.annotations["positive"], 47)
        self.assertEqual(hsp.annotations["gaps"], 9)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 45, 48, 51, 57, 77],
                          [14, 59, 59, 62, 62, 82]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 77))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...DKQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGSFSIWHWLIVLVIVMLVFGTKKLRNIGQDLGGAVKGFKDGMKEGNTDEPATP...RQQ')",
        )
        self.assertEqual(hsp.target.id, "gi|68526571|gb|EAN49542.1|")
        self.assertEqual(hsp.target.name, "EAN49542")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Ralstonia metallidurans CH34] >gi|68559139|ref|ZP_00598474.1| Twin-arginine translocation protein TatA/E [Ralstonia metallidurans CH34]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+ VIV+L+FGTKKL +IG DLG ++KGFK  M +   DEP      K+ + S   D  AK  + +Q",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|685265         0 MGSFSIWHWLIVLVIVMLVFGTKKLRNIGQDLGGAVKGFKDGMKEGNTDEPATPTPAKEL
                  0 ||..|||............||||||..||.|||...||||..|..---|||------|..
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSD---DEP------KQD

gi|685265        60 RDSTTIDVEAKEKSRQQ 77
                 60 ..|...|..||.....| 77
gi|491764        65 KTSQDADFTAKTIADKQ 82
""",
        )
        hit = hits[73]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71736448|ref|YP_272670.1|")
        self.assertEqual(hit.target.name, "YP_272670")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein translocase TatA [Pseudomonas syringae pv. phaseolicola 1448A] >gi|71557001|gb|AAZ36212.1| sec-independent protein translocase TatA [Pseudomonas syringae pv. phaseolicola 1448A]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=91)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 112.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 47.7506)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0001048)
        self.assertEqual(hsp.annotations["identity"], 30)
        self.assertEqual(hsp.annotations["positive"], 41)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 19,  47,  48,  62,  62,  73,  73,  84],
                          [ 33,  61,  61,  75,  78,  89,  91, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 70))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGTKKLKGLGSDVGESIKGFRKAMNDDDKPAEQPAPQPQQAQAAPQGSPLNQPH...VDE'}, length=91)",
        )
        self.assertEqual(hsp.target.id, "gi|71736448|ref|YP_272670.1|")
        self.assertEqual(hsp.target.name, "YP_272670")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein translocase TatA [Pseudomonas syringae pv. phaseolicola 1448A] >gi|71557001|gb|AAZ36212.1| sec-independent protein translocase TatA [Pseudomonas syringae pv. phaseolicola 1448A]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FGTKKL  +GSD+G SIKGF+KAM+DD+ P +    Q     A   A + +  NQ    T DA+ H  ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|717364        19 FGTKKLKGLGSDVGESIKGFRKAMNDDDKPAEQPAPQPQQAQA---APQGSPLNQPH--T
                  0 ||||||...|||.|.|||||.|||.||.-|......|.....|---|......||..--|
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDE-PKQDKTSQDADFTAKTIADKQADTNQEQAKT

gi|717364        74 IDAQAHKVDE  84
                 60 .||..|....  70
gi|491764        92 EDAKRHDKEQ 102
""",
        )
        hit = hits[74]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|56460344|ref|YP_155625.1|")
        self.assertEqual(hit.target.name, "YP_155625")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein secretion pathway component, TatA family [Idiomarina loihiensis L2TR] >gi|56179354|gb|AAV82076.1| Sec-independent protein secretion pathway component, TatA family [Idiomarina loihiensis L2TR]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=72)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 112.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 47.7506)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0001048)
        self.assertEqual(hsp.annotations["identity"], 32)
        self.assertEqual(hsp.annotations["positive"], 54)
        self.assertEqual(hsp.annotations["gaps"], 17)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  3,  49,  49,  72],
                          [ 15,  61,  78, 101]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 86))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({15: 'GGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ...DKE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({3: 'GGMSMVQLGVLLVIVILLFGSKKLRTLGSDLGSAIKGFKSSITDEPSDREKDIQ...HEQ'}, length=72)",
        )
        self.assertEqual(hsp.target.id, "gi|56460344|ref|YP_155625.1|")
        self.assertEqual(hsp.target.name, "YP_155625")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein secretion pathway component, TatA family [Idiomarina loihiensis L2TR] >gi|56179354|gb|AAV82076.1| Sec-independent protein secretion pathway component, TatA family [Idiomarina loihiensis L2TR]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "GG+S+ QL ++ VIV+LLFG+KKL ++GSDLG++IKGFK +++D+                  +D++ D  + Q  T + +RH ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|564603         3 GGMSMVQLGVLLVIVILLFGSKKLRTLGSDLGSAIKGFKSSITDEP--------------
                  0 ||.|..|...........||.|||...|||||..|||||....|..--------------
gi|491764        15 GGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTA

gi|564603        49 ---SDREKDIQRHQNLTSEEERHHEQ  72
                 60 ---.|...|....|..|....||...  86
gi|491764        75 KTIADKQADTNQEQAKTEDAKRHDKE 101
""",
        )
        hit = hits[75]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68214708|ref|ZP_00566522.1|")
        self.assertEqual(hit.target.name, "ZP_00566522")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Methylobacillus flagellatus KT] >gi|68186844|gb|EAN01544.1| Twin-arginine translocation protein TatA/E [Methylobacillus flagellatus KT]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=72)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 111.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 47.3654)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000136873)
        self.assertEqual(hsp.annotations["identity"], 29)
        self.assertEqual(hsp.annotations["positive"], 44)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 43, 43, 62],
                          [14, 57, 59, 78]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 64))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KTI'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLAIVILIFGTKRLRNLGSDVGGAVKGFKEAVNEGKSAAAALD...QTV'}, length=72)",
        )
        self.assertEqual(hsp.target.id, "gi|68214708|ref|ZP_00566522.1|")
        self.assertEqual(hsp.target.name, "ZP_00566522")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Methylobacillus flagellatus KT] >gi|68186844|gb|EAN01544.1| Twin-arginine translocation protein TatA/E [Methylobacillus flagellatus KT]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+  IV+L+FGTK+L ++GSD+G ++KGFK+A+  +E K    + D D   +T+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|682147         0 MGSFSIWHWLIVLAIVILIFGTKRLRNLGSDVGGAVKGFKEAV--NEGKSAAAALDDDAK
                  0 ||..|||............||||.|...|||.|...||||.|.--.|.|......|.|..
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|682147        58 GQTV 62
                 60 ..|. 64
gi|491764        74 AKTI 78
""",
        )
        hit = hits[76]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|30248650|ref|NP_840720.1|")
        self.assertEqual(hit.target.name, "NP_840720")
        self.assertEqual(
            hit.target.description,
            "mttA/Hcf106 family [Nitrosomonas europaea ATCC 19718] >gi|30180245|emb|CAD84550.1| mttA/Hcf106 family [Nitrosomonas europaea ATCC 19718]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=76)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 111.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 47.3654)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000136873)
        self.assertEqual(hsp.annotations["identity"], 29)
        self.assertEqual(hsp.annotations["positive"], 43)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 73],
                          [14, 87]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 73))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...TNQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLVVLAIVVLVFGTKKLRNLGSDLGGAVRGFKEGMKGAEEESTPPP...KDQ'}, length=76)",
        )
        self.assertEqual(hsp.target.id, "gi|30248650|ref|NP_840720.1|")
        self.assertEqual(hsp.target.name, "NP_840720")
        self.assertEqual(
            hsp.target.description,
            "mttA/Hcf106 family [Nitrosomonas europaea ATCC 19718] >gi|30180245|emb|CAD84550.1| mttA/Hcf106 family [Nitrosomonas europaea ATCC 19718]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  L++  IVVL+FGTKKL ++GSDLG +++GFK+ M   E +          T  +I  +  + +Q",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|302486         0 MGSFSIWHWLVVLAIVVLVFGTKKLRNLGSDLGGAVRGFKEGMKGAEEESTPPPPAQQVT
                  0 ||..|||............||||||...|||||....|||..|...|............|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|302486        60 GHSIKSEIEEKDQ 73
                 60 ...|........| 73
gi|491764        74 AKTIADKQADTNQ 87
""",
        )
        hit = hits[77]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|75822907|ref|ZP_00752458.1|")
        self.assertEqual(hit.target.name, "ZP_00752458")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae RC385]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=78)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 111.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 47.3654)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000136873)
        self.assertEqual(hsp.annotations["identity"], 33)
        self.assertEqual(hsp.annotations["positive"], 50)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 64, 64, 77],
                          [14, 78, 85, 98]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 84))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KRH'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGISVGKLLILGCIVALVFGTKKLRTIGEDAGYAIRSFQKALRGDEVTTQSST...QRH'}, length=78)",
        )
        self.assertEqual(hsp.target.id, "gi|75822907|ref|ZP_00752458.1|")
        self.assertEqual(hsp.target.name, "ZP_00752458")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Vibrio cholerae RC385]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGGIS+ +LLI+  IV L+FGTKKL +IG D G +I+ F+KA+  DE     ++ +    +  I        QE + + D++RH",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|758229         0 MGGISVGKLLILGCIVALVFGTKKLRTIGEDAGYAIRSFQKALRGDEVTTQSSTTEESVD
                  0 |||||..............||||||..||.|.|..|..|.||...||.............
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|758229        60 SFAI-------EQESSHSSDSQRH 77
                 60 ...|-------.||.....|..|| 84
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRH 98
""",
        )
        hit = hits[78]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|70733926|ref|YP_257566.1|")
        self.assertEqual(hit.target.name, "YP_257566")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein translocase TatA [Pseudomonas fluorescens Pf-5] >gi|68348225|gb|AAY95831.1| sec-independent protein translocase TatA [Pseudomonas fluorescens Pf-5]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=93)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 111.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 47.3654)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000136873)
        self.assertEqual(hsp.annotations["identity"], 29)
        self.assertEqual(hsp.annotations["positive"], 40)
        self.assertEqual(hsp.annotations["gaps"], 7)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 68, 69, 74, 80, 92],
                          [33, 82, 82, 87, 87, 99]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 73))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...RHD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGTKKLKNLGTDVGESIKGFRKAMNDDEKPAEPVVPPAAQPVPPVQPQQSAPLN...RKD'}, length=93)",
        )
        self.assertEqual(hsp.target.id, "gi|70733926|ref|YP_257566.1|")
        self.assertEqual(hsp.target.name, "YP_257566")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein translocase TatA [Pseudomonas fluorescens Pf-5] >gi|68348225|gb|AAY95831.1| sec-independent protein translocase TatA [Pseudomonas fluorescens Pf-5]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FGTKKL ++G+D+G SIKGF+KAM+DDE   +     A      +  +Q A  NQ      +  K E+  R D",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|707339        19 FGTKKLKNLGTDVGESIKGFRKAMNDDEKPAEPVVPPAAQPVPPVQPQQSAPLNQPHTID
                  0 ||||||...|.|.|.|||||.|||.|||.........|..........|-|..||-----
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQ-ADTNQ-----

gi|707339        79 VQAQKVEEPTRKD 92
                 60 -...|.|...|.| 73
gi|491764        87 -EQAKTEDAKRHD 99
""",
        )
        hit = hits[79]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|63254358|gb|AAY35454.1|")
        self.assertEqual(hit.target.name, "AAY35454")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Pseudomonas syringae pv. syringae B728a] >gi|66043651|ref|YP_233492.1| Twin-arginine translocation protein TatA/E [Pseudomonas syringae pv. syringae B728a]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=91)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 110.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 46.9802)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000178761)
        self.assertEqual(hsp.annotations["identity"], 27)
        self.assertEqual(hsp.annotations["positive"], 38)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 19,  46,  46,  84],
                          [ 33,  60,  64, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 69))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGTKKLKGLGSDVGESIKGFRKAMNDDDKPAEQPAPQPQQAQPAPQGSPLNQPH...VDE'}, length=91)",
        )
        self.assertEqual(hsp.target.id, "gi|63254358|gb|AAY35454.1|")
        self.assertEqual(hsp.target.name, "AAY35454")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Pseudomonas syringae pv. syringae B728a] >gi|66043651|ref|YP_233492.1| Twin-arginine translocation protein TatA/E [Pseudomonas syringae pv. syringae B728a]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FGTKKL  +GSD+G SIKGF+KAM+DD    DK ++      +        +   Q  T DA+ H  ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|632543        19 FGTKKLKGLGSDVGESIKGFRKAMNDD----DKPAEQPAPQPQQAQPAPQGSPLNQPHTI
                  0 ||||||...|||.|.|||||.|||.||----||......................|..|.
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|632543        75 DAQAHKVDE  84
                 60 ||..|....  69
gi|491764        93 DAKRHDKEQ 102
""",
        )
        hit = hits[80]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|73354814|gb|AAZ75668.1|")
        self.assertEqual(hit.target.name, "AAZ75668")
        self.assertEqual(
            hit.target.description, "TatA [Pseudomonas syringae pv. maculicola]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=91)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 110.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 46.9802)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000178761)
        self.assertEqual(hsp.annotations["identity"], 20)
        self.assertEqual(hsp.annotations["positive"], 27)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 52],
                          [33, 66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 33))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGTKKLKGLGSDVGESIKGFRKAMHDDDKPEEQ'}, length=91)",
        )
        self.assertEqual(hsp.target.id, "gi|73354814|gb|AAZ75668.1|")
        self.assertEqual(hsp.target.name, "AAZ75668")
        self.assertEqual(
            hsp.target.description, "TatA [Pseudomonas syringae pv. maculicola]"
        )
        self.assertEqual(
            hsp.annotations["midline"], "FGTKKL  +GSD+G SIKGF+KAM DD+  +++"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|733548        19 FGTKKLKGLGSDVGESIKGFRKAMHDDDKPEEQ 52
                  0 ||||||...|||.|.|||||.|||.||...... 33
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK 66
""",
        )
        hit = hits[81]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|50083761|ref|YP_045271.1|")
        self.assertEqual(hit.target.name, "YP_045271")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein [Acinetobacter sp. ADP1] >gi|49529737|emb|CAG67449.1| Sec-independent protein translocase protein [Acinetobacter sp. ADP1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=78)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 109.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 46.595)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000233469)
        self.assertEqual(hsp.annotations["identity"], 30)
        self.assertEqual(hsp.annotations["positive"], 43)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 5, 50, 52, 70],
                          [14, 59, 59, 77]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 65))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...AKT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({5: 'MAGLSIWHVVIFLIVVVLLFGTSKLKNLGKDVGGAVKDFKKSMRDETEENAQLH...VKT'}, length=78)",
        )
        self.assertEqual(hsp.target.id, "gi|50083761|ref|YP_045271.1|")
        self.assertEqual(hsp.target.name, "YP_045271")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein [Acinetobacter sp. ADP1] >gi|49529737|emb|CAG67449.1| Sec-independent protein translocase protein [Acinetobacter sp. ADP1]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "M G+SIW ++I  ++VVLLFGT KL ++G D+G ++K FKK+M D  +E  Q  T +  D   KT",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|500837         5 MAGLSIWHVVIFLIVVVLLFGTSKLKNLGKDVGGAVKDFKKSMRDETEENAQLHTPRTID
                  0 |.|.|||............|||.||...|.|.|...|.|||.|.|--.|..|..|....|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSD--DEPKQDKTSQDAD

gi|500837        65 AEVKT 70
                 60 ...|| 65
gi|491764        72 FTAKT 77
""",
        )
        hit = hits[82]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71548504|ref|ZP_00668728.1|")
        self.assertEqual(hit.target.name, "ZP_00668728")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Nitrosomonas eutropha C71] >gi|71485685|gb|EAO18234.1| Twin-arginine translocation protein TatA/E [Nitrosomonas eutropha C71]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=77)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 108.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 46.2098)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00030492)
        self.assertEqual(hsp.annotations["identity"], 26)
        self.assertEqual(hsp.annotations["positive"], 35)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 47],
                          [14, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 47))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLVVLAIVVLVFGTKKLRNLGSDLGGAVRGFKEGMKGAE'}, length=77)",
        )
        self.assertEqual(hsp.target.id, "gi|71548504|ref|ZP_00668728.1|")
        self.assertEqual(hsp.target.name, "ZP_00668728")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Nitrosomonas eutropha C71] >gi|71485685|gb|EAO18234.1| Twin-arginine translocation protein TatA/E [Nitrosomonas eutropha C71]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  L++  IVVL+FGTKKL ++GSDLG +++GFK+ M   E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|715485         0 MGSFSIWHWLVVLAIVVLVFGTKKLRNLGSDLGGAVRGFKEGMKGAE 47
                  0 ||..|||............||||||...|||||....|||..|...| 47
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE 61
""",
        )
        hit = hits[83]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|55247002|gb|EAL42253.1|")
        self.assertEqual(hit.target.name, "EAL42253")
        self.assertEqual(
            hit.target.description,
            "ENSANGP00000028218 [Anopheles gambiae str. PEST] >gi|57965302|ref|XP_561091.1| ENSANGP00000028218 [Anopheles gambiae str. PEST]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=53)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 107.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 45.8246)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000398238)
        self.assertEqual(hsp.annotations["identity"], 26)
        self.assertEqual(hsp.annotations["positive"], 37)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 2, 49],
                          [14, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 47))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({2: 'LGGIHIWHLLILLVVVVVVFGSKRLAGAGEDLGTAIRDFRKALRDDE'}, length=53)",
        )
        self.assertEqual(hsp.target.id, "gi|55247002|gb|EAL42253.1|")
        self.assertEqual(hsp.target.name, "EAL42253")
        self.assertEqual(
            hsp.target.description,
            "ENSANGP00000028218 [Anopheles gambiae str. PEST] >gi|57965302|ref|XP_561091.1| ENSANGP00000028218 [Anopheles gambiae str. PEST]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+GGI IW LLI+ V+VV++FG+K+L   G DLG +I+ F+KA+ DDE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|552470         2 LGGIHIWHLLILLVVVVVVFGSKRLAGAGEDLGTAIRDFRKALRDDE 49
                  0 .|||.||............||.|.|...|.|||..|..|.||..||| 47
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE 61
""",
        )
        hit = hits[84]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|50084688|ref|YP_046198.1|")
        self.assertEqual(hit.target.name, "YP_046198")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein secretion pathway, translocase protein [Acinetobacter sp. ADP1] >gi|49530664|emb|CAG68376.1| Sec-independent protein secretion pathway, translocase protein [Acinetobacter sp. ADP1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=71)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 106.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 45.4394)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000520115)
        self.assertEqual(hsp.annotations["identity"], 29)
        self.assertEqual(hsp.annotations["positive"], 41)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 1, 59],
                          [16, 74]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 58))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({16: 'GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1: 'GLSIWHILLFAVIVILLFGTSKLKSLGKDLGGAIKDFKDSVNSDDQKLLQNQQYKDIS'}, length=71)",
        )
        self.assertEqual(hsp.target.id, "gi|50084688|ref|YP_046198.1|")
        self.assertEqual(hsp.target.name, "YP_046198")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein secretion pathway, translocase protein [Acinetobacter sp. ADP1] >gi|49530664|emb|CAG68376.1| Sec-independent protein secretion pathway, translocase protein [Acinetobacter sp. ADP1]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "G+SIW +L+ AVIV+LLFGT KL S+G DLG +IK FK +++ D+ K  +  Q  D +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|500846         1 GLSIWHILLFAVIVILLFGTSKLKSLGKDLGGAIKDFKDSVNSDDQKLLQNQQYKDIS 59
                  0 |.|||............|||.||.|.|.|||..||.||.....|..|.....|..|.. 58
gi|491764        16 GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT 74
""",
        )
        hit = hits[85]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|28872267|ref|NP_794886.1|")
        self.assertEqual(hit.target.name, "NP_794886")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein translocase TatA [Pseudomonas syringae pv. tomato str. DC3000] >gi|28855521|gb|AAO58581.1| sec-independent protein translocase TatA [Pseudomonas syringae pv. tomato str. DC3000]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=91)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 105.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 45.0542)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000679292)
        self.assertEqual(hsp.annotations["identity"], 26)
        self.assertEqual(hsp.annotations["positive"], 37)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 19,  46,  46,  84],
                          [ 33,  60,  64, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 69))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGTKKLKGLGTDVGESIKGFRKAMHDDDKPAEQPAPQPQQAQPAPQGSPLNQPH...VDE'}, length=91)",
        )
        self.assertEqual(hsp.target.id, "gi|28872267|ref|NP_794886.1|")
        self.assertEqual(hsp.target.name, "NP_794886")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein translocase TatA [Pseudomonas syringae pv. tomato str. DC3000] >gi|28855521|gb|AAO58581.1| sec-independent protein translocase TatA [Pseudomonas syringae pv. tomato str. DC3000]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FGTKKL  +G+D+G SIKGF+KAM DD    DK ++      +        +   Q  T DA+ H  ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|288722        19 FGTKKLKGLGTDVGESIKGFRKAMHDD----DKPAEQPAPQPQQAQPAPQGSPLNQPHTI
                  0 ||||||...|.|.|.|||||.|||.||----||......................|..|.
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|288722        75 DAQAHKVDE  84
                 60 ||..|....  69
gi|491764        93 DAKRHDKEQ 102
""",
        )
        hit = hits[86]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|49082486|gb|AAT50643.1|")
        self.assertEqual(hit.target.name, "AAT50643")
        self.assertEqual(hit.target.description, "PA5068 [synthetic construct]")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=83)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 105.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 45.0542)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000679292)
        self.assertEqual(hsp.annotations["identity"], 25)
        self.assertEqual(hsp.annotations["positive"], 38)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 47, 47, 81],
                          [33, 61, 63, 97]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 64))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...AKR'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGTKRLKNLGSDVGEAIKGFRKAVNTEEDDKKDQPAAQPAQPLNQPHTIDAQAQ...ARK'}, length=83)",
        )
        self.assertEqual(hsp.target.id, "gi|49082486|gb|AAT50643.1|")
        self.assertEqual(hsp.target.name, "AAT50643")
        self.assertEqual(hsp.target.description, "PA5068 [synthetic construct]")
        self.assertEqual(
            hsp.annotations["midline"],
            "FGTK+L ++GSD+G +IKGF+KA++ +E   DK  Q A   A+ +        Q Q   E A++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|490824        19 FGTKRLKNLGSDVGEAIKGFRKAVNTEE--DDKKDQPAAQPAQPLNQPHTIDAQAQKVEE
                  0 ||||.|...|||.|..||||.||....|--.||..|.|...|...........|.|...|
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|490824        77 PARK 81
                 60 .|.. 64
gi|491764        93 DAKR 97
""",
        )
        hit = hits[87]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|53726598|ref|ZP_00141543.2|")
        self.assertEqual(hit.target.name, "ZP_00141543")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Pseudomonas aeruginosa UCBPP-PA14] >gi|9951361|gb|AAG08453.1| translocation protein TatA [Pseudomonas aeruginosa PAO1] >gi|15600261|ref|NP_253755.1| translocation protein TatA [Pseudomonas aeruginosa PAO1] >gi|11352708|pir||G83011 translocation protein TatA PA5068 [imported] - Pseudomonas aeruginosa (strain PAO1) >gi|24212512|sp|Q9HUB5|TATA_PSEAE Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=82)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 105.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 45.0542)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000679292)
        self.assertEqual(hsp.annotations["identity"], 25)
        self.assertEqual(hsp.annotations["positive"], 38)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 47, 47, 81],
                          [33, 61, 63, 97]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 64))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...AKR'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGTKRLKNLGSDVGEAIKGFRKAVNTEEDDKKDQPAAQPAQPLNQPHTIDAQAQ...ARK'}, length=82)",
        )
        self.assertEqual(hsp.target.id, "gi|53726598|ref|ZP_00141543.2|")
        self.assertEqual(hsp.target.name, "ZP_00141543")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Pseudomonas aeruginosa UCBPP-PA14] >gi|9951361|gb|AAG08453.1| translocation protein TatA [Pseudomonas aeruginosa PAO1] >gi|15600261|ref|NP_253755.1| translocation protein TatA [Pseudomonas aeruginosa PAO1] >gi|11352708|pir||G83011 translocation protein TatA PA5068 [imported] - Pseudomonas aeruginosa (strain PAO1) >gi|24212512|sp|Q9HUB5|TATA_PSEAE Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FGTK+L ++GSD+G +IKGF+KA++ +E   DK  Q A   A+ +        Q Q   E A++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|537265        19 FGTKRLKNLGSDVGEAIKGFRKAVNTEE--DDKKDQPAAQPAQPLNQPHTIDAQAQKVEE
                  0 ||||.|...|||.|..||||.||....|--.||..|.|...|...........|.|...|
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|537265        77 PARK 81
                 60 .|.. 64
gi|491764        93 DAKR 97
""",
        )
        hit = hits[88]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68213616|ref|ZP_00565447.1|")
        self.assertEqual(hit.target.name, "ZP_00565447")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Methylobacillus flagellatus KT] >gi|68187989|gb|EAN02672.1| Twin-arginine translocation protein TatA/E [Methylobacillus flagellatus KT]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=54)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 104.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 44.669)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000887182)
        self.assertEqual(hsp.annotations["identity"], 23)
        self.assertEqual(hsp.annotations["positive"], 34)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 47],
                          [14, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 47))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLAVVTMVFGTKRLRNMGSDLGGALKNFKEASKDPD'}, length=54)",
        )
        self.assertEqual(hsp.target.id, "gi|68213616|ref|ZP_00565447.1|")
        self.assertEqual(hsp.target.name, "ZP_00565447")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Methylobacillus flagellatus KT] >gi|68187989|gb|EAN02672.1| Twin-arginine translocation protein TatA/E [Methylobacillus flagellatus KT]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+  +V ++FGTK+L ++GSDLG ++K FK+A  D +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|682136         0 MGSFSIWHWLIVLAVVTMVFGTKRLRNMGSDLGGALKNFKEASKDPD 47
                  0 ||..|||............||||.|...|||||...|.||.|..|.. 47
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE 61
""",
        )
        hit = hits[89]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|74023810|ref|ZP_00694377.1|")
        self.assertEqual(hit.target.name, "ZP_00694377")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Rhodoferax ferrireducens DSM 15236] >gi|72603427|gb|EAO39432.1| Twin-arginine translocation protein TatA/E [Rhodoferax ferrireducens DSM 15236]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=79)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 103.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 44.2838)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0011587)
        self.assertEqual(hsp.annotations["identity"], 24)
        self.assertEqual(hsp.annotations["positive"], 32)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[18, 78],
                          [33, 93]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 60))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({18: 'FGTKKLRNIGSDLGGAVKGFKDGMKEGSDKAADAPAAAPQQVASSATAAKETIDVEAKTK'}, length=79)",
        )
        self.assertEqual(hsp.target.id, "gi|74023810|ref|ZP_00694377.1|")
        self.assertEqual(hsp.target.name, "ZP_00694377")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Rhodoferax ferrireducens DSM 15236] >gi|72603427|gb|EAO39432.1| Twin-arginine translocation protein TatA/E [Rhodoferax ferrireducens DSM 15236]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FGTKKL +IGSDLG ++KGFK  M +   K       A     + A    +T   +AKT+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|740238        18 FGTKKLRNIGSDLGGAVKGFKDGMKEGSDKAADAPAAAPQQVASSATAAKETIDVEAKTK
                  0 ||||||..||||||...||||..|.....|.......|.......|.....|....|||.
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|740238        78 
                 60 
gi|491764        93 
""",
        )
        hit = hits[90]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71066554|ref|YP_265281.1|")
        self.assertEqual(hit.target.name, "YP_265281")
        self.assertEqual(
            hit.target.description,
            "twin-arginine translocation protein TatA/E [Psychrobacter arcticus 273-4] >gi|71039539|gb|AAZ19847.1| twin-arginine translocation protein TatA/E [Psychrobacter arcticus 273-4]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=87)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 102.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 43.8986)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0015133)
        self.assertEqual(hsp.annotations["identity"], 31)
        self.assertEqual(hsp.annotations["positive"], 43)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 52, 56, 75],
                          [14, 66, 66, 85]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 75))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...ADT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSITHWLILLVVVVVVFGTSKLRNAGKDLGGAVKGFKEAVKDENTEHAKKH...SDT'}, length=87)",
        )
        self.assertEqual(hsp.target.id, "gi|71066554|ref|YP_265281.1|")
        self.assertEqual(hsp.target.name, "YP_265281")
        self.assertEqual(
            hsp.target.description,
            "twin-arginine translocation protein TatA/E [Psychrobacter arcticus 273-4] >gi|71039539|gb|AAZ19847.1| twin-arginine translocation protein TatA/E [Psychrobacter arcticus 273-4]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SI   LI+ V+VV++FGT KL + G DLG ++KGFK+A+ D+  +  K       DA      I   Q+DT",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|710665         0 MGSFSITHWLILLVVVVVVFGTSKLRNAGKDLGGAVKGFKEAVKDENTEHAKKHVVLDHD
                  0 ||..||.............|||.||...|.|||...||||.|..|......|----...|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK----TSQD

gi|710665        60 AGTNPPNITGTQSDT 75
                 60 |......|...|.|| 75
gi|491764        70 ADFTAKTIADKQADT 85
""",
        )
        hit = hits[91]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|15611372|ref|NP_223023.1|")
        self.assertEqual(hit.target.name, "NP_223023")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein jhp0303 [Helicobacter pylori J99] >gi|4154834|gb|AAD05888.1| putative [Helicobacter pylori J99] >gi|7444815|pir||A71948 hypothetical protein jhp0303 - Helicobacter pylori (strain J99) >gi|9979057|sp|Q9ZMB8|TATA_HELPJ Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=79)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 101.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 43.5134)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00197644)
        self.assertEqual(hsp.annotations["identity"], 31)
        self.assertEqual(hsp.annotations["positive"], 48)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0,  4,  5, 59, 59, 78],
                          [14, 18, 18, 72, 74, 93]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 80))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KTE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGFTSIWHWVIVLLVIVLLFGAKKIPELAKGLGSGIKNFKKAVKDDEEEAKNE...KQE'}, length=79)",
        )
        self.assertEqual(hsp.target.id, "gi|15611372|ref|NP_223023.1|")
        self.assertEqual(hsp.target.name, "NP_223023")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein jhp0303 [Helicobacter pylori J99] >gi|4154834|gb|AAD05888.1| putative [Helicobacter pylori J99] >gi|7444815|pir||A71948 hypothetical protein jhp0303 - Helicobacter pylori (strain J99) >gi|9979057|sp|Q9ZMB8|TATA_HELPJ Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGG  SIW  +I+ +++VLLFG KK+  +   LG+ IK FKKA+ DDE +     +  D  A+    K  +T++ ++K E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|156113         0 MGGFTSIWHWVIVLLVIVLLFGAKKIPELAKGLGSGIKNFKKAVKDDEEEAKNELKTLD-
                  0 |||.-|||............||.||.......||..||.||||..|||..........|-
gi|491764        14 MGGI-SIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADF

gi|156113        59 -AQATQTKVHETSEIKSKQE 78
                 60 -|.....|...|.....|.| 80
gi|491764        73 TAKTIADKQADTNQEQAKTE 93
""",
        )
        hit = hits[92]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|13471183|ref|NP_102752.1|")
        self.assertEqual(hit.target.name, "NP_102752")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein translocase protein tatA/E [Mesorhizobium loti MAFF303099] >gi|14021927|dbj|BAB48538.1| sec-independent protein translocase protein TatA/E [Mesorhizobium loti MAFF303099] >gi|24212508|sp|Q98LC5|TATA_RHILO Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=73)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 99.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 42.743)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00337129)
        self.assertEqual(hsp.annotations["identity"], 28)
        self.assertEqual(hsp.annotations["positive"], 41)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 56, 58, 69],
                          [14, 70, 70, 81]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 69))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...ADK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWMIVLVIVLLVFGRGKIPELMGDMAKGIKSFKKGMADDDVADDKRT...KEK'}, length=73)",
        )
        self.assertEqual(hsp.target.id, "gi|13471183|ref|NP_102752.1|")
        self.assertEqual(hsp.target.name, "NP_102752")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein translocase protein tatA/E [Mesorhizobium loti MAFF303099] >gi|14021927|dbj|BAB48538.1| sec-independent protein translocase protein TatA/E [Mesorhizobium loti MAFF303099] >gi|24212508|sp|Q98LC5|TATA_RHILO Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  +I+ VIV+L+FG  K+  +  D+   IK FKK M+DD+   DK + +  AD T   + +K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|134711         0 MGSFSIWHWMIVLVIVLLVFGRGKIPELMGDMAKGIKSFKKGMADDDVADDKRTVEHRAD
                  0 ||..|||............||..|......|....||.|||.|.||....||....--||
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD--AD

gi|134711        60 ETVSAVKEK 69
                 60 .|......| 69
gi|491764        72 FTAKTIADK 81
""",
        )
        hit = hits[93]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|42523995|ref|NP_969375.1|")
        self.assertEqual(hit.target.name, "NP_969375")
        self.assertEqual(
            hit.target.description,
            "twin-arginine-dependent translocase protein [Bdellovibrio bacteriovorus HD100] >gi|39576203|emb|CAE80368.1| twin-arginine-dependent translocase protein [Bdellovibrio bacteriovorus HD100]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=81)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 99.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 42.743)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00337129)
        self.assertEqual(hsp.annotations["identity"], 21)
        self.assertEqual(hsp.annotations["positive"], 36)
        self.assertEqual(hsp.annotations["gaps"], 5)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[18, 55, 55, 76],
                          [33, 70, 75, 96]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 63))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...DAK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({18: 'FGPSKLPNLGRSLGESIRGFKKGLNEDPAADEKEAKQQITQNPQRPVNEQQPQTEEKK'}, length=81)",
        )
        self.assertEqual(hsp.target.id, "gi|42523995|ref|NP_969375.1|")
        self.assertEqual(hsp.target.name, "NP_969375")
        self.assertEqual(
            hsp.target.description,
            "twin-arginine-dependent translocase protein [Bdellovibrio bacteriovorus HD100] >gi|39576203|emb|CAE80368.1| twin-arginine-dependent translocase protein [Bdellovibrio bacteriovorus HD100]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG  KL ++G  LG SI+GFKK +++D    +K ++      +   + Q   N++Q +TE+ K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|425239        18 FGPSKLPNLGRSLGESIRGFKKGLNEDPAADEKEAKQ-----QITQNPQRPVNEQQPQTE
                  0 ||..||...|..||.||.||||....|.....|....-----......|...|..|..||
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|425239        73 EKK 76
                 60 ..| 63
gi|491764        93 DAK 96
""",
        )
        hit = hits[94]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67158086|ref|ZP_00419176.1|")
        self.assertEqual(hit.target.name, "ZP_00419176")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Azotobacter vinelandii AvOP] >gi|67085069|gb|EAM04546.1| Twin-arginine translocation protein TatA/E [Azotobacter vinelandii AvOP]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=85)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 98.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 42.3578)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00440304)
        self.assertEqual(hsp.annotations["identity"], 21)
        self.assertEqual(hsp.annotations["positive"], 35)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 85],
                          [33, 99]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 66))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...RHD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGTKRLKTLGSDIGEAIKGFRKAVNTEEGENRPAEPQTGTSAGDTLNKTQTIEG...RKD'}, length=85)",
        )
        self.assertEqual(hsp.target.id, "gi|67158086|ref|ZP_00419176.1|")
        self.assertEqual(hsp.target.name, "ZP_00419176")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Azotobacter vinelandii AvOP] >gi|67085069|gb|EAM04546.1| Twin-arginine translocation protein TatA/E [Azotobacter vinelandii AvOP]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FGTK+L ++GSD+G +IKGF+KA++ +E +          +A    +K      +  K +   R D",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|671580        19 FGTKRLKTLGSDIGEAIKGFRKAVNTEEGENRPAEPQTGTSAGDTLNKTQTIEGQAQKVD
                  0 ||||.|...|||.|..||||.||....|.............|.....|.........|..
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|671580        79 TPVRKD 85
                 60 ...|.| 66
gi|491764        93 DAKRHD 99
""",
        )
        hit = hits[95]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|15644948|ref|NP_207118.1|")
        self.assertEqual(hit.target.name, "NP_207118")
        self.assertEqual(
            hit.target.description,
            "conserved hypothetical secreted protein [Helicobacter pylori 26695] >gi|2313428|gb|AAD07397.1| conserved hypothetical secreted protein [Helicobacter pylori 26695] >gi|7429236|pir||H64559 conserved hypothetical secreted protein HP0320 - Helicobacter pylori (strain 26695) >gi|9978986|sp|O25088|TATA_HELPY Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=79)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 98.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 42.3578)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00440304)
        self.assertEqual(hsp.annotations["identity"], 29)
        self.assertEqual(hsp.annotations["positive"], 47)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0,  4,  5, 47, 49, 79],
                          [14, 18, 18, 60, 60, 90]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 79))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...EQA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq('MGGFTSIWHWVIVLLVIVLLFGAKKIPELAKGLGSGIKNFKKAVKDDEEEAKNE...QES')",
        )
        self.assertEqual(hsp.target.id, "gi|15644948|ref|NP_207118.1|")
        self.assertEqual(hsp.target.name, "NP_207118")
        self.assertEqual(
            hsp.target.description,
            "conserved hypothetical secreted protein [Helicobacter pylori 26695] >gi|2313428|gb|AAD07397.1| conserved hypothetical secreted protein [Helicobacter pylori 26695] >gi|7429236|pir||H64559 conserved hypothetical secreted protein HP0320 - Helicobacter pylori (strain 26695) >gi|9978986|sp|O25088|TATA_HELPY Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGG  SIW  +I+ +++VLLFG KK+  +   LG+ IK FKKA+ DD  E K +  + DA  T   + +     +++++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|156449         0 MGGFTSIWHWVIVLLVIVLLFGAKKIPELAKGLGSGIKNFKKAVKDDEEEAKNEPKTLDA
                  0 |||.-|||............||.||.......||..||.||||..||--|.|......||
gi|491764        14 MGGI-SIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDD--EPKQDKTSQDA

gi|156449        60 QATQTKVHESSEIKSKQES 79
                 60 ..|................ 79
gi|491764        71 DFTAKTIADKQADTNQEQA 90
""",
        )
        hit = hits[96]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|13277311|emb|CAC34414.1|")
        self.assertEqual(hit.target.name, "CAC34414")
        self.assertEqual(
            hit.target.description, "putative TatA protein [Legionella pneumophila]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=61)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 96.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 41.5874)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00751045)
        self.assertEqual(hsp.annotations["identity"], 26)
        self.assertEqual(hsp.annotations["positive"], 35)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 2, 49],
                          [14, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 47))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({2: 'LSGISPLSLLLILAIIIALFGTSKLKTIGSDLGEAIKNFRKAMNSEE'}, length=61)",
        )
        self.assertEqual(hsp.target.id, "gi|13277311|emb|CAC34414.1|")
        self.assertEqual(hsp.target.name, "CAC34414")
        self.assertEqual(
            hsp.target.description, "putative TatA protein [Legionella pneumophila]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+ GIS   LL+I  I++ LFGT KL +IGSDLG +IK F+KAM+ +E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|132773         2 LSGISPLSLLLILAIIIALFGTSKLKTIGSDLGEAIKNFRKAMNSEE 49
                  0 ..|||..............|||.||..||||||..||.|.|||...| 47
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE 61
""",
        )
        hit = hits[97]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|54298906|ref|YP_125275.1|")
        self.assertEqual(hit.target.name, "YP_125275")
        self.assertEqual(
            hit.target.description,
            "Putative TatA protein(twin arginine translocation) [Legionella pneumophila str. Paris] >gi|54295733|ref|YP_128148.1| Putative TatA protein(twin arginine translocation) [Legionella pneumophila str. Lens] >gi|53755565|emb|CAH17064.1| Putative TatA protein(twin arginine translocation) [Legionella pneumophila str. Lens] >gi|53752691|emb|CAH14126.1| Putative TatA protein(twin arginine translocation) [Legionella pneumophila str. Paris] >gi|47132321|gb|AAT11788.1| TatA protein [Legionella pneumophila]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=61)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 96.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 41.5874)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00751045)
        self.assertEqual(hsp.annotations["identity"], 27)
        self.assertEqual(hsp.annotations["positive"], 35)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 2, 49],
                          [14, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 47))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({2: 'LSGISPLSLLLILAIIVALFGTSKLKTIGSDLGEAIKNFRKAMNSEE'}, length=61)",
        )
        self.assertEqual(hsp.target.id, "gi|54298906|ref|YP_125275.1|")
        self.assertEqual(hsp.target.name, "YP_125275")
        self.assertEqual(
            hsp.target.description,
            "Putative TatA protein(twin arginine translocation) [Legionella pneumophila str. Paris] >gi|54295733|ref|YP_128148.1| Putative TatA protein(twin arginine translocation) [Legionella pneumophila str. Lens] >gi|53755565|emb|CAH17064.1| Putative TatA protein(twin arginine translocation) [Legionella pneumophila str. Lens] >gi|53752691|emb|CAH14126.1| Putative TatA protein(twin arginine translocation) [Legionella pneumophila str. Paris] >gi|47132321|gb|AAT11788.1| TatA protein [Legionella pneumophila]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+ GIS   LL+I  I+V LFGT KL +IGSDLG +IK F+KAM+ +E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|542989         2 LSGISPLSLLLILAIIVALFGTSKLKTIGSDLGEAIKNFRKAMNSEE 49
                  0 ..|||..............|||.||..||||||..||.|.|||...| 47
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE 61
""",
        )
        hit = hits[98]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71363513|ref|ZP_00654157.1|")
        self.assertEqual(hit.target.name, "ZP_00654157")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Psychrobacter cryohalolentis K5] >gi|71161313|gb|EAO11109.1| Twin-arginine translocation protein TatA/E [Psychrobacter cryohalolentis K5]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=94)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 96.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 41.5874)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00751045)
        self.assertEqual(hsp.annotations["identity"], 25)
        self.assertEqual(hsp.annotations["positive"], 39)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 55],
                          [14, 69]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 55))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSITHWLILLVVVVVVFGTAKLKNAGKDLGGAVKGFKEAVKDEEAEHARKNR'}, length=94)",
        )
        self.assertEqual(hsp.target.id, "gi|71363513|ref|ZP_00654157.1|")
        self.assertEqual(hsp.target.name, "ZP_00654157")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Psychrobacter cryohalolentis K5] >gi|71161313|gb|EAO11109.1| Twin-arginine translocation protein TatA/E [Psychrobacter cryohalolentis K5]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SI   LI+ V+VV++FGT KL + G DLG ++KGFK+A+ D+E +  + ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|713635         0 MGSFSITHWLILLVVVVVVFGTAKLKNAGKDLGGAVKGFKEAVKDEEAEHARKNR 55
                  0 ||..||.............|||.||...|.|||...||||.|..|.|........ 55
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ 69
""",
        )
        hit = hits[99]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71362217|ref|ZP_00653377.1|")
        self.assertEqual(hit.target.name, "ZP_00653377")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Psychrobacter cryohalolentis K5] >gi|71162335|gb|EAO12126.1| Twin-arginine translocation protein TatA/E [Psychrobacter cryohalolentis K5]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=80)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 96.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 41.5874)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00751045)
        self.assertEqual(hsp.annotations["identity"], 27)
        self.assertEqual(hsp.annotations["positive"], 42)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 73],
                          [14, 87]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 73))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...TNQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSITHWLILLVVVVVVFGTSKLRNAGKDLGGAVKGFKEAVKDENTEHAKKQ...TTK'}, length=80)",
        )
        self.assertEqual(hsp.target.id, "gi|71362217|ref|ZP_00653377.1|")
        self.assertEqual(hsp.target.name, "ZP_00653377")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Psychrobacter cryohalolentis K5] >gi|71162335|gb|EAO12126.1| Twin-arginine translocation protein TatA/E [Psychrobacter cryohalolentis K5]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SI   LI+ V+VV++FGT KL + G DLG ++KGFK+A+ D+  +  K     D       +++  T +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|713622         0 MGSFSITHWLILLVVVVVVFGTSKLRNAGKDLGGAVKGFKEAVKDENTEHAKKQVVLDHD
                  0 ||..||.............|||.||...|.|||...||||.|..|......|.....|..
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|713622        60 GNAHTEERPTTTK 73
                 60 ..........|.. 73
gi|491764        74 AKTIADKQADTNQ 87
""",
        )
        hit = hits[100]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|27379862|ref|NP_771391.1|")
        self.assertEqual(hit.target.name, "NP_771391")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein bsl4751 [Bradyrhizobium japonicum USDA 110] >gi|27353015|dbj|BAC50016.1| bsl4751 [Bradyrhizobium japonicum USDA 110]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=77)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 95.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 41.2022)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00980895)
        self.assertEqual(hsp.annotations["identity"], 27)
        self.assertEqual(hsp.annotations["positive"], 38)
        self.assertEqual(hsp.annotations["gaps"], 5)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 54, 54, 66],
                          [14, 68, 73, 85]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 71))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...ADT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSLSIWHWILVIAVVLLLFGRGKISDLMGDVAQGIKAFKKGMQDDDKPADKPE...APT'}, length=77)",
        )
        self.assertEqual(hsp.target.id, "gi|27379862|ref|NP_771391.1|")
        self.assertEqual(hsp.target.name, "NP_771391")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein bsl4751 [Bradyrhizobium japonicum USDA 110] >gi|27353015|dbj|BAC50016.1| bsl4751 [Bradyrhizobium japonicum USDA 110]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG +SIW  +++  +V+LLFG  K+  +  D+   IK FKK M DD+   DK        AK+I    A T",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|273798         0 MGSLSIWHWILVIAVVLLLFGRGKISDLMGDVAQGIKAFKKGMQDDDKPADKPE-----P
                  0 ||..|||............||..|......|....||.|||.|.||....||..-----.
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|273798        55 AKSIEHNAAPT 66
                 60 ||.|....|.| 71
gi|491764        74 AKTIADKQADT 85
""",
        )
        hit = hits[101]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|39935914|ref|NP_948190.1|")
        self.assertEqual(hit.target.name, "NP_948190")
        self.assertEqual(
            hit.target.description,
            "putative sec-independent protein translocase protein tatA/E [Rhodopseudomonas palustris CGA009] >gi|39649768|emb|CAE28290.1| putative sec-independent protein translocase protein tatA/E [Rhodopseudomonas palustris CGA009]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=78)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 94.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 40.817)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0128109)
        self.assertEqual(hsp.annotations["identity"], 25)
        self.assertEqual(hsp.annotations["positive"], 41)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 54, 56, 76],
                          [14, 68, 68, 88]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 76))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...NQE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSLSIWHWIVVIAVVLLLFGRGKISDLMGDVAQGIKSFKKGLQDDEKTAEKSE...GSK'}, length=78)",
        )
        self.assertEqual(hsp.target.id, "gi|39935914|ref|NP_948190.1|")
        self.assertEqual(hsp.target.name, "NP_948190")
        self.assertEqual(
            hsp.target.description,
            "putative sec-independent protein translocase protein tatA/E [Rhodopseudomonas palustris CGA009] >gi|39649768|emb|CAE28290.1| putative sec-independent protein translocase protein tatA/E [Rhodopseudomonas palustris CGA009]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG +SIW  +++  +V+LLFG  K+  +  D+   IK FKK + DDE   +K+   +  D T+   A  + D   +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|399359         0 MGSLSIWHWIVVIAVVLLLFGRGKISDLMGDVAQGIKSFKKGLQDDEKTAEKSEPVKSID
                  0 ||..|||............||..|......|....||.|||...|||....|..--...|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS--QDAD

gi|399359        60 HTSTPGATNRTDVGSK 76
                 60 .|....|....|.... 76
gi|491764        72 FTAKTIADKQADTNQE 88
""",
        )
        hit = hits[102]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|17935600|ref|NP_532390.1|")
        self.assertEqual(hit.target.name, "NP_532390")
        self.assertEqual(
            hit.target.description,
            "SEC-independent protein translocase protein [Agrobacterium tumefaciens str. C58] >gi|17740143|gb|AAL42706.1| SEC-independent protein translocase protein [Agrobacterium tumefaciens str. C58] >gi|15156802|gb|AAK87479.1| AGR_C_3135p [Agrobacterium tumefaciens str. C58] >gi|15889013|ref|NP_354694.1| hypothetical protein AGR_C_3135 [Agrobacterium tumefaciens str. C58] >gi|25520668|pir||F97565 hypothetical protein AGR_C_3135 [imported] - Agrobacterium tumefaciens (strain C58, Cereon) >gi|25522636|pir||AD2786 SEC-independent protein translocase protein [imported] - Agrobacterium tumefaciens (strain C58, Dupont) >gi|24212489|sp|Q8UEP9|TATA_AGRT5 Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=70)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 94.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 40.817)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0128109)
        self.assertEqual(hsp.annotations["identity"], 30)
        self.assertEqual(hsp.annotations["positive"], 43)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 47, 47, 62, 62, 67],
                          [14, 61, 63, 78, 79, 84]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 70))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...QAD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSVWHWLIVLVIVLVLFGRGKIPELMGDVAKGIKSFKKGMADEDQTPPPAD...KAD'}, length=70)",
        )
        self.assertEqual(hsp.target.id, "gi|17935600|ref|NP_532390.1|")
        self.assertEqual(hsp.target.name, "NP_532390")
        self.assertEqual(
            hsp.target.description,
            "SEC-independent protein translocase protein [Agrobacterium tumefaciens str. C58] >gi|17740143|gb|AAL42706.1| SEC-independent protein translocase protein [Agrobacterium tumefaciens str. C58] >gi|15156802|gb|AAK87479.1| AGR_C_3135p [Agrobacterium tumefaciens str. C58] >gi|15889013|ref|NP_354694.1| hypothetical protein AGR_C_3135 [Agrobacterium tumefaciens str. C58] >gi|25520668|pir||F97565 hypothetical protein AGR_C_3135 [imported] - Agrobacterium tumefaciens (strain C58, Cereon) >gi|25522636|pir||AD2786 SEC-independent protein translocase protein [imported] - Agrobacterium tumefaciens (strain C58, Dupont) >gi|24212489|sp|Q8UEP9|TATA_AGRT5 Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  S+W  LI+ VIV++LFG  K+  +  D+   IK FKK M+D++  Q     DA+  AKT+ D +AD",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|179356         0 MGSFSVWHWLIVLVIVLVLFGRGKIPELMGDVAKGIKSFKKGMADED--QTPPPADANAN
                  0 ||..|.|............||..|......|....||.|||.|.|..--|.....||...
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|179356        58 AKTV-DHKAD 67
                 60 |||.-|..|| 70
gi|491764        74 AKTIADKQAD 84
""",
        )
        hit = hits[103]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|62289827|ref|YP_221620.1|")
        self.assertEqual(hit.target.name, "YP_221620")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein TatA, hypothetical [Brucella abortus biovar 1 str. 9-941] >gi|17983053|gb|AAL52265.1| SEC-INDEPENDENT PROTEIN TRANSLOCASE PROTEIN TATA [Brucella melitensis 16M] >gi|62195959|gb|AAX74259.1| Sec-independent protein translocase protein TatA, hypothetical [Brucella abortus biovar 1 str. 9-941] >gi|17987367|ref|NP_540001.1| SEC-INDEPENDENT PROTEIN TRANSLOCASE PROTEIN TATA [Brucella melitensis 16M] >gi|25302679|pir||AF3387 sec-independent protein translocase protein tatA [imported] - Brucella melitensis (strain 16M) >gi|54039707|sp|P66888|TATA_BRUSU Sec-independent protein translocase protein tatA/E homolog >gi|54042236|sp|P66887|TATA_BRUME Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=72)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 93.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 40.4318)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0167315)
        self.assertEqual(hsp.annotations["identity"], 24)
        self.assertEqual(hsp.annotations["positive"], 36)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 57],
                          [14, 71]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 57))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLAVVLLLFGRGKIPELMGDVAKGIKNFKQGMADEDAKEDPRTIDA'}, length=72)",
        )
        self.assertEqual(hsp.target.id, "gi|62289827|ref|YP_221620.1|")
        self.assertEqual(hsp.target.name, "YP_221620")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein TatA, hypothetical [Brucella abortus biovar 1 str. 9-941] >gi|17983053|gb|AAL52265.1| SEC-INDEPENDENT PROTEIN TRANSLOCASE PROTEIN TATA [Brucella melitensis 16M] >gi|62195959|gb|AAX74259.1| Sec-independent protein translocase protein TatA, hypothetical [Brucella abortus biovar 1 str. 9-941] >gi|17987367|ref|NP_540001.1| SEC-INDEPENDENT PROTEIN TRANSLOCASE PROTEIN TATA [Brucella melitensis 16M] >gi|25302679|pir||AF3387 sec-independent protein translocase protein tatA [imported] - Brucella melitensis (strain 16M) >gi|54039707|sp|P66888|TATA_BRUSU Sec-independent protein translocase protein tatA/E homolog >gi|54042236|sp|P66887|TATA_BRUME Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+  +V+LLFG  K+  +  D+   IK FK+ M+D++ K+D  + DA",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|622898         0 MGSFSIWHWLIVLAVVLLLFGRGKIPELMGDVAKGIKNFKQGMADEDAKEDPRTIDA 57
                  0 ||..|||............||..|......|....||.||..|.|...|.|....|| 57
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDA 71
""",
        )
        hit = hits[104]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|23347697|gb|AAN29810.1|")
        self.assertEqual(hit.target.name, "AAN29810")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein TatA, putative [Brucella suis 1330] >gi|23501768|ref|NP_697895.1| Sec-independent protein translocase protein TatA, putative [Brucella suis 1330]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=80)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 93.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 40.4318)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0167315)
        self.assertEqual(hsp.annotations["identity"], 24)
        self.assertEqual(hsp.annotations["positive"], 36)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 8, 65],
                          [14, 71]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 57))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({8: 'MGSFSIWHWLIVLAVVLLLFGRGKIPELMGDVAKGIKNFKQGMADEDAKEDPRTIDA'}, length=80)",
        )
        self.assertEqual(hsp.target.id, "gi|23347697|gb|AAN29810.1|")
        self.assertEqual(hsp.target.name, "AAN29810")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein TatA, putative [Brucella suis 1330] >gi|23501768|ref|NP_697895.1| Sec-independent protein translocase protein TatA, putative [Brucella suis 1330]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+  +V+LLFG  K+  +  D+   IK FK+ M+D++ K+D  + DA",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|233476         8 MGSFSIWHWLIVLAVVLLLFGRGKIPELMGDVAKGIKNFKQGMADEDAKEDPRTIDA 65
                  0 ||..|||............||..|......|....||.||..|.|...|.|....|| 57
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDA 71
""",
        )
        hit = hits[105]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|75675971|ref|YP_318392.1|")
        self.assertEqual(hit.target.name, "YP_318392")
        self.assertEqual(
            hit.target.description,
            "twin-arginine translocation protein TatA/E [Nitrobacter winogradskyi Nb-255] >gi|74420841|gb|ABA05040.1| twin-arginine translocation protein TatA/E [Nitrobacter winogradskyi Nb-255]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=78)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 93.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 40.4318)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0167315)
        self.assertEqual(hsp.annotations["identity"], 21)
        self.assertEqual(hsp.annotations["positive"], 32)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 52],
                          [14, 66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 52))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSLSIWHWIVVVAVILLLFGRGKISDLMGDVAQGIKAFKKGMKDDEKTAEK'}, length=78)",
        )
        self.assertEqual(hsp.target.id, "gi|75675971|ref|YP_318392.1|")
        self.assertEqual(hsp.target.name, "YP_318392")
        self.assertEqual(
            hsp.target.description,
            "twin-arginine translocation protein TatA/E [Nitrobacter winogradskyi Nb-255] >gi|74420841|gb|ABA05040.1| twin-arginine translocation protein TatA/E [Nitrobacter winogradskyi Nb-255]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG +SIW  +++  +++LLFG  K+  +  D+   IK FKK M DDE   +K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|756759         0 MGSLSIWHWIVVVAVILLLFGRGKISDLMGDVAQGIKAFKKGMKDDEKTAEK 52
                  0 ||..|||............||..|......|....||.|||.|.|||....| 52
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK 66
""",
        )
        hit = hits[106]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|69928230|ref|ZP_00625391.1|")
        self.assertEqual(hit.target.name, "ZP_00625391")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Nitrobacter hamburgensis X14] >gi|69143234|gb|EAN61762.1| Twin-arginine translocation protein TatA/E [Nitrobacter hamburgensis X14]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=79)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 93.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 40.4318)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0167315)
        self.assertEqual(hsp.annotations["identity"], 21)
        self.assertEqual(hsp.annotations["positive"], 32)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 52],
                          [14, 66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 52))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSLSIWHWIVVIAVILLLFGRGKISDLMGDVAQGIKAFKKGMQDDEKTAEK'}, length=79)",
        )
        self.assertEqual(hsp.target.id, "gi|69928230|ref|ZP_00625391.1|")
        self.assertEqual(hsp.target.name, "ZP_00625391")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Nitrobacter hamburgensis X14] >gi|69143234|gb|EAN61762.1| Twin-arginine translocation protein TatA/E [Nitrobacter hamburgensis X14]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG +SIW  +++  +++LLFG  K+  +  D+   IK FKK M DDE   +K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|699282         0 MGSLSIWHWIVVIAVILLLFGRGKISDLMGDVAQGIKAFKKGMQDDEKTAEK 52
                  0 ||..|||............||..|......|....||.|||.|.|||....| 52
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK 66
""",
        )
        hit = hits[107]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|77689454|ref|ZP_00804635.1|")
        self.assertEqual(hit.target.name, "ZP_00804635")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Rhodopseudomonas palustris BisB5] >gi|77653821|gb|EAO85595.1| Twin-arginine translocation protein TatA/E [Rhodopseudomonas palustris BisB5]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=79)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 92.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 40.0466)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0218521)
        self.assertEqual(hsp.annotations["identity"], 25)
        self.assertEqual(hsp.annotations["positive"], 37)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 54, 56, 67],
                          [14, 68, 68, 79]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 67))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...TIA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSLSIWHWIVVIAVVLLLFGRGKISDLMGDVAQGIKSFKKGLQDDEKTAEKPD...TAA'}, length=79)",
        )
        self.assertEqual(hsp.target.id, "gi|77689454|ref|ZP_00804635.1|")
        self.assertEqual(hsp.target.name, "ZP_00804635")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Rhodopseudomonas palustris BisB5] >gi|77653821|gb|EAO85595.1| Twin-arginine translocation protein TatA/E [Rhodopseudomonas palustris BisB5]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG +SIW  +++  +V+LLFG  K+  +  D+   IK FKK + DDE   +K    +  D  A T A",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|776894         0 MGSLSIWHWIVVIAVVLLLFGRGKISDLMGDVAQGIKSFKKGLQDDEKTAEKPDPVKSID
                  0 ||..|||............||..|......|....||.|||...|||....|..--...|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS--QDAD

gi|776894        60 HNAPTAA 67
                 60 ..|.|.| 67
gi|491764        72 FTAKTIA 79
""",
        )
        hit = hits[108]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|77743614|ref|ZP_00812071.1|")
        self.assertEqual(hit.target.name, "ZP_00812071")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Rhodopseudomonas palustris BisA53] >gi|77696516|gb|EAO87698.1| Twin-arginine translocation protein TatA/E [Rhodopseudomonas palustris BisA53]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=78)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 91.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 39.6614)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0285397)
        self.assertEqual(hsp.annotations["identity"], 23)
        self.assertEqual(hsp.annotations["positive"], 34)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 53],
                          [14, 67]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 53))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSLSIWHWLVVIVVVLLLFGRGKISDLMGDVAQGIKSFKKGLQDDDKTAEKT'}, length=78)",
        )
        self.assertEqual(hsp.target.id, "gi|77743614|ref|ZP_00812071.1|")
        self.assertEqual(hsp.target.name, "ZP_00812071")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Rhodopseudomonas palustris BisA53] >gi|77696516|gb|EAO87698.1| Twin-arginine translocation protein TatA/E [Rhodopseudomonas palustris BisA53]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG +SIW  L++ V+V+LLFG  K+  +  D+   IK FKK + DD+   +KT",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|777436         0 MGSLSIWHWLVVIVVVLLLFGRGKISDLMGDVAQGIKSFKKGLQDDDKTAEKT 53
                  0 ||..|||............||..|......|....||.|||...||.....|| 53
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKT 67
""",
        )
        hit = hits[109]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71066141|ref|YP_264868.1|")
        self.assertEqual(hit.target.name, "YP_264868")
        self.assertEqual(
            hit.target.description,
            "twin-arginine translocation protein TatE [Psychrobacter arcticus 273-4] >gi|71039126|gb|AAZ19434.1| twin-arginine translocation protein TatE [Psychrobacter arcticus 273-4]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=89)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 90.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 39.2762)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.037274)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 22)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[18, 46],
                          [33, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 28))
        self.assertEqual(
            repr(hsp.query.seq), "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDE'}, length=103)"
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq), "Seq({18: 'FGTAKLKNAGKDLGGAVKGFKEAVKDEE'}, length=89)"
        )
        self.assertEqual(hsp.target.id, "gi|71066141|ref|YP_264868.1|")
        self.assertEqual(hsp.target.name, "YP_264868")
        self.assertEqual(
            hsp.target.description,
            "twin-arginine translocation protein TatE [Psychrobacter arcticus 273-4] >gi|71039126|gb|AAZ19434.1| twin-arginine translocation protein TatE [Psychrobacter arcticus 273-4]",
        )
        self.assertEqual(hsp.annotations["midline"], "FGT KL + G DLG ++KGFK+A+ D+E")
        self.assertEqual(
            str(hsp),
            """\
gi|710661        18 FGTAKLKNAGKDLGGAVKGFKEAVKDEE 46
                  0 |||.||...|.|||...||||.|..|.| 28
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDE 61
""",
        )
        hit = hits[110]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|28199457|ref|NP_779771.1|")
        self.assertEqual(hit.target.name, "NP_779771")
        self.assertEqual(
            hit.target.description,
            "SEC-independent protein translocase [Xylella fastidiosa Temecula1] >gi|71900614|ref|ZP_00682740.1| Twin-arginine translocation protein TatA/E [Xylella fastidiosa Ann-1] >gi|71898114|ref|ZP_00680300.1| Twin-arginine translocation protein TatA/E [Xylella fastidiosa Ann-1] >gi|71732088|gb|EAO34144.1| Twin-arginine translocation protein TatA/E [Xylella fastidiosa Ann-1] >gi|71729608|gb|EAO31713.1| Twin-arginine translocation protein TatA/E [Xylella fastidiosa Ann-1] >gi|71274575|ref|ZP_00650863.1| Twin-arginine translocation protein TatA/E [Xylella fastidiosa Dixon] >gi|71164307|gb|EAO14021.1| Twin-arginine translocation protein TatA/E [Xylella fastidiosa Dixon] >gi|28057572|gb|AAO29420.1| SEC-independent protein translocase [Xylella fastidiosa Temecula1] >gi|32130179|sp|Q87B80|TATA_XYLFT Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=71)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 89.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 38.891)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0486813)
        self.assertEqual(hsp.annotations["identity"], 24)
        self.assertEqual(hsp.annotations["positive"], 40)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 61],
                          [14, 75]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 61))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...FTA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSLLHWLVVLVIVLLVFGTKRLANGAKDIGSAIKEFKKSLHEDDKPTDQLG...STA'}, length=71)",
        )
        self.assertEqual(hsp.target.id, "gi|28199457|ref|NP_779771.1|")
        self.assertEqual(hsp.target.name, "NP_779771")
        self.assertEqual(
            hsp.target.description,
            "SEC-independent protein translocase [Xylella fastidiosa Temecula1] >gi|71900614|ref|ZP_00682740.1| Twin-arginine translocation protein TatA/E [Xylella fastidiosa Ann-1] >gi|71898114|ref|ZP_00680300.1| Twin-arginine translocation protein TatA/E [Xylella fastidiosa Ann-1] >gi|71732088|gb|EAO34144.1| Twin-arginine translocation protein TatA/E [Xylella fastidiosa Ann-1] >gi|71729608|gb|EAO31713.1| Twin-arginine translocation protein TatA/E [Xylella fastidiosa Ann-1] >gi|71274575|ref|ZP_00650863.1| Twin-arginine translocation protein TatA/E [Xylella fastidiosa Dixon] >gi|71164307|gb|EAO14021.1| Twin-arginine translocation protein TatA/E [Xylella fastidiosa Dixon] >gi|28057572|gb|AAO29420.1| SEC-independent protein translocase [Xylella fastidiosa Temecula1] >gi|32130179|sp|Q87B80|TATA_XYLFT Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  S+   L++ VIV+L+FGTK+L +   D+G++IK FKK++ +D+   D+    +  TA",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|281994         0 MGSFSLLHWLVVLVIVLLVFGTKRLANGAKDIGSAIKEFKKSLHEDDKPTDQLGSTSQST
                  0 ||..|..............||||.|.....|.|..||.|||....|....|........|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|281994        60 A 61
                 60 | 61
gi|491764        74 A 75
""",
        )
        hit = hits[111]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|15837166|ref|NP_297854.1|")
        self.assertEqual(hit.target.name, "NP_297854")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein XF0564 [Xylella fastidiosa 9a5c] >gi|9105426|gb|AAF83374.1| conserved hypothetical protein [Xylella fastidiosa 9a5c] >gi|11360714|pir||B82791 conserved hypothetical protein XF0564 [imported] - Xylella fastidiosa (strain 9a5c) >gi|9979030|sp|Q9PFU3|TATA_XYLFA Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=71)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 89.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 38.891)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0486813)
        self.assertEqual(hsp.annotations["identity"], 24)
        self.assertEqual(hsp.annotations["positive"], 40)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 61],
                          [14, 75]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 61))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...FTA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSLLHWLVVLVIVLLVFGTKRLANGAKDIGSAIKEFKKSLREDDKPTDQLG...STA'}, length=71)",
        )
        self.assertEqual(hsp.target.id, "gi|15837166|ref|NP_297854.1|")
        self.assertEqual(hsp.target.name, "NP_297854")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein XF0564 [Xylella fastidiosa 9a5c] >gi|9105426|gb|AAF83374.1| conserved hypothetical protein [Xylella fastidiosa 9a5c] >gi|11360714|pir||B82791 conserved hypothetical protein XF0564 [imported] - Xylella fastidiosa (strain 9a5c) >gi|9979030|sp|Q9PFU3|TATA_XYLFA Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  S+   L++ VIV+L+FGTK+L +   D+G++IK FKK++ +D+   D+    +  TA",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|158371         0 MGSFSLLHWLVVLVIVLLVFGTKRLANGAKDIGSAIKEFKKSLREDDKPTDQLGSTSQST
                  0 ||..|..............||||.|.....|.|..||.|||....|....|........|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|158371        60 A 61
                 60 | 61
gi|491764        74 A 75
""",
        )
        hit = hits[112]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|15074462|emb|CAC46108.1|")
        self.assertEqual(hit.target.name, "CAC46108")
        self.assertEqual(
            hit.target.description,
            "HYPOTHETICAL TRANSMEMBRANE PROTEIN [Sinorhizobium meliloti] >gi|15965282|ref|NP_385635.1| HYPOTHETICAL TRANSMEMBRANE PROTEIN [Sinorhizobium meliloti 1021] >gi|24212503|sp|Q92Q25|TATA_RHIME Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=68)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 89.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 38.891)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0486813)
        self.assertEqual(hsp.annotations["identity"], 28)
        self.assertEqual(hsp.annotations["positive"], 35)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 47, 47, 63],
                          [14, 61, 65, 81]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 67))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...ADK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLAVVLLLFGRGKIPELMGDVAKGIKNFKKGMGDDEVASADKS...DHK'}, length=68)",
        )
        self.assertEqual(hsp.target.id, "gi|15074462|emb|CAC46108.1|")
        self.assertEqual(hsp.target.name, "CAC46108")
        self.assertEqual(
            hsp.target.description,
            "HYPOTHETICAL TRANSMEMBRANE PROTEIN [Sinorhizobium meliloti] >gi|15965282|ref|NP_385635.1| HYPOTHETICAL TRANSMEMBRANE PROTEIN [Sinorhizobium meliloti 1021] >gi|24212503|sp|Q92Q25|TATA_RHIME Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+  +V+LLFG  K+  +  D+   IK FKK M DDE      S D     KT+  K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|150744         0 MGSFSIWHWLIVLAVVLLLFGRGKIPELMGDVAKGIKNFKKGMGDDE----VASADKSVD
                  0 ||..|||............||..|......|....||.|||.|.|||----..|.|....
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|150744        56 GKTVDHK 63
                 60 .||...| 67
gi|491764        74 AKTIADK 81
""",
        )
        hit = hits[113]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|27462871|gb|AAO15625.1|")
        self.assertEqual(hit.target.name, "AAO15625")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase TatA [Rhizobium leguminosarum bv. viciae]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=63)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 87.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 38.1206)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0830377)
        self.assertEqual(hsp.annotations["identity"], 30)
        self.assertEqual(hsp.annotations["positive"], 40)
        self.assertEqual(hsp.annotations["gaps"], 9)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 45, 45, 62],
                          [14, 59, 68, 85]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 71))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...ADT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSMWHWLIVLVIVLLLFGRGKIPELMGDVAKGIKSFKKGMTDEDAPDTAKT...DET'}, length=63)",
        )
        self.assertEqual(hsp.target.id, "gi|27462871|gb|AAO15625.1|")
        self.assertEqual(hsp.target.name, "AAO15625")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase TatA [Rhizobium leguminosarum bv. viciae]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  S+W  LI+ VIV+LLFG  K+  +  D+   IK FKK M+D         +DA  TAKT+  K  +T",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|274628         0 MGSFSMWHWLIVLVIVLLLFGRGKIPELMGDVAKGIKSFKKGMTD---------EDAPDT
                  0 ||..|.|............||..|......|....||.|||.|.|---------.||..|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|274628        51 AKTVDHKADET 62
                 60 |||...|...| 71
gi|491764        74 AKTIADKQADT 85
""",
        )
        hit = hits[114]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|35211273|dbj|BAC88652.1|")
        self.assertEqual(hit.target.name, "BAC88652")
        self.assertEqual(
            hit.target.description,
            "gsl0711 [Gloeobacter violaceus PCC 7421] >gi|37520280|ref|NP_923657.1| hypothetical protein gsl0711 [Gloeobacter violaceus PCC 7421]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=72)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 87.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 38.1206)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0830377)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 24)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[20, 57],
                          [33, 70]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 37))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({20: 'FGPKKLPEMGSALGKAIRGFKSGVSDEPAPQQSASKE'}, length=72)",
        )
        self.assertEqual(hsp.target.id, "gi|35211273|dbj|BAC88652.1|")
        self.assertEqual(hsp.target.name, "BAC88652")
        self.assertEqual(
            hsp.target.description,
            "gsl0711 [Gloeobacter violaceus PCC 7421] >gi|37520280|ref|NP_923657.1| hypothetical protein gsl0711 [Gloeobacter violaceus PCC 7421]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG KKL  +GS LG +I+GFK  +SD+   Q   S++"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|352112        20 FGPKKLPEMGSALGKAIRGFKSGVSDEPAPQQSASKE 57
                  0 ||.|||...||.||..|.|||...||....|...|.. 37
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD 70
""",
        )
        hit = hits[115]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|34482347|emb|CAE09348.1|")
        self.assertEqual(hit.target.name, "CAE09348")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein [Wolinella succinogenes] >gi|34556633|ref|NP_906448.1| hypothetical protein WS0187 [Wolinella succinogenes DSM 1740]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=80)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 86.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 37.7354)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.108451)
        self.assertEqual(hsp.annotations["identity"], 18)
        self.assertEqual(hsp.annotations["positive"], 26)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 71],
                          [33, 85]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 52))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGAKKIPDLAKGLGSGIKNFKKAMKEDEESEVSVTKSEKIEEAPKNEKSAST'}, length=80)",
        )
        self.assertEqual(hsp.target.id, "gi|34482347|emb|CAE09348.1|")
        self.assertEqual(hsp.target.name, "CAE09348")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein [Wolinella succinogenes] >gi|34556633|ref|NP_906448.1| hypothetical protein WS0187 [Wolinella succinogenes DSM 1740]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG KK+  +   LG+ IK FKKAM +DE  +   ++          +K A T",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|344823        19 FGAKKIPDLAKGLGSGIKNFKKAMKEDEESEVSVTKSEKIEEAPKNEKSAST 71
                  0 ||.||.......||..||.|||||..||...................|.|.| 52
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADT 85
""",
        )
        hit = hits[116]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|32262257|gb|AAP77305.1|")
        self.assertEqual(hit.target.name, "AAP77305")
        self.assertEqual(
            hit.target.description,
            "component of Sec-independent protein secretion pathway TatA [Helicobacter hepaticus ATCC 51449] >gi|32266207|ref|NP_860239.1| component of Sec-independent protein secretion pathway TatA [Helicobacter hepaticus ATCC 51449]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=82)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 86.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 37.7354)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.108451)
        self.assertEqual(hsp.annotations["identity"], 22)
        self.assertEqual(hsp.annotations["positive"], 37)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 47, 47, 54, 54, 74, 75, 81],
                          [33, 61, 63, 70, 73, 93, 93, 99]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 67))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...RHD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGAKKIPELAKGLGSGIKNFKKAVKEDEEDNQSEENTKSQIKQSESKNENVSKT...KQD'}, length=82)",
        )
        self.assertEqual(hsp.target.id, "gi|32262257|gb|AAP77305.1|")
        self.assertEqual(hsp.target.name, "AAP77305")
        self.assertEqual(
            hsp.target.description,
            "component of Sec-independent protein secretion pathway TatA [Helicobacter hepaticus ATCC 51449] >gi|32266207|ref|NP_860239.1| component of Sec-independent protein secretion pathway TatA [Helicobacter hepaticus ATCC 51449]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG KK+  +   LG+ IK FKKA+ +DE  +D  S++     K+   +    N+  +KT  D+++ D",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|322622        19 FGAKKIPELAKGLGSGIKNFKKAVKEDE--EDNQSEE---NTKSQIKQSESKNENVSKTH
                  0 ||.||.......||..||.||||...||--.|..|..---..|.........|....||.
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|322622        74 TDSQKQD 81
                 60 -|....| 67
gi|491764        93 -DAKRHD 99
""",
        )
        hit = hits[117]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|76261408|ref|ZP_00769019.1|")
        self.assertEqual(hit.target.name, "ZP_00769019")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Chloroflexus aurantiacus J-10-fl] >gi|76163681|gb|EAO57850.1| Twin-arginine translocation protein TatA/E [Chloroflexus aurantiacus J-10-fl]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=62)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 85.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 37.3502)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.141641)
        self.assertEqual(hsp.annotations["identity"], 25)
        self.assertEqual(hsp.annotations["positive"], 39)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 1, 44, 45, 57],
                          [14, 57, 57, 69]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 56))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1: 'IGGLGWGELLIILIIVIAIFGAGKLAGLGGALGSSIREFRKAVKGDDEPRSDAKTE'}, length=62)",
        )
        self.assertEqual(hsp.target.id, "gi|76261408|ref|ZP_00769019.1|")
        self.assertEqual(hsp.target.name, "ZP_00769019")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Chloroflexus aurantiacus J-10-fl] >gi|76163681|gb|EAO57850.1| Twin-arginine translocation protein TatA/E [Chloroflexus aurantiacus J-10-fl]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+GG+   +LLII +IV+ +FG  KL  +G  LG+SI+ F+KA+  DDEP+ D  ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|762614         1 IGGLGWGELLIILIIVIAIFGAGKLAGLGGALGSSIREFRKAVKGDDEPRSDAKTE 57
                  0 .||................||..||...|..||.||..|.||.-.||||..|.... 56
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAM-SDDEPKQDKTSQ 69
""",
        )
        hit = hits[118]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|69933726|ref|ZP_00628928.1|")
        self.assertEqual(hit.target.name, "ZP_00628928")
        self.assertEqual(
            hit.target.description,
            "sec-independent translocation protein mttA/Hcf106 [Paracoccus denitrificans PD1222] >gi|69155362|gb|EAN68465.1| sec-independent translocation protein mttA/Hcf106 [Paracoccus denitrificans PD1222]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=159)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 85.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 37.3502)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.141641)
        self.assertEqual(hsp.annotations["identity"], 22)
        self.assertEqual(hsp.annotations["positive"], 34)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 87, 125, 125, 134, 135, 149],
                          [ 33,  71,  74,  83,  83,  97]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 65))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...AKR'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({87: 'FGRGKVSSLMGEVGKGITAFKKGVKDGAEEYDRAAEDAKKPIGQSPAEDATRAQ...AMR'}, length=159)",
        )
        self.assertEqual(hsp.target.id, "gi|69933726|ref|ZP_00628928.1|")
        self.assertEqual(hsp.target.name, "ZP_00628928")
        self.assertEqual(
            hsp.target.description,
            "sec-independent translocation protein mttA/Hcf106 [Paracoccus denitrificans PD1222] >gi|69155362|gb|EAN68465.1| sec-independent translocation protein mttA/Hcf106 [Paracoccus denitrificans PD1222]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG  K+ S+  ++G  I  FKK + D   + D+ ++DA    K I    A D  + QA+T +A R",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|699337        87 FGRGKVSSLMGEVGKGITAFKKGVKDGAEEYDRAAEDA---KKPIGQSPAEDATRAQAQT
                  0 ||..|..|.....|..|..|||...|.....|....||---.|.|....|-|....||.|
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQA-DTNQEQAKT

gi|699337       144 NEAMR 149
                 60 ..|.|  65
gi|491764        92 EDAKR  97
""",
        )
        hit = hits[119]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|15605662|ref|NP_213037.1|")
        self.assertEqual(hit.target.name, "NP_213037")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein aq_064b [Aquifex aeolicus VF5] >gi|2982827|gb|AAC06450.1| hypothetical protein [Aquifex aeolicus VF5] >gi|7444819|pir||B70306 conserved hypothetical protein aq_064b - Aquifex aeolicus >gi|9978994|sp|O66477|TAT2_AQUAE Sec-independent protein translocase tatA/E-like protein 2",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=59)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 84.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 36.965)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.184989)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 33)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 6, 52],
                          [20, 66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 46))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({20: 'WQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({6: 'WQLILILLVILVIFGASKLPEVGKGLGEGIRNFKKALSGEEEEKGK'}, length=59)",
        )
        self.assertEqual(hsp.target.id, "gi|15605662|ref|NP_213037.1|")
        self.assertEqual(hsp.target.name, "NP_213037")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein aq_064b [Aquifex aeolicus VF5] >gi|2982827|gb|AAC06450.1| hypothetical protein [Aquifex aeolicus VF5] >gi|7444819|pir||B70306 conserved hypothetical protein aq_064b - Aquifex aeolicus >gi|9978994|sp|O66477|TAT2_AQUAE Sec-independent protein translocase tatA/E-like protein 2",
        )
        self.assertEqual(
            hsp.annotations["midline"], "WQL++I ++++++FG  KL  +G  LG  I+ FKKA+S +E ++ K"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|156056         6 WQLILILLVILVIFGASKLPEVGKGLGEGIRNFKKALSGEEEEKGK 52
                  0 ||...........||..||...|..||..|..||||.|..|....| 46
gi|491764        20 WQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK 66
""",
        )
        hit = hits[120]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68538777|ref|ZP_00578553.1|")
        self.assertEqual(hit.target.name, "ZP_00578553")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Sphingopyxis alaskensis RB2256] >gi|68523891|gb|EAN47017.1| Twin-arginine translocation protein TatA/E [Sphingopyxis alaskensis RB2256]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=77)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 83.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 36.5798)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.241603)
        self.assertEqual(hsp.annotations["identity"], 25)
        self.assertEqual(hsp.annotations["positive"], 37)
        self.assertEqual(hsp.annotations["gaps"], 5)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 47, 52, 66],
                          [14, 61, 61, 75]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 66))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...FTA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLVVGILVLLLFGKGRFSDMMGDVAKGIKSFKKGMSEDDAPTPAPK...LSA'}, length=77)",
        )
        self.assertEqual(hsp.target.id, "gi|68538777|ref|ZP_00578553.1|")
        self.assertEqual(hsp.target.name, "ZP_00578553")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Sphingopyxis alaskensis RB2256] >gi|68523891|gb|EAN47017.1| Twin-arginine translocation protein TatA/E [Sphingopyxis alaskensis RB2256]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  L++ ++V+LLFG  +   +  D+   IK FKK MS+D+     PKQ    +  D +A",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|685387         0 MGSFSIWHWLVVGILVLLLFGKGRFSDMMGDVAKGIKSFKKGMSEDDAPTPAPKQIDAQR
                  0 ||..|||............||.........|....||.|||.||.|.-----|||.....
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE-----PKQDKTSQ

gi|685387        60 APDLSA 66
                 60 ..|..| 66
gi|491764        69 DADFTA 75
""",
        )
        hit = hits[121]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68136098|ref|ZP_00544086.1|")
        self.assertEqual(hit.target.name, "ZP_00544086")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Methanosarcina barkeri str. fusaro] >gi|72397188|gb|AAZ71461.1| sec-independent protein translocase, protein [Methanosarcina barkeri str. fusaro] >gi|73670026|ref|YP_306041.1| sec-independent protein translocase, protein [Methanosarcina barkeri str. fusaro]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=130)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 82.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 36.1946)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.315543)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 34)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 17,  84],
                          [ 33, 100]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 67))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...HDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({17: 'FGPKKLPELARSLGSAMGEFKKAQRASELELNQFDAYTRKAANTVASEEKEKGK...EAK'}, length=130)",
        )
        self.assertEqual(hsp.target.id, "gi|68136098|ref|ZP_00544086.1|")
        self.assertEqual(hsp.target.name, "ZP_00544086")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Methanosarcina barkeri str. fusaro] >gi|72397188|gb|AAZ71461.1| sec-independent protein translocase, protein [Methanosarcina barkeri str. fusaro] >gi|73670026|ref|YP_306041.1| sec-independent protein translocase, protein [Methanosarcina barkeri str. fusaro]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG KKL  +   LG+++  FKKA    E + ++        A T+A ++ +  +EQ +T  + +  K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|681360        17 FGPKKLPELARSLGSAMGEFKKAQRASELELNQFDAYTRKAANTVASEEKEKGKEQKETP
                  0 ||.|||......||.....||||....|.............|.|.|........||..|.
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|681360        77 SSSKEAK  84
                 60 ......|  67
gi|491764        93 DAKRHDK 100
""",
        )
        hit = hits[122]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|20259265|gb|AAM14368.1|")
        self.assertEqual(hit.target.name, "AAM14368")
        self.assertEqual(
            hit.target.description,
            "putative Tha4 protein [Arabidopsis thaliana] >gi|15810475|gb|AAL07125.1| putative Tha4 protein [Arabidopsis thaliana] >gi|11762160|gb|AAG40358.1| AT5g28750 [Arabidopsis thaliana] >gi|7682781|gb|AAF67362.1| Hypothetical protein T32B20.e [Arabidopsis thaliana] >gi|15241912|ref|NP_198227.1| thylakoid assembly protein, putative [Arabidopsis thaliana]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=147)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 81.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 35.8094)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.412112)
        self.assertEqual(hsp.annotations["identity"], 25)
        self.assertEqual(hsp.annotations["positive"], 46)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 64, 126, 126, 147],
                          [ 16,  78,  82, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 87))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({16: 'GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD...EQV'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({64: 'GLGVPELAVIAGVAALLFGPKKLPEIGKSIGKTVKSFQQAAKEFESELKTEPEE...ENV'}, length=147)",
        )
        self.assertEqual(hsp.target.id, "gi|20259265|gb|AAM14368.1|")
        self.assertEqual(hsp.target.name, "AAM14368")
        self.assertEqual(
            hsp.target.description,
            "putative Tha4 protein [Arabidopsis thaliana] >gi|15810475|gb|AAL07125.1| putative Tha4 protein [Arabidopsis thaliana] >gi|11762160|gb|AAG40358.1| AT5g28750 [Arabidopsis thaliana] >gi|7682781|gb|AAF67362.1| Hypothetical protein T32B20.e [Arabidopsis thaliana] >gi|15241912|ref|NP_198227.1| thylakoid assembly protein, putative [Arabidopsis thaliana]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "G+ + +L +IA +  LLFG KKL  IG  +G ++K F++A  + E +     +++   +  +    A +N+E+ K  +     KE V",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|202592        64 GLGVPELAVIAGVAALLFGPKKLPEIGKSIGKTVKSFQQAAKEFESELKTEPEESVAESS
                  0 |................||.|||..||...|...|.|..|....|...............
gi|491764        16 GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAK

gi|202592       124 QV----ATSNKEEEKKTEVSSSSKENV 147
                 60 ..----|..|.|..|........||.|  87
gi|491764        76 TIADKQADTNQEQAKTEDAKRHDKEQV 103
""",
        )
        hit = hits[123]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|75910646|ref|YP_324942.1|")
        self.assertEqual(hit.target.name, "YP_324942")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Anabaena variabilis ATCC 29413] >gi|75704371|gb|ABA24047.1| Twin-arginine translocation protein TatA/E [Anabaena variabilis ATCC 29413] >gi|46135166|ref|ZP_00162467.2| COG1826: Sec-independent protein secretion pathway components [Anabaena variabilis ATCC 29413]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=90)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 81.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 35.8094)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.412112)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 34)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[21, 83],
                          [33, 95]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 62))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...EDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({21: 'FGPKKLPEIGRSLGKAIRGFQEASNEFQSEFKREAEQLEQAVKTTAELEPKQIE...QDS'}, length=90)",
        )
        self.assertEqual(hsp.target.id, "gi|75910646|ref|YP_324942.1|")
        self.assertEqual(hsp.target.name, "YP_324942")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Anabaena variabilis ATCC 29413] >gi|75704371|gb|ABA24047.1| Twin-arginine translocation protein TatA/E [Anabaena variabilis ATCC 29413] >gi|46135166|ref|ZP_00162467.2| COG1826: Sec-independent protein secretion pathway components [Anabaena variabilis ATCC 29413]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG KKL  IG  LG +I+GF++A ++ + +  + ++  +   KT A+ +    +     +D+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|759106        21 FGPKKLPEIGRSLGKAIRGFQEASNEFQSEFKREAEQLEQAVKTTAELEPKQIESVKSEQ
                  0 ||.|||..||..||..|.||..|...................||.|..............
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|759106        81 DS 83
                 60 |. 62
gi|491764        93 DA 95
""",
        )
        hit = hits[124]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|39982657|gb|AAR34117.1|")
        self.assertEqual(hit.target.name, "AAR34117")
        self.assertEqual(
            hit.target.description,
            "twin-arginine translocation protein, TatA/E family [Geobacter sulfurreducens PCA] >gi|39995893|ref|NP_951844.1| twin-arginine translocation protein, TatA/E family [Geobacter sulfurreducens PCA]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=57)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 81.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 35.8094)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.412112)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 23)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[20, 57],
                          [34, 71]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 37))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({34: 'GTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({20: 'GPSKLPQLGQALGSSIKSFKKGMNEDEVKVINKTNEA'}, length=57)",
        )
        self.assertEqual(hsp.target.id, "gi|39982657|gb|AAR34117.1|")
        self.assertEqual(hsp.target.name, "AAR34117")
        self.assertEqual(
            hsp.target.description,
            "twin-arginine translocation protein, TatA/E family [Geobacter sulfurreducens PCA] >gi|39995893|ref|NP_951844.1| twin-arginine translocation protein, TatA/E family [Geobacter sulfurreducens PCA]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "G  KL  +G  LG+SIK FKK M++DE K    + +A"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|399826        20 GPSKLPQLGQALGSSIKSFKKGMNEDEVKVINKTNEA 57
                  0 |..||...|..||.|||.|||.|..||.|.......| 37
gi|491764        34 GTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDA 71
""",
        )
        hit = hits[125]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|33635687|emb|CAE22011.1|")
        self.assertEqual(hit.target.name, "CAE22011")
        self.assertEqual(
            hit.target.description,
            "mttA/Hcf106 family [Prochlorococcus marinus str. MIT 9313] >gi|33864103|ref|NP_895663.1| mttA/Hcf106 family [Prochlorococcus marinus str. MIT 9313]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=91)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 80.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 35.4242)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.538235)
        self.assertEqual(hsp.annotations["identity"], 27)
        self.assertEqual(hsp.annotations["positive"], 43)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 4, 61, 63, 86],
                          [16, 73, 73, 96]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 82))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({16: 'GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD...DAK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({4: 'GIGLPEMAVIGAIALLVFGPKRLPEFGRTLGKTLKGFQAASKEFEREIHKTMAE...EAK'}, length=91)",
        )
        self.assertEqual(hsp.target.id, "gi|33635687|emb|CAE22011.1|")
        self.assertEqual(hsp.target.name, "CAE22011")
        self.assertEqual(
            hsp.target.description,
            "mttA/Hcf106 family [Prochlorococcus marinus str. MIT 9313] >gi|33864103|ref|NP_895663.1| mttA/Hcf106 family [Prochlorococcus marinus str. MIT 9313]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "GI + ++ +I  I +L+FG K+L   G  LG ++KGF+ A  + E +  KT  + +    A T    Q DTN      ++AK",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|336356         4 GIGLPEMAVIGAIALLVFGPKRLPEFGRTLGKTLKGFQAASKEFEREIHKTMAEPESIEQ
                  0 ||...............||.|.|...|..||...|||..|....|....||......--.
gi|491764        16 GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADF--T

gi|336356        64 AATEESMQQDTNAIGETPQEAK 86
                 60 |.|....|.|||........|| 82
gi|491764        74 AKTIADKQADTNQEQAKTEDAK 96
""",
        )
        hit = hits[126]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|76791934|ref|ZP_00774438.1|")
        self.assertEqual(hit.target.name, "ZP_00774438")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Pseudoalteromonas atlantica T6c] >gi|76592906|gb|EAO69092.1| Twin-arginine translocation protein TatA/E [Pseudoalteromonas atlantica T6c]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=68)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 80.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 35.4242)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.538235)
        self.assertEqual(hsp.annotations["identity"], 22)
        self.assertEqual(hsp.annotations["positive"], 44)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 2, 50, 50, 67],
                          [17, 65, 68, 85]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 68))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({17: 'ISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDA...ADT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({2: 'LSVWQLVLVALLFILLFGRGRIPALMGDLAQGIKSFKRGISEDESQDEQGVEKT...SPT'}, length=68)",
        )
        self.assertEqual(hsp.target.id, "gi|76791934|ref|ZP_00774438.1|")
        self.assertEqual(hsp.target.name, "ZP_00774438")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Pseudoalteromonas atlantica T6c] >gi|76592906|gb|EAO69092.1| Twin-arginine translocation protein TatA/E [Pseudoalteromonas atlantica T6c]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+S+WQL+++A++ +LLFG  ++ ++  DL   IK FK+ +S+DE + +   Q  + T+    +K++ T",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|767919         2 LSVWQLVLVALLFILLFGRGRIPALMGDLAQGIKSFKRGISEDESQDE---QGVEKTSGE
                  0 .|.||...........||.........||...||.||...|.||....---|....|...
gi|491764        17 ISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKT

gi|767919        59 TLEKKSPT 67
                 60 ...|...| 68
gi|491764        77 IADKQADT 85
""",
        )
        hit = hits[127]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|23129516|ref|ZP_00111343.1|")
        self.assertEqual(hit.target.name, "ZP_00111343")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Nostoc punctiforme PCC 73102]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=91)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 80.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 35.4242)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.538235)
        self.assertEqual(hsp.annotations["identity"], 21)
        self.assertEqual(hsp.annotations["positive"], 40)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 4, 68],
                          [16, 80]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 64))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({16: 'GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD...IAD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({4: 'GIGLPEMAVIMVVALLIFGPKKLPEIGRSVGKTIRSFQEASKEFQSEFQKEAEQ...TAE'}, length=91)",
        )
        self.assertEqual(hsp.target.id, "gi|23129516|ref|ZP_00111343.1|")
        self.assertEqual(hsp.target.name, "ZP_00111343")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Nostoc punctiforme PCC 73102]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "GI + ++ +I V+ +L+FG KKL  IG  +G +I+ F++A  + + +  K ++  + T KT A+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|231295         4 GIGLPEMAVIMVVALLIFGPKKLPEIGRSVGKTIRSFQEASKEFQSEFQKEAEQLEETVK
                  0 ||...............||.|||..||...|..|..|..|.........|.......|.|
gi|491764        16 GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAK

gi|231295        64 TTAE 68
                 60 |.|. 64
gi|491764        76 TIAD 80
""",
        )
        hit = hits[128]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|48764199|ref|ZP_00268751.1|")
        self.assertEqual(hit.target.name, "ZP_00268751")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Rhodospirillum rubrum]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=96)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 79.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 35.039)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.702957)
        self.assertEqual(hsp.annotations["identity"], 22)
        self.assertEqual(hsp.annotations["positive"], 31)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 47],
                          [14, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 47))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGFSSIWHWIIVLVVVLLLFGAGKIPRLMGDVAKGVKAFKKGMADDE'}, length=96)",
        )
        self.assertEqual(hsp.target.id, "gi|48764199|ref|ZP_00268751.1|")
        self.assertEqual(hsp.target.name, "ZP_00268751")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Rhodospirillum rubrum]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  +I+ V+V+LLFG  K+  +  D+   +K FKK M+DDE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|487641         0 MGFSSIWHWIIVLVVVLLLFGAGKIPRLMGDVAKGVKAFKKGMADDE 47
                  0 ||..|||............||..|......|.....|.|||.|.||| 47
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE 61
""",
        )
        hit = hits[129]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|15677995|ref|NP_273645.1|")
        self.assertEqual(hit.target.name, "NP_273645")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein NMB0601 [Neisseria meningitidis MC58] >gi|7379525|emb|CAB84088.1| putative sec-independent protein translocase component [Neisseria meningitidis Z2491] >gi|66731901|gb|AAY52136.1| conserved hypothetical protein [Neisseria meningitidis MC58] >gi|15793779|ref|NP_283601.1| sec-independent protein translocase component [Neisseria meningitidis Z2491] >gi|59800638|ref|YP_207350.1| TatA [Neisseria gonorrhoeae FA 1090] >gi|59717533|gb|AAW88938.1| sec-independent protein translocase [Neisseria gonorrhoeae FA 1090] >gi|11354072|pir||E81925 probable sec-independent protein translocase component NMA0805 [imported] - Neisseria meningitidis (strain Z2491 serogroup A) >gi|54039709|sp|P66892|TATA_NEIMB Sec-independent protein translocase protein tatA/E homolog >gi|54042238|sp|P66891|TATA_NEIMA Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=67)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 79.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 35.039)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.702957)
        self.assertEqual(hsp.annotations["identity"], 21)
        self.assertEqual(hsp.annotations["positive"], 36)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 56],
                          [14, 70]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 56))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSLTHWIIVLIIVVLIFGTKKLRNVGKDLGGAVHDFKQGLNEGTDGKEAQKDD'}, length=67)",
        )
        self.assertEqual(hsp.target.id, "gi|15677995|ref|NP_273645.1|")
        self.assertEqual(hsp.target.name, "NP_273645")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein NMB0601 [Neisseria meningitidis MC58] >gi|7379525|emb|CAB84088.1| putative sec-independent protein translocase component [Neisseria meningitidis Z2491] >gi|66731901|gb|AAY52136.1| conserved hypothetical protein [Neisseria meningitidis MC58] >gi|15793779|ref|NP_283601.1| sec-independent protein translocase component [Neisseria meningitidis Z2491] >gi|59800638|ref|YP_207350.1| TatA [Neisseria gonorrhoeae FA 1090] >gi|59717533|gb|AAW88938.1| sec-independent protein translocase [Neisseria gonorrhoeae FA 1090] >gi|11354072|pir||E81925 probable sec-independent protein translocase component NMA0805 [imported] - Neisseria meningitidis (strain Z2491 serogroup A) >gi|54039709|sp|P66892|TATA_NEIMB Sec-independent protein translocase protein tatA/E homolog >gi|54042238|sp|P66891|TATA_NEIMA Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  S+   +I+ +IVVL+FGTKKL ++G DLG ++  FK+ +++    ++    D",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|156779         0 MGSFSLTHWIIVLIIVVLIFGTKKLRNVGKDLGGAVHDFKQGLNEGTDGKEAQKDD 56
                  0 ||..|..............||||||...|.|||.....||...............| 56
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD 70
""",
        )
        hit = hits[130]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|50917153|ref|XP_468973.1|")
        self.assertEqual(hit.target.name, "XP_468973")
        self.assertEqual(
            hit.target.description,
            "putative sec-independent protein transporter [Oryza sativa (japonica cultivar-group)] >gi|41469490|gb|AAS07275.1| putative sec-independent protein transporter [Oryza sativa (japonica cultivar-group)]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=170)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 79.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 35.039)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.702957)
        self.assertEqual(hsp.annotations["identity"], 20)
        self.assertEqual(hsp.annotations["positive"], 36)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 82, 139],
                          [ 13,  70]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 57))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({13: 'CMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({82: 'CLFGLGVPELVVIAGVAALVFGPKQLPEIGRSIGKTVKSFQQAAKEFETELKKESDD'}, length=170)",
        )
        self.assertEqual(hsp.target.id, "gi|50917153|ref|XP_468973.1|")
        self.assertEqual(hsp.target.name, "XP_468973")
        self.assertEqual(
            hsp.target.description,
            "putative sec-independent protein transporter [Oryza sativa (japonica cultivar-group)] >gi|41469490|gb|AAS07275.1| putative sec-independent protein transporter [Oryza sativa (japonica cultivar-group)]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "C+ G+ + +L++IA +  L+FG K+L  IG  +G ++K F++A  + E +  K S D",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|509171        82 CLFGLGVPELVVIAGVAALVFGPKQLPEIGRSIGKTVKSFQQAAKEFETELKKESDD 139
                  0 |..|................||.|.|..||...|...|.|..|....|....|.|.|  57
gi|491764        13 CMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD  70
""",
        )
        hit = hits[131]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|16329622|ref|NP_440350.1|")
        self.assertEqual(hit.target.name, "NP_440350")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein slr1046 [Synechocystis sp. PCC 6803] >gi|1652105|dbj|BAA17030.1| slr1046 [Synechocystis sp. PCC 6803] >gi|7470329|pir||S74990 hypothetical protein slr1046 - Synechocystis sp. (strain PCC 6803)",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=126)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 79.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 35.039)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.702957)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 34)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 62, 123],
                          [ 33,  94]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 61))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...TED'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({62: 'FGPKKLPEVGRSLGKALRGFQEASKEFETELKREAQNLEKSVQIKAELEESKTP...SSE'}, length=126)",
        )
        self.assertEqual(hsp.target.id, "gi|16329622|ref|NP_440350.1|")
        self.assertEqual(hsp.target.name, "NP_440350")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein slr1046 [Synechocystis sp. PCC 6803] >gi|1652105|dbj|BAA17030.1| slr1046 [Synechocystis sp. PCC 6803] >gi|7470329|pir||S74990 hypothetical protein slr1046 - Synechocystis sp. (strain PCC 6803)",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG KKL  +G  LG +++GF++A  + E +  + +Q+ + + +  A+ +     E + + +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|163296        62 FGPKKLPEVGRSLGKALRGFQEASKEFETELKREAQNLEKSVQIKAELEESKTPESSSSS
                  0 ||.|||...|..||....||..|....|.......|.........|........|.....
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|163296       122 E 123
                 60 .  61
gi|491764        93 D  94
""",
        )
        hit = hits[132]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71083667|ref|YP_266387.1|")
        self.assertEqual(hit.target.name, "YP_266387")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Candidatus Pelagibacter ubique HTCC1062] >gi|71062780|gb|AAZ21783.1| Twin-arginine translocation protein TatA/E [Candidatus Pelagibacter ubique HTCC1062]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=66)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 79.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 35.039)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.702957)
        self.assertEqual(hsp.annotations["identity"], 24)
        self.assertEqual(hsp.annotations["positive"], 35)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 2, 43, 46, 58],
                          [17, 58, 58, 70]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 56))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({17: 'ISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({2: 'IGIWQIAIVVILVVLLFGRGKISSLMGDVAKGIKSFKKGMATDITDEPEPKNVSEN'}, length=66)",
        )
        self.assertEqual(hsp.target.id, "gi|71083667|ref|YP_266387.1|")
        self.assertEqual(hsp.target.name, "YP_266387")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Candidatus Pelagibacter ubique HTCC1062] >gi|71062780|gb|AAZ21783.1| Twin-arginine translocation protein TatA/E [Candidatus Pelagibacter ubique HTCC1062]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "I IWQ+ I+ ++VVLLFG  K+ S+  D+   IK FKK M+    DEP+    S++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|710836         2 IGIWQIAIVVILVVLLFGRGKISSLMGDVAKGIKSFKKGMATDITDEPEPKNVSEN 58
                  0 |.|||...........||..|..|...|....||.|||.|.---.|||.....|.. 56
gi|491764        17 ISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMS---DDEPKQDKTSQD 70
""",
        )
        hit = hits[133]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|17130190|dbj|BAB72802.1|")
        self.assertEqual(hit.target.name, "BAB72802")
        self.assertEqual(
            hit.target.description,
            "asl0845 [Nostoc sp. PCC 7120] >gi|25530529|pir||AC1912 hypothetical protein asl0845 [imported] - Nostoc sp. (strain PCC 7120) >gi|17228340|ref|NP_484888.1| hypothetical protein asl0845 [Nostoc sp. PCC 7120]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=90)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 79.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 35.039)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.702957)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 34)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[21, 83],
                          [33, 95]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 62))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...EDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({21: 'FGPKKLPEIGRSMGKAIRGFQEASNEFQSEFKREAEQLEQAVKTTAELEPKQIE...QDS'}, length=90)",
        )
        self.assertEqual(hsp.target.id, "gi|17130190|dbj|BAB72802.1|")
        self.assertEqual(hsp.target.name, "BAB72802")
        self.assertEqual(
            hsp.target.description,
            "asl0845 [Nostoc sp. PCC 7120] >gi|25530529|pir||AC1912 hypothetical protein asl0845 [imported] - Nostoc sp. (strain PCC 7120) >gi|17228340|ref|NP_484888.1| hypothetical protein asl0845 [Nostoc sp. PCC 7120]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG KKL  IG  +G +I+GF++A ++ + +  + ++  +   KT A+ +    +     +D+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|171301        21 FGPKKLPEIGRSMGKAIRGFQEASNEFQSEFKREAEQLEQAVKTTAELEPKQIESVKSEQ
                  0 ||.|||..||...|..|.||..|...................||.|..............
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|171301        81 DS 83
                 60 |. 62
gi|491764        93 DA 95
""",
        )
        hit = hits[134]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68246031|gb|EAN28138.1|")
        self.assertEqual(hit.target.name, "EAN28138")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Magnetococcus sp. MC-1] >gi|69259242|ref|ZP_00607441.1| Twin-arginine translocation protein TatA/E [Magnetococcus sp. MC-1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=69)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 78.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 34.6538)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.91809)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 24)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 44, 46, 59],
                          [33, 58, 58, 71]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 40))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGAGKLPKVMGDMGRGVKSFKKAMNAEDDAPAEPEVSKPA'}, length=69)",
        )
        self.assertEqual(hsp.target.id, "gi|68246031|gb|EAN28138.1|")
        self.assertEqual(hsp.target.name, "EAN28138")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Magnetococcus sp. MC-1] >gi|69259242|ref|ZP_00607441.1| Twin-arginine translocation protein TatA/E [Magnetococcus sp. MC-1]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG  KL  +  D+G  +K FKKAM+  DD P + + S+ A"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|682460        19 FGAGKLPKVMGDMGRGVKSFKKAMNAEDDAPAEPEVSKPA 59
                  0 ||..||.....|.|...|.|||||.--||.|.....|..| 40
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMS--DDEPKQDKTSQDA 71
""",
        )
        hit = hits[135]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|15604583|ref|NP_221101.1|")
        self.assertEqual(hit.target.name, "NP_221101")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein RP749 [Rickettsia prowazekii str. Madrid E] >gi|3861278|emb|CAA15177.1| unknown [Rickettsia prowazekii] >gi|7467844|pir||A71635 hypothetical protein RP749 - Rickettsia prowazekii >gi|9979048|sp|Q9ZCJ1|TATA_RICPR Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=54)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 78.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 34.6538)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.91809)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 20)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[18, 53],
                          [33, 68]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 35))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({18: 'FGAGKLPQVMSDLAKGLKAFKEGMKDDGNDNDKTN'}, length=54)",
        )
        self.assertEqual(hsp.target.id, "gi|15604583|ref|NP_221101.1|")
        self.assertEqual(hsp.target.name, "NP_221101")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein RP749 [Rickettsia prowazekii str. Madrid E] >gi|3861278|emb|CAA15177.1| unknown [Rickettsia prowazekii] >gi|7467844|pir||A71635 hypothetical protein RP749 - Rickettsia prowazekii >gi|9979048|sp|Q9ZCJ1|TATA_RICPR Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG  KL  + SDL   +K FK+ M DD    DKT+"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|156045        18 FGAGKLPQVMSDLAKGLKAFKEGMKDDGNDNDKTN 53
                  0 ||..||....|||....|.||..|.||....|||. 35
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS 68
""",
        )
        hit = hits[136]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|77685166|ref|ZP_00800574.1|")
        self.assertEqual(hit.target.name, "ZP_00800574")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Alkaliphilus metalliredigenes QYMF] >gi|77639020|gb|EAO81400.1| Twin-arginine translocation protein TatA/E [Alkaliphilus metalliredigenes QYMF]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=69)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 78.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 34.6538)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.91809)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 24)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[20, 41, 44, 62],
                          [33, 54, 54, 72]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 42))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDAD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({20: 'FGPSKLPEIGKSLGKSIKEFKKFSKEMKDDLSLEERETKDKD'}, length=69)",
        )
        self.assertEqual(hsp.target.id, "gi|77685166|ref|ZP_00800574.1|")
        self.assertEqual(hsp.target.name, "ZP_00800574")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Alkaliphilus metalliredigenes QYMF] >gi|77639020|gb|EAO81400.1| Twin-arginine translocation protein TatA/E [Alkaliphilus metalliredigenes QYMF]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG  KL  IG  LG SIK FK   K M DD   +++ ++D D"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|776851        20 FGPSKLPEIGKSLGKSIKEFKKFSKEMKDDLSLEERETKDKD 62
                  0 ||..||..||..||.|||.||---|.|.||.........|.| 42
gi|491764        33 FGTKKLGSIGSDLGASIKGFK---KAMSDDEPKQDKTSQDAD 72
""",
        )
        hit = hits[137]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|39985226|gb|AAR36581.1|")
        self.assertEqual(hit.target.name, "AAR36581")
        self.assertEqual(
            hit.target.description,
            "twin-arginine translocation protein, TatA/E family [Geobacter sulfurreducens PCA] >gi|39998280|ref|NP_954231.1| twin-arginine translocation protein, TatA/E family [Geobacter sulfurreducens PCA]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=78)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 77.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 34.2686)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.19906)
        self.assertEqual(hsp.annotations["identity"], 26)
        self.assertEqual(hsp.annotations["positive"], 37)
        self.assertEqual(hsp.annotations["gaps"], 11)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[12, 57, 68, 77],
                          [11, 56, 56, 65]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 65))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({11: 'GTCMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({12: 'GYCMFGFGMPELIVILIIVLVVFGAGRLPEIGGALGKSIRNFKKASEGKEEIEI...KKD'}, length=78)",
        )
        self.assertEqual(hsp.target.id, "gi|39985226|gb|AAR36581.1|")
        self.assertEqual(hsp.target.name, "AAR36581")
        self.assertEqual(
            hsp.target.description,
            "twin-arginine translocation protein, TatA/E family [Geobacter sulfurreducens PCA] >gi|39998280|ref|NP_954231.1| twin-arginine translocation protein, TatA/E family [Geobacter sulfurreducens PCA]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "G CM G  + +L++I +IV+++FG  +L  IG  LG SI+ FKKA              DEPK+D",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|399852        12 GYCMFGFGMPELIVILIIVLVVFGAGRLPEIGGALGKSIRNFKKASEGKEEIEIKPQKKD
                  0 |.||.|................||...|..||..||.||..||||-----------...|
gi|491764        11 GTCMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKA-----------MSDD

gi|399852        72 EPKKD 77
                 60 |||.| 65
gi|491764        60 EPKQD 65
""",
        )
        hit = hits[138]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|1825636|gb|AAB42258.1|")
        self.assertEqual(hit.target.name, "AAB42258")
        self.assertEqual(
            hit.target.description,
            "Hypothetical protein ZK354.3 [Caenorhabditis elegans] >gi|17544554|ref|NP_500777.1| ZK354.3 [Caenorhabditis elegans]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=312)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 26)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[260, 309],
                          [ 53, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 49))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({53: 'KKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({260: 'KKEEKKEEKKDDKKEDDKEKSATKSEDKKSDEKKTEEKKSDEKKNEKSE'}, length=312)",
        )
        self.assertEqual(hsp.target.id, "gi|1825636|gb|AAB42258.1|")
        self.assertEqual(hsp.target.name, "AAB42258")
        self.assertEqual(
            hsp.target.description,
            "Hypothetical protein ZK354.3 [Caenorhabditis elegans] >gi|17544554|ref|NP_500777.1| ZK354.3 [Caenorhabditis elegans]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "KK    +E K DK   D + +A    DK++D  + + K  D K+++K +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|182563       260 KKEEKKEEKKDDKKEDDKEKSATKSEDKKSDEKKTEEKKSDEKKNEKSE 309
                  0 ||.....|.|.||...|....|....||..|......|..|.|...|..  49
gi|491764        53 KKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[139]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|65321915|ref|ZP_00394874.1|")
        self.assertEqual(hit.target.name, "ZP_00394874")
        self.assertEqual(
            hit.target.description,
            "COG5386: Cell surface protein [Bacillus anthracis str. A2012] >gi|47530087|ref|YP_021436.1| lpxtg-motif cell wall anchor domain protein, putative [Bacillus anthracis str. 'Ames Ancestor'] >gi|49187439|ref|YP_030691.1| LPXTG-motif cell wall anchor domain protein, putative [Bacillus anthracis str. Sterne] >gi|47505235|gb|AAT33911.1| LPXTG-motif cell wall anchor domain protein, putative [Bacillus anthracis str. 'Ames Ancestor'] >gi|49181366|gb|AAT56742.1| LPXTG-motif cell wall anchor domain protein, putative [Bacillus anthracis str. Sterne] >gi|30259275|gb|AAP28480.1| LPXTG-motif cell wall anchor domain protein, putative [Bacillus anthracis str. Ames] >gi|30264617|ref|NP_846994.1| LPXTG-motif cell wall anchor domain protein, putative [Bacillus anthracis str. Ames]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=237)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 18)
        self.assertEqual(hsp.annotations["positive"], 37)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[150, 157, 159, 215],
                          [ 40,  47,  47, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 65))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({40: 'SIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTED...EQV'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({150: 'AVGGDNGVAATTKNNDQAKTDTQVKEEKTKVESKETAKEVNKETKNENGKAEKT...ARI'}, length=237)",
        )
        self.assertEqual(hsp.target.id, "gi|65321915|ref|ZP_00394874.1|")
        self.assertEqual(hsp.target.name, "ZP_00394874")
        self.assertEqual(
            hsp.target.description,
            "COG5386: Cell surface protein [Bacillus anthracis str. A2012] >gi|47530087|ref|YP_021436.1| lpxtg-motif cell wall anchor domain protein, putative [Bacillus anthracis str. 'Ames Ancestor'] >gi|49187439|ref|YP_030691.1| LPXTG-motif cell wall anchor domain protein, putative [Bacillus anthracis str. Sterne] >gi|47505235|gb|AAT33911.1| LPXTG-motif cell wall anchor domain protein, putative [Bacillus anthracis str. 'Ames Ancestor'] >gi|49181366|gb|AAT56742.1| LPXTG-motif cell wall anchor domain protein, putative [Bacillus anthracis str. Sterne] >gi|30259275|gb|AAP28480.1| LPXTG-motif cell wall anchor domain protein, putative [Bacillus anthracis str. Ames] >gi|30264617|ref|NP_846994.1| LPXTG-motif cell wall anchor domain protein, putative [Bacillus anthracis str. Ames]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++G D G  A+ K   +A +D + K++KT  ++  TAK +  +  + N +  KT++ K  D+ ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|653219       150 AVGGDNGVAATTKNNDQAKTDTQVKEEKTKVESKETAKEVNKETKNENGKAEKTDNPKTG
                  0 ..|.|.|--|..|....|..|...|..||......|||.........|....||...|..
gi|491764        40 SIGSDLG--ASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRH

gi|653219       210 DEARI 215
                 60 |....  65
gi|491764        98 DKEQV 103
""",
        )
        hit = hits[140]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|30022625|ref|NP_834256.1|")
        self.assertEqual(hit.target.name, "NP_834256")
        self.assertEqual(
            hit.target.description,
            "Cell surface protein [Bacillus cereus ATCC 14579] >gi|29898183|gb|AAP11457.1| Cell surface protein [Bacillus cereus ATCC 14579]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=237)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 18)
        self.assertEqual(hsp.annotations["positive"], 37)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[150, 157, 159, 215],
                          [ 40,  47,  47, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 65))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({40: 'SIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTED...EQV'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({150: 'AVGGDNGVAATTKNNDQAKTDTQVKEEKTKVESKETAKEVNKETKNENGKAEKT...ARI'}, length=237)",
        )
        self.assertEqual(hsp.target.id, "gi|30022625|ref|NP_834256.1|")
        self.assertEqual(hsp.target.name, "NP_834256")
        self.assertEqual(
            hsp.target.description,
            "Cell surface protein [Bacillus cereus ATCC 14579] >gi|29898183|gb|AAP11457.1| Cell surface protein [Bacillus cereus ATCC 14579]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++G D G  A+ K   +A +D + K++KT  ++  TAK +  +  + N +  KT++ K  D+ ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|300226       150 AVGGDNGVAATTKNNDQAKTDTQVKEEKTKVESKETAKEVNKETKNENGKAEKTDNPKTG
                  0 ..|.|.|--|..|....|..|...|..||......|||.........|....||...|..
gi|491764        40 SIGSDLG--ASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRH

gi|300226       210 DEARI 215
                 60 |....  65
gi|491764        98 DKEQV 103
""",
        )
        hit = hits[141]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|55623442|ref|XP_517520.1|")
        self.assertEqual(hit.target.name, "XP_517520")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to Acidic leucine-rich nuclear phosphoprotein 32 family member C (Tumorigenic protein pp32r1) [Pan troglodytes]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=234)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 14)
        self.assertEqual(hsp.annotations["positive"], 31)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[153, 178, 178, 205],
                          [ 47,  72,  74, 101]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 54))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({47: 'ASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({153: 'SDIKGYVEGLDDEEEGEDEEEYDEDAQVVEDEEGEDEEEEGEEEDVSGGEEE'}, length=234)",
        )
        self.assertEqual(hsp.target.id, "gi|55623442|ref|XP_517520.1|")
        self.assertEqual(hsp.target.name, "XP_517520")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to Acidic leucine-rich nuclear phosphoprotein 32 family member C (Tumorigenic protein pp32r1) [Pan troglodytes]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+ IKG+ + + D+E  +D+   D D  A+ + D++ +  +E+ + ED    ++E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|556234       153 SDIKGYVEGLDDEEEGEDEEEYDED--AQVVEDEEGEDEEEEGEEEDVSGGEEE 205
                  0 ..|||......|.|...|....|.|--|....|.......|....||......|  54
gi|491764        47 ASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKE 101
""",
        )
        hit = hits[142]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|75762866|ref|ZP_00742681.1|")
        self.assertEqual(hit.target.name, "ZP_00742681")
        self.assertEqual(
            hit.target.description,
            "Cell surface protein [Bacillus thuringiensis serovar israelensis ATCC 35646] >gi|74489647|gb|EAO53048.1| Cell surface protein [Bacillus thuringiensis serovar israelensis ATCC 35646]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=237)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 18)
        self.assertEqual(hsp.annotations["positive"], 37)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[150, 157, 159, 215],
                          [ 40,  47,  47, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 65))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({40: 'SIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTED...EQV'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({150: 'AVGGDNGVAATTKNNDQAKTDTQVKEEKTKVESKETAKEVNKETKNENGKAEKT...ARI'}, length=237)",
        )
        self.assertEqual(hsp.target.id, "gi|75762866|ref|ZP_00742681.1|")
        self.assertEqual(hsp.target.name, "ZP_00742681")
        self.assertEqual(
            hsp.target.description,
            "Cell surface protein [Bacillus thuringiensis serovar israelensis ATCC 35646] >gi|74489647|gb|EAO53048.1| Cell surface protein [Bacillus thuringiensis serovar israelensis ATCC 35646]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++G D G  A+ K   +A +D + K++KT  ++  TAK +  +  + N +  KT++ K  D+ ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|757628       150 AVGGDNGVAATTKNNDQAKTDTQVKEEKTKVESKETAKEVNKETKNENGKAEKTDNPKTG
                  0 ..|.|.|--|..|....|..|...|..||......|||.........|....||...|..
gi|491764        40 SIGSDLG--ASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRH

gi|757628       210 DEARI 215
                 60 |....  65
gi|491764        98 DKEQV 103
""",
        )
        hit = hits[143]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|22945598|gb|AAN10511.1|")
        self.assertEqual(hit.target.name, "AAN10511")
        self.assertEqual(
            hit.target.description,
            "CG18497-PC, isoform C [Drosophila melanogaster] >gi|24580583|ref|NP_722616.1| CG18497-PC, isoform C [Drosophila melanogaster] >gi|6715140|gb|AAF26299.1| split ends [Drosophila melanogaster]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=5476)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[1818, 1870],
                          [  50,  102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 52))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({50: 'KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1818: 'KSDKNASSSDKRKNSSTSQSSKSATPRIEDDSSEADDTADKAEKNQRHEKEK'}, length=5476)",
        )
        self.assertEqual(hsp.target.id, "gi|22945598|gb|AAN10511.1|")
        self.assertEqual(hsp.target.name, "AAN10511")
        self.assertEqual(
            hsp.target.description,
            "CG18497-PC, isoform C [Drosophila melanogaster] >gi|24580583|ref|NP_722616.1| CG18497-PC, isoform C [Drosophila melanogaster] >gi|6715140|gb|AAF26299.1| split ends [Drosophila melanogaster]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "K  K A S D+ K   TSQ +      I D  ++ +    K E  +RH+KE+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|229455      1818 KSDKNASSSDKRKNSSTSQSSKSATPRIEDDSSEADDTADKAEKNQRHEKEK 1870
                  0 |..|.|.|.|..|...|||........|.|..........|.|...||.||.   52
gi|491764        50 KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ  102
""",
        )
        hit = hits[144]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|10727420|gb|AAF51534.2|")
        self.assertEqual(hit.target.name, "AAF51534")
        self.assertEqual(
            hit.target.description,
            "CG18497-PB, isoform B [Drosophila melanogaster] >gi|24580581|ref|NP_524718.2| CG18497-PB, isoform B [Drosophila melanogaster]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=5533)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[1875, 1927],
                          [  50,  102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 52))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({50: 'KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1875: 'KSDKNASSSDKRKNSSTSQSSKSATPRIEDDSSEADDTADKAEKNQRHEKEK'}, length=5533)",
        )
        self.assertEqual(hsp.target.id, "gi|10727420|gb|AAF51534.2|")
        self.assertEqual(hsp.target.name, "AAF51534")
        self.assertEqual(
            hsp.target.description,
            "CG18497-PB, isoform B [Drosophila melanogaster] >gi|24580581|ref|NP_524718.2| CG18497-PB, isoform B [Drosophila melanogaster]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "K  K A S D+ K   TSQ +      I D  ++ +    K E  +RH+KE+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|107274      1875 KSDKNASSSDKRKNSSTSQSSKSATPRIEDDSSEADDTADKAEKNQRHEKEK 1927
                  0 |..|.|.|.|..|...|||........|.|..........|.|...||.||.   52
gi|491764        50 KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ  102
""",
        )
        hit = hits[145]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|10727421|gb|AAF51535.2|")
        self.assertEqual(hit.target.name, "AAF51535")
        self.assertEqual(
            hit.target.description,
            "CG18497-PA, isoform A [Drosophila melanogaster] >gi|24580579|ref|NP_722615.1| CG18497-PA, isoform A [Drosophila melanogaster] >gi|46397733|sp|Q8SX83|SPEN_DROME Split ends protein",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=5560)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[1875, 1927],
                          [  50,  102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 52))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({50: 'KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1875: 'KSDKNASSSDKRKNSSTSQSSKSATPRIEDDSSEADDTADKAEKNQRHEKEK'}, length=5560)",
        )
        self.assertEqual(hsp.target.id, "gi|10727421|gb|AAF51535.2|")
        self.assertEqual(hsp.target.name, "AAF51535")
        self.assertEqual(
            hsp.target.description,
            "CG18497-PA, isoform A [Drosophila melanogaster] >gi|24580579|ref|NP_722615.1| CG18497-PA, isoform A [Drosophila melanogaster] >gi|46397733|sp|Q8SX83|SPEN_DROME Split ends protein",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "K  K A S D+ K   TSQ +      I D  ++ +    K E  +RH+KE+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|107274      1875 KSDKNASSSDKRKNSSTSQSSKSATPRIEDDSSEADDTADKAEKNQRHEKEK 1927
                  0 |..|.|.|.|..|...|||........|.|..........|.|...||.||.   52
gi|491764        50 KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ  102
""",
        )
        hit = hits[146]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71481981|ref|ZP_00661682.1|")
        self.assertEqual(hit.target.name, "ZP_00661682")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Prosthecochloris vibrioformis DSM 265] >gi|71283129|gb|EAO14957.1| Twin-arginine translocation protein TatA/E [Prosthecochloris vibrioformis DSM 265]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=69)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 27)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 62, 63, 69],
                          [33, 76, 76, 82]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 50))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGAKKLPELAKGLGRGMKEFKKAQTEIEEEFNNAIEDTPAQKKETIKDKE'}, length=69)",
        )
        self.assertEqual(hsp.target.id, "gi|71481981|ref|ZP_00661682.1|")
        self.assertEqual(hsp.target.name, "ZP_00661682")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Prosthecochloris vibrioformis DSM 265] >gi|71283129|gb|EAO14957.1| Twin-arginine translocation protein TatA/E [Prosthecochloris vibrioformis DSM 265]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG KKL  +   LG  +K FKKA ++ E + +   +D     K TI DK+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|714819        19 FGAKKLPELAKGLGRGMKEFKKAQTEIEEEFNNAIEDTPAQKKETIKDKE 69
                  0 ||.|||......||...|.||||....|........|.....|-||.||. 50
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAK-TIADKQ 82
""",
        )
        hit = hits[147]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71150623|ref|ZP_00649545.1|")
        self.assertEqual(hit.target.name, "ZP_00649545")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Thiomicrospira denitrificans ATCC 33889] >gi|71087818|gb|EAO03597.1| Twin-arginine translocation protein TatA/E [Thiomicrospira denitrificans ATCC 33889]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=81)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 31)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 54, 54, 76],
                          [33, 68, 74, 96]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 63))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...DAK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGAKKIPELAKGIGKGIKNFKAEMKNEDDDTEVKSASTEAPKKVESAEEVASKESSK'}, length=81)",
        )
        self.assertEqual(hsp.target.id, "gi|71150623|ref|ZP_00649545.1|")
        self.assertEqual(hsp.target.name, "ZP_00649545")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Thiomicrospira denitrificans ATCC 33889] >gi|71087818|gb|EAO03597.1| Twin-arginine translocation protein TatA/E [Thiomicrospira denitrificans ATCC 33889]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG KK+  +   +G  IK FK  M +++   +  S      A T A K+ ++ +E A  E +K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|711506        19 FGAKKIPELAKGIGKGIKNFKAEMKNEDDDTEVKS------ASTEAPKKVESAEEVASKE
                  0 ||.||........|..||.||..|..........|------|.|.|.|......|.|..|
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|711506        73 SSK 76
                 60 ..| 63
gi|491764        93 DAK 96
""",
        )
        hit = hits[148]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|20151563|gb|AAM11141.1|")
        self.assertEqual(hit.target.name, "AAM11141")
        self.assertEqual(hit.target.description, "LD15253p [Drosophila melanogaster]")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=1521)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[1391, 1443],
                          [  50,  102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 52))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({50: 'KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1391: 'KSDKNASSSDKRKNSSTSQSSKSATPRIEDDSSEADDTADKAEKNQRHEKEK'}, length=1521)",
        )
        self.assertEqual(hsp.target.id, "gi|20151563|gb|AAM11141.1|")
        self.assertEqual(hsp.target.name, "AAM11141")
        self.assertEqual(hsp.target.description, "LD15253p [Drosophila melanogaster]")
        self.assertEqual(
            hsp.annotations["midline"],
            "K  K A S D+ K   TSQ +      I D  ++ +    K E  +RH+KE+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|201515      1391 KSDKNASSSDKRKNSSTSQSSKSATPRIEDDSSEADDTADKAEKNQRHEKEK 1443
                  0 |..|.|.|.|..|...|||........|.|..........|.|...||.||.   52
gi|491764        50 KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ  102
""",
        )
        hit = hits[149]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|6979936|gb|AAF34661.1|")
        self.assertEqual(hit.target.name, "AAF34661")
        self.assertEqual(
            hit.target.description, "split ends long isoform [Drosophila melanogaster]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=5554)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[1869, 1921],
                          [  50,  102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 52))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({50: 'KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1869: 'KSDKNASSSDKRKNSSTSQSSKSATPRIEDDSSEADDTADKAEKNQRHEKEK'}, length=5554)",
        )
        self.assertEqual(hsp.target.id, "gi|6979936|gb|AAF34661.1|")
        self.assertEqual(hsp.target.name, "AAF34661")
        self.assertEqual(
            hsp.target.description, "split ends long isoform [Drosophila melanogaster]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "K  K A S D+ K   TSQ +      I D  ++ +    K E  +RH+KE+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|697993      1869 KSDKNASSSDKRKNSSTSQSSKSATPRIEDDSSEADDTADKAEKNQRHEKEK 1921
                  0 |..|.|.|.|..|...|||........|.|..........|.|...||.||.   52
gi|491764        50 KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ  102
""",
        )
        hit = hits[150]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|6467825|gb|AAF13218.1|")
        self.assertEqual(hit.target.name, "AAF13218")
        self.assertEqual(
            hit.target.description,
            "Spen RNP motif protein long isoform [Drosophila melanogaster]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=5533)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[1875, 1927],
                          [  50,  102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 52))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({50: 'KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1875: 'KSDKNASSSDKRKNSSTSQSSKSATPRIEDDSSEADDTADKAEKNQRHEKEK'}, length=5533)",
        )
        self.assertEqual(hsp.target.id, "gi|6467825|gb|AAF13218.1|")
        self.assertEqual(hsp.target.name, "AAF13218")
        self.assertEqual(
            hsp.target.description,
            "Spen RNP motif protein long isoform [Drosophila melanogaster]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "K  K A S D+ K   TSQ +      I D  ++ +    K E  +RH+KE+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|646782      1875 KSDKNASSSDKRKNSSTSQSSKSATPRIEDDSSEADDTADKAEKNQRHEKEK 1927
                  0 |..|.|.|.|..|...|||........|.|..........|.|...||.||.   52
gi|491764        50 KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ  102
""",
        )
        hit = hits[151]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|61102013|ref|ZP_00377467.1|")
        self.assertEqual(hit.target.name, "ZP_00377467")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein ELI2708 [Erythrobacter litoralis HTCC2594] >gi|60736120|gb|EAL74381.1| hypothetical protein ELI2708 [Erythrobacter litoralis HTCC2594]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=80)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 76.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.8834)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.56602)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 33)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 47],
                          [14, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 47))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGQIGIWQILIIALVILVLFGRGKISDMMGDFGKGVSSFKKGLNEED'}, length=80)",
        )
        self.assertEqual(hsp.target.id, "gi|61102013|ref|ZP_00377467.1|")
        self.assertEqual(hsp.target.name, "ZP_00377467")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein ELI2708 [Erythrobacter litoralis HTCC2594] >gi|60736120|gb|EAL74381.1| hypothetical protein ELI2708 [Erythrobacter litoralis HTCC2594]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG I IWQ+LIIA+++++LFG  K+  +  D G  +  FKK +++++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|611020         0 MGQIGIWQILIIALVILVLFGRGKISDMMGDFGKGVSSFKKGLNEED 47
                  0 ||.|.|||...........||..|......|.|.....|||...... 47
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE 61
""",
        )
        hit = hits[152]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68056232|ref|ZP_00540361.1|")
        self.assertEqual(hit.target.name, "ZP_00540361")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Exiguobacterium sp. 255-15] >gi|68007169|gb|EAM86442.1| Twin-arginine translocation protein TatA/E [Exiguobacterium sp. 255-15]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=68)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 75.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.4982)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.04529)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 24)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[27, 50, 54, 67],
                          [33, 56, 56, 69]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 40))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({27: 'FGPKKLPELGRAAGQTLKEFKSATHGIMDDDKDKKDETKE'}, length=68)",
        )
        self.assertEqual(hsp.target.id, "gi|68056232|ref|ZP_00540361.1|")
        self.assertEqual(hsp.target.name, "ZP_00540361")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Exiguobacterium sp. 255-15] >gi|68007169|gb|EAM86442.1| Twin-arginine translocation protein TatA/E [Exiguobacterium sp. 255-15]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG KKL  +G   G ++K FK A    M DD+ K+D+T +"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|680562        27 FGPKKLPELGRAAGQTLKEFKSATHGIMDDDKDKKDETKE 67
                  0 ||.|||...|...|...|.||.|----|.||..|.|.|.. 40
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKA----MSDDEPKQDKTSQ 69
""",
        )
        hit = hits[153]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68190120|gb|EAN04781.1|")
        self.assertEqual(hit.target.name, "EAN04781")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Mesorhizobium sp. BNC1] >gi|69279521|ref|ZP_00614376.1| Twin-arginine translocation protein TatA/E [Mesorhizobium sp. BNC1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=71)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 75.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.4982)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.04529)
        self.assertEqual(hsp.annotations["identity"], 24)
        self.assertEqual(hsp.annotations["positive"], 34)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 44, 44, 52],
                          [14, 58, 59, 67]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 53))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGSFSIWHWLIVLVVVLLLFGRGKIPELMGDMAKGIKNFRKGMTDEAEEAKT'}, length=71)",
        )
        self.assertEqual(hsp.target.id, "gi|68190120|gb|EAN04781.1|")
        self.assertEqual(hsp.target.name, "EAN04781")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Mesorhizobium sp. BNC1] >gi|69279521|ref|ZP_00614376.1| Twin-arginine translocation protein TatA/E [Mesorhizobium sp. BNC1]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  SIW  LI+ V+V+LLFG  K+  +  D+   IK F+K M+ DE ++ KT",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|681901         0 MGSFSIWHWLIVLVVVLLLFGRGKIPELMGDMAKGIKNFRKGMT-DEAEEAKT 52
                  0 ||..|||............||..|......|....||.|.|.|.-||....|| 53
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKT 67
""",
        )
        hit = hits[154]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|15605663|ref|NP_213038.1|")
        self.assertEqual(hit.target.name, "NP_213038")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein aq_064c [Aquifex aeolicus VF5] >gi|2982828|gb|AAC06451.1| hypothetical protein [Aquifex aeolicus VF5] >gi|7444822|pir||C70306 conserved hypothetical protein aq_064c - Aquifex aeolicus >gi|9978997|sp|O66478|TAT1_AQUAE Sec-independent protein translocase tatA/E-like protein 1",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=77)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 75.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.4982)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.04529)
        self.assertEqual(hsp.annotations["identity"], 26)
        self.assertEqual(hsp.annotations["positive"], 47)
        self.assertEqual(hsp.annotations["gaps"], 5)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 3, 58, 58, 61, 61, 76],
                          [15, 70, 74, 77, 78, 93]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 78))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({15: 'GGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ...KTE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({3: 'GGISMTELIIILAVILLLFGAGRLPEAGRALGEGIRNFRKALSGETEVKEVKAE...KVE'}, length=77)",
        )
        self.assertEqual(hsp.target.id, "gi|15605663|ref|NP_213038.1|")
        self.assertEqual(hsp.target.name, "NP_213038")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein aq_064c [Aquifex aeolicus VF5] >gi|2982828|gb|AAC06451.1| hypothetical protein [Aquifex aeolicus VF5] >gi|7444822|pir||C70306 conserved hypothetical protein aq_064c - Aquifex aeolicus >gi|9978997|sp|O66478|TAT1_AQUAE Sec-independent protein translocase tatA/E-like protein 1",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "GGIS+ +L+II  +++LLFG  +L   G  LG  I+ F+KA+S +   ++  ++D     KT  +++ +  +E+ K E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|156056         3 GGISMTELIIILAVILLLFGAGRLPEAGRALGEGIRNFRKALSGETEVKEVKAED----V
                  0 ||||..............||...|...|..||..|..|.||.|...........|----.
gi|491764        15 GGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTA

gi|156056        59 KT-EERKEEKKEEKEKVE 76
                 60 ||-.........|..|.| 78
gi|491764        75 KTIADKQADTNQEQAKTE 93
""",
        )
        hit = hits[155]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|60493413|emb|CAH08199.1|")
        self.assertEqual(hit.target.name, "CAH08199")
        self.assertEqual(
            hit.target.description,
            "aerotolerance-related exported protein [Bacteroides fragilis NCTC 9343] >gi|60681979|ref|YP_212123.1| aerotolerance-related exported protein [Bacteroides fragilis NCTC 9343] >gi|4838140|gb|AAD30860.1| BatC [Bacteroides fragilis]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=238)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 75.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.4982)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.04529)
        self.assertEqual(hsp.annotations["identity"], 18)
        self.assertEqual(hsp.annotations["positive"], 34)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[110, 128, 128, 149, 154, 173],
                          [ 42,  60,  61,  82,  82, 101]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 64))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({42: 'GSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({110: 'GKDYQKAVEAYKMSLRNNPKDDETRYNLALAQKLLKDQQQNQQNQDQNQDQNKD...DKK'}, length=238)",
        )
        self.assertEqual(hsp.target.id, "gi|60493413|emb|CAH08199.1|")
        self.assertEqual(hsp.target.name, "CAH08199")
        self.assertEqual(
            hsp.target.description,
            "aerotolerance-related exported protein [Bacteroides fragilis NCTC 9343] >gi|60681979|ref|YP_212123.1| aerotolerance-related exported protein [Bacteroides fragilis NCTC 9343] >gi|4838140|gb|AAD30860.1| BatC [Bacteroides fragilis]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "G D   +++ +K ++ ++ PK D+T  +     K + D+Q      D NQ+Q K +  K+ DK+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|604934       110 GKDYQKAVEAYKMSLRNN-PKDDETRYNLALAQKLLKDQQQNQQNQDQNQDQNKDDQQKQ
                  0 |.|........|......-||.|.|........|...|.|-----.|.||.|.|....|.
gi|491764        42 GSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQ-----ADTNQEQAKTEDAKR

gi|604934       169 QDKK 173
                 60 .||.  64
gi|491764        97 HDKE 101
""",
        )
        hit = hits[156]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|50877510|emb|CAG37350.1|")
        self.assertEqual(hit.target.name, "CAG37350")
        self.assertEqual(
            hit.target.description,
            "related to Sec-independent protein translocase protein TatA [Desulfotalea psychrophila LSv54] >gi|51246473|ref|YP_066357.1| similar to Sec-independent protein translocase protein TatA [Desulfotalea psychrophila LSv54]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=84)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 75.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.4982)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.04529)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 20)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 47],
                          [33, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 28))
        self.assertEqual(
            repr(hsp.query.seq), "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDE'}, length=103)"
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq), "Seq({19: 'FGGKKLPKLGSSLGQAMKSFKQGVSDVE'}, length=84)"
        )
        self.assertEqual(hsp.target.id, "gi|50877510|emb|CAG37350.1|")
        self.assertEqual(hsp.target.name, "CAG37350")
        self.assertEqual(
            hsp.target.description,
            "related to Sec-independent protein translocase protein TatA [Desulfotalea psychrophila LSv54] >gi|51246473|ref|YP_066357.1| similar to Sec-independent protein translocase protein TatA [Desulfotalea psychrophila LSv54]",
        )
        self.assertEqual(hsp.annotations["midline"], "FG KKL  +GS LG ++K FK+ +SD E")
        self.assertEqual(
            str(hsp),
            """\
gi|508775        19 FGGKKLPKLGSSLGQAMKSFKQGVSDVE 47
                  0 ||.|||...||.||...|.||...||.| 28
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDE 61
""",
        )
        hit = hits[157]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|42739647|gb|AAS43573.1|")
        self.assertEqual(hit.target.name, "AAS43573")
        self.assertEqual(
            hit.target.description,
            "conserved domain protein [Bacillus cereus ATCC 10987] >gi|42783718|ref|NP_980965.1| hypothetical protein BCE4672 [Bacillus cereus ATCC 10987]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=236)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 75.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.4982)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.04529)
        self.assertEqual(hsp.annotations["identity"], 18)
        self.assertEqual(hsp.annotations["positive"], 37)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[150, 157, 159, 215],
                          [ 40,  47,  47, 103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 65))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({40: 'SIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTED...EQV'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({150: 'AVGGDNGVTAATKNNDQAKTDTQVKEEKTKVESKETAKEASKETKNENGKAEKT...ARI'}, length=236)",
        )
        self.assertEqual(hsp.target.id, "gi|42739647|gb|AAS43573.1|")
        self.assertEqual(hsp.target.name, "AAS43573")
        self.assertEqual(
            hsp.target.description,
            "conserved domain protein [Bacillus cereus ATCC 10987] >gi|42783718|ref|NP_980965.1| hypothetical protein BCE4672 [Bacillus cereus ATCC 10987]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++G D G  A+ K   +A +D + K++KT  ++  TAK  + +  + N +  KT++ K  D+ ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|427396       150 AVGGDNGVTAATKNNDQAKTDTQVKEEKTKVESKETAKEASKETKNENGKAEKTDNPKTG
                  0 ..|.|.|--|..|....|..|...|..||......|||.........|....||...|..
gi|491764        40 SIGSDLG--ASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRH

gi|427396       210 DEARI 215
                 60 |....  65
gi|491764        98 DKEQV 103
""",
        )
        hit = hits[158]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|53713708|ref|YP_099700.1|")
        self.assertEqual(hit.target.name, "YP_099700")
        self.assertEqual(
            hit.target.description,
            "conserved hypothetical protein BatC [Bacteroides fragilis YCH46] >gi|52216573|dbj|BAD49166.1| conserved hypothetical protein BatC [Bacteroides fragilis YCH46]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=238)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 75.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.4982)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.04529)
        self.assertEqual(hsp.annotations["identity"], 18)
        self.assertEqual(hsp.annotations["positive"], 34)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[110, 128, 128, 149, 154, 173],
                          [ 42,  60,  61,  82,  82, 101]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 64))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({42: 'GSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({110: 'GKDYQKAVEAYKMSLRNNPKDDETRYNLALAQKLLKDQQQNQQNQDQNQDQNKD...DKK'}, length=238)",
        )
        self.assertEqual(hsp.target.id, "gi|53713708|ref|YP_099700.1|")
        self.assertEqual(hsp.target.name, "YP_099700")
        self.assertEqual(
            hsp.target.description,
            "conserved hypothetical protein BatC [Bacteroides fragilis YCH46] >gi|52216573|dbj|BAD49166.1| conserved hypothetical protein BatC [Bacteroides fragilis YCH46]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "G D   +++ +K ++ ++ PK D+T  +     K + D+Q      D NQ+Q K +  K+ DK+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|537137       110 GKDYQKAVEAYKMSLRNN-PKDDETRYNLALAQKLLKDQQQNQQNQDQNQDQNKDDQQKQ
                  0 |.|........|......-||.|.|........|...|.|-----.|.||.|.|....|.
gi|491764        42 GSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQ-----ADTNQEQAKTEDAKR

gi|537137       169 QDKK 173
                 60 .||.  64
gi|491764        97 HDKE 101
""",
        )
        hit = hits[159]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|33860901|ref|NP_892462.1|")
        self.assertEqual(hit.target.name, "NP_892462")
        self.assertEqual(
            hit.target.description,
            "mttA/Hcf106 family [Prochlorococcus marinus subsp. pastoris str. CCMP1986] >gi|33633843|emb|CAE18802.1| mttA/Hcf106 family [Prochlorococcus marinus subsp. pastoris str. CCMP1986]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=96)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.67123)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 34)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[21, 87],
                          [33, 99]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 66))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...RHD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({21: 'FGPKKLPELGKQLGKTLKSLKKASNEFQNEIDQVINEPESENLPKSPQKKFTND...EKD'}, length=96)",
        )
        self.assertEqual(hsp.target.id, "gi|33860901|ref|NP_892462.1|")
        self.assertEqual(hsp.target.name, "NP_892462")
        self.assertEqual(
            hsp.target.description,
            "mttA/Hcf106 family [Prochlorococcus marinus subsp. pastoris str. CCMP1986] >gi|33633843|emb|CAE18802.1| mttA/Hcf106 family [Prochlorococcus marinus subsp. pastoris str. CCMP1986]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG KKL  +G  LG ++K  KKA ++ + + D+   + +      + ++  TN     T++++  D",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|338609        21 FGPKKLPELGKQLGKTLKSLKKASNEFQNEIDQVINEPESENLPKSPQKKFTNDLDQVTK
                  0 ||.|||...|..||...|..|||........|...................||.....|.
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|338609        81 ESEEKD 87
                 60 .....| 66
gi|491764        93 DAKRHD 99
""",
        )
        hit = hits[160]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|48851224|ref|ZP_00305466.1|")
        self.assertEqual(hit.target.name, "ZP_00305466")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Novosphingobium aromaticivorans DSM 12444]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=83)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.67123)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 35)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 49],
                          [14, 63]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 49))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGLSLPHLIVLALVVLILFGRGRISEMMGDFGKGIKSFKQGMNDEDSK'}, length=83)",
        )
        self.assertEqual(hsp.target.id, "gi|48851224|ref|ZP_00305466.1|")
        self.assertEqual(hsp.target.name, "ZP_00305466")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Novosphingobium aromaticivorans DSM 12444]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGG+S+  L+++A++V++LFG  ++  +  D G  IK FK+ M+D++ K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|488512         0 MGGLSLPHLIVLALVVLILFGRGRISEMMGDFGKGIKSFKQGMNDEDSK 49
                  0 |||.|..............||.........|.|..||.||..|.|...| 49
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPK 63
""",
        )
        hit = hits[161]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67938449|ref|ZP_00530974.1|")
        self.assertEqual(hit.target.name, "ZP_00530974")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Chlorobium phaeobacteroides BS1] >gi|67915292|gb|EAM64615.1| Twin-arginine translocation protein TatA/E [Chlorobium phaeobacteroides BS1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=69)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.67123)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 21)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 56],
                          [33, 70]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 37))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGAKKLPELAKGLGKGMKEFKKAQSEIEEELNKAVDD'}, length=69)",
        )
        self.assertEqual(hsp.target.id, "gi|67938449|ref|ZP_00530974.1|")
        self.assertEqual(hsp.target.name, "ZP_00530974")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Chlorobium phaeobacteroides BS1] >gi|67915292|gb|EAM64615.1| Twin-arginine translocation protein TatA/E [Chlorobium phaeobacteroides BS1]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG KKL  +   LG  +K FKKA S+ E + +K   D"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|679384        19 FGAKKLPELAKGLGKGMKEFKKAQSEIEEELNKAVDD 56
                  0 ||.|||......||...|.||||.|..|....|...| 37
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD 70
""",
        )
        hit = hits[162]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|45657833|ref|YP_001919.1|")
        self.assertEqual(hit.target.name, "YP_001919")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein secretion pathway component [Leptospira interrogans serovar Copenhageni str. Fiocruz L1-130] >gi|24214626|ref|NP_712107.1| mttA/Hcf106 family protein [Leptospira interrogans serovar Lai str. 56601] >gi|45601073|gb|AAS70556.1| sec-independent protein secretion pathway component [Leptospira interrogans serovar Copenhageni str. Fiocruz L1-130] >gi|24195601|gb|AAN49125.1| mttA/Hcf106 family protein [Leptospira interrogans serovar lai str. 56601] >gi|59798911|sp|Q8F4W2|TATA_LEPIN Sec-independent protein translocase protein tatA/E homolog >gi|59798776|sp|Q72QX8|TATA_LEPIC Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=90)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.67123)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 33)
        self.assertEqual(hsp.annotations["gaps"], 9)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[31, 55, 55, 86],
                          [33, 57, 66, 97]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 64))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...AKR'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({31: 'FGGKRLPSLAKDLGDGIRSFRKSLTGESDDSSQQISQEQERSVPKEETKTSKSKK'}, length=90)",
        )
        self.assertEqual(hsp.target.id, "gi|45657833|ref|YP_001919.1|")
        self.assertEqual(hsp.target.name, "YP_001919")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein secretion pathway component [Leptospira interrogans serovar Copenhageni str. Fiocruz L1-130] >gi|24214626|ref|NP_712107.1| mttA/Hcf106 family protein [Leptospira interrogans serovar Lai str. 56601] >gi|45601073|gb|AAS70556.1| sec-independent protein secretion pathway component [Leptospira interrogans serovar Copenhageni str. Fiocruz L1-130] >gi|24195601|gb|AAN49125.1| mttA/Hcf106 family protein [Leptospira interrogans serovar lai str. 56601] >gi|59798911|sp|Q8F4W2|TATA_LEPIN Sec-independent protein translocase protein tatA/E homolog >gi|59798776|sp|Q72QX8|TATA_LEPIC Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG K+L S+  DLG  I+ F+K++         T +  D + +   +++    +E+ KT  +K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|456578        31 FGGKRLPSLAKDLGDGIRSFRKSL---------TGESDDSSQQISQEQERSVPKEETKTS
                  0 ||.|.|.|...|||..|..|.|..---------|....|...............|..||.
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTE

gi|456578        82 KSKK 86
                 60 ..|. 64
gi|491764        93 DAKR 97
""",
        )
        hit = hits[163]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|57238048|ref|YP_179297.1|")
        self.assertEqual(hit.target.name, "YP_179297")
        self.assertEqual(
            hit.target.description,
            "twin-arginine translocation protein, TatA/E family [Campylobacter jejuni RM1221] >gi|57166852|gb|AAW35631.1| twin-arginine translocation protein, TatA/E family [Campylobacter jejuni RM1221] >gi|6968609|emb|CAB73430.1| hypothetical protein Cj1176c [Campylobacter jejuni subsp. jejuni NCTC 11168] >gi|11346722|pir||B81323 hypothetical protein Cj1176c [imported] - Campylobacter jejuni (strain NCTC 11168) >gi|9979042|sp|Q9PNB9|TATA_CAMJE Sec-independent protein translocase protein tatA/E homolog >gi|15792500|ref|NP_282323.1| hypothetical protein Cj1176c [Campylobacter jejuni subsp. jejuni NCTC 11168]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=79)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.67123)
        self.assertEqual(hsp.annotations["identity"], 18)
        self.assertEqual(hsp.annotations["positive"], 30)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[20, 48, 48, 77],
                          [33, 61, 62, 91]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 58))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({20: 'FGAKKIPELAKGLGKGIKTFKDEMNNDDEVAKNTQKIEENKNTTNNTNADASIDETK'}, length=79)",
        )
        self.assertEqual(hsp.target.id, "gi|57238048|ref|YP_179297.1|")
        self.assertEqual(hsp.target.name, "YP_179297")
        self.assertEqual(
            hsp.target.description,
            "twin-arginine translocation protein, TatA/E family [Campylobacter jejuni RM1221] >gi|57166852|gb|AAW35631.1| twin-arginine translocation protein, TatA/E family [Campylobacter jejuni RM1221] >gi|6968609|emb|CAB73430.1| hypothetical protein Cj1176c [Campylobacter jejuni subsp. jejuni NCTC 11168] >gi|11346722|pir||B81323 hypothetical protein Cj1176c [imported] - Campylobacter jejuni (strain NCTC 11168) >gi|9979042|sp|Q9PNB9|TATA_CAMJE Sec-independent protein translocase protein tatA/E homolog >gi|15792500|ref|NP_282323.1| hypothetical protein Cj1176c [Campylobacter jejuni subsp. jejuni NCTC 11168]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG KK+  +   LG  IK FK  M++D+ +  K +Q  +    T  +  AD + ++ K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|572380        20 FGAKKIPELAKGLGKGIKTFKDEMNNDD-EVAKNTQKIEENKNTTNNTNADASIDETK 77
                  0 ||.||.......||..||.||..|..|.-...|..|.......|.....||......| 58
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAK 91
""",
        )
        hit = hits[164]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|56962648|ref|YP_174374.1|")
        self.assertEqual(hit.target.name, "YP_174374")
        self.assertEqual(
            hit.target.description,
            "sec-independent protein translocase protein TatA [Bacillus clausii KSM-K16] >gi|56908886|dbj|BAD63413.1| sec-independent protein translocase protein TatA [Bacillus clausii KSM-K16]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=63)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.67123)
        self.assertEqual(hsp.annotations["identity"], 20)
        self.assertEqual(hsp.annotations["positive"], 38)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 40, 43, 57],
                          [14, 54, 54, 68]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 57))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGLSVGSVVLIALVALLIFGPKKLPELGKAAGSTLREFKNATKGLADDDDDTKSTN'}, length=63)",
        )
        self.assertEqual(hsp.target.id, "gi|56962648|ref|YP_174374.1|")
        self.assertEqual(hsp.target.name, "YP_174374")
        self.assertEqual(
            hsp.target.description,
            "sec-independent protein translocase protein TatA [Bacillus clausii KSM-K16] >gi|56908886|dbj|BAD63413.1| sec-independent protein translocase protein TatA [Bacillus clausii KSM-K16]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGG+S+  +++IA++ +L+FG KKL  +G   G++++ FK   K ++DD+     T+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|569626         0 MGGLSVGSVVLIALVALLIFGPKKLPELGKAAGSTLREFKNATKGLADDDDDTKSTN 57
                  0 |||.|..............||.|||...|...|.....||---|...||......|. 57
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFK---KAMSDDEPKQDKTS 68
""",
        )
        hit = hits[165]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|33239734|ref|NP_874676.1|")
        self.assertEqual(hit.target.name, "NP_874676")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein secretion pathway component TatA [Prochlorococcus marinus subsp. marinus str. CCMP1375] >gi|33237259|gb|AAP99328.1| Sec-independent protein secretion pathway component TatA [Prochlorococcus marinus subsp. marinus str. CCMP1375]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=84)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.67123)
        self.assertEqual(hsp.annotations["identity"], 24)
        self.assertEqual(hsp.annotations["positive"], 43)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 4, 54, 54, 74],
                          [16, 66, 74, 94]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 78))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({16: 'GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD...TED'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({4: 'GIGLPEIAVIAAIALFIFGPKKLPALGRGLGKTLRSLQKASSEFENELQKAVSA...HKE'}, length=84)",
        )
        self.assertEqual(hsp.target.id, "gi|33239734|ref|NP_874676.1|")
        self.assertEqual(hsp.target.name, "NP_874676")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein secretion pathway component TatA [Prochlorococcus marinus subsp. marinus str. CCMP1375] >gi|33237259|gb|AAP99328.1| Sec-independent protein secretion pathway component TatA [Prochlorococcus marinus subsp. marinus str. CCMP1375]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "GI + ++ +IA I + +FG KKL ++G  LG +++  +KA S+ E +  K        A + +DK    NQ + K ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|332397         4 GIGLPEIAVIAAIALFIFGPKKLPALGRGLGKTLRSLQKASSEFENELQK--------AV
                  0 ||...............||.|||...|..||.......||.|..|....|--------|.
gi|491764        16 GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAK

gi|332397        56 SASDKTDQGNQHELKHKE 74
                 60 ...||....||...|... 78
gi|491764        76 TIADKQADTNQEQAKTED 94
""",
        )
        hit = hits[166]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|21674434|ref|NP_662499.1|")
        self.assertEqual(hit.target.name, "NP_662499")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein translocase protein TatE, putative [Chlorobium tepidum TLS] >gi|21647618|gb|AAM72841.1| Sec-independent protein translocase protein TatE, putative [Chlorobium tepidum TLS]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=67)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.67123)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 24)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 62],
                          [33, 76]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 43))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGAQKLPELAKGLGKGIKEFKKAQNEIEEEFNKATDDSSSKEK'}, length=67)",
        )
        self.assertEqual(hsp.target.id, "gi|21674434|ref|NP_662499.1|")
        self.assertEqual(hsp.target.name, "NP_662499")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein translocase protein TatE, putative [Chlorobium tepidum TLS] >gi|21647618|gb|AAM72841.1| Sec-independent protein translocase protein TatE, putative [Chlorobium tepidum TLS]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG +KL  +   LG  IK FKKA ++ E + +K + D+    K"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|216744        19 FGAQKLPELAKGLGKGIKEFKKAQNEIEEEFNKATDDSSSKEK 62
                  0 ||..||......||..||.||||....|....|...|.....| 43
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAK 76
""",
        )
        hit = hits[167]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|39968009|ref|XP_365395.1|")
        self.assertEqual(hit.target.name, "XP_365395")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein MG02097.4 [Magnaporthe grisea 70-15]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=823)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 73.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.7278)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.48874)
        self.assertEqual(hsp.annotations["identity"], 20)
        self.assertEqual(hsp.annotations["positive"], 32)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 67, 124, 128, 139],
                          [ 34,  91,  91, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 72))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({34: 'GTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQE...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({67: 'GAPLIGKAVDKIVDKVSGGDKKKKEEEEAKKKAEADAAAAAEAEAKKKADAEAA...EEE'}, length=823)",
        )
        self.assertEqual(hsp.target.id, "gi|39968009|ref|XP_365395.1|")
        self.assertEqual(hsp.target.name, "XP_365395")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein MG02097.4 [Magnaporthe grisea 70-15]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "G   +G     +   + G  K   ++E  + K   DA   A+  A K+AD    +AK     ED K+ D+E+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|399680        67 GAPLIGKAVDKIVDKVSGGDKKKKEEEEAKKKAEADAAAAAEAEAKKKADAEAAEAKKKK
                  0 |....|...........|..|.....|....|...||...|...|.|.||.....||---
gi|491764        34 GTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAK---

gi|399680       127 EAEDKKKKDEEE 139
                 60 -.||.|..|.|.  72
gi|491764        91 -TEDAKRHDKEQ 102
""",
        )
        hit = hits[168]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|4877986|gb|AAD31523.1|")
        self.assertEqual(hit.target.name, "AAD31523")
        self.assertEqual(hit.target.description, "THA9 [Zea mays]")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=169)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 73.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.7278)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.48874)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 33)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 73, 126],
                          [ 13,  66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 53))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({13: 'CMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({73: 'CLFGLGVPELAVIAGVAALVFGPKQLPEIGRSLGKTVKSFQEAAKEFESELKK'}, length=169)",
        )
        self.assertEqual(hsp.target.id, "gi|4877986|gb|AAD31523.1|")
        self.assertEqual(hsp.target.name, "AAD31523")
        self.assertEqual(hsp.target.description, "THA9 [Zea mays]")
        self.assertEqual(
            hsp.annotations["midline"],
            "C+ G+ + +L +IA +  L+FG K+L  IG  LG ++K F++A  + E +  K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|487798        73 CLFGLGVPELAVIAGVAALVFGPKQLPEIGRSLGKTVKSFQEAAKEFESELKK 126
                  0 |..|................||.|.|..||..||...|.|..|....|....|  53
gi|491764        13 CMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK  66
""",
        )
        hit = hits[169]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67934419|ref|ZP_00527476.1|")
        self.assertEqual(hit.target.name, "ZP_00527476")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Solibacter usitatus Ellin6076] >gi|67858348|gb|EAM53485.1| Twin-arginine translocation protein TatA/E [Solibacter usitatus Ellin6076]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=56)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 73.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.7278)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.48874)
        self.assertEqual(hsp.annotations["identity"], 14)
        self.assertEqual(hsp.annotations["positive"], 20)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 55],
                          [33, 69]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 36))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGGKKIPEVAKGLGEGIRNFKSALKGDEEKVEEKKQ'}, length=56)",
        )
        self.assertEqual(hsp.target.id, "gi|67934419|ref|ZP_00527476.1|")
        self.assertEqual(hsp.target.name, "ZP_00527476")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Solibacter usitatus Ellin6076] >gi|67858348|gb|EAM53485.1| Twin-arginine translocation protein TatA/E [Solibacter usitatus Ellin6076]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG KK+  +   LG  I+ FK A+  DE K ++  Q"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|679344        19 FGGKKIPEVAKGLGEGIRNFKSALKGDEEKVEEKKQ 55
                  0 ||.||.......||..|..||.|...||.|.....| 36
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQ 69
""",
        )
        hit = hits[170]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|42523658|ref|NP_969038.1|")
        self.assertEqual(hit.target.name, "NP_969038")
        self.assertEqual(
            hit.target.description,
            "twin-argine protein translocase component [Bdellovibrio bacteriovorus HD100] >gi|39575865|emb|CAE80031.1| twin-argine protein translocase component [Bdellovibrio bacteriovorus HD100]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=79)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 73.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.7278)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.48874)
        self.assertEqual(hsp.annotations["identity"], 24)
        self.assertEqual(hsp.annotations["positive"], 45)
        self.assertEqual(hsp.annotations["gaps"], 11)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  0,  44,  44,  77],
                          [ 14,  58,  69, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 88))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGEFSLTHILLLAVIFLIFFGPSRLPQLGQSMGKAIRGFKQGLNEIDVDAKDIH...ENQ'}, length=79)",
        )
        self.assertEqual(hsp.target.id, "gi|42523658|ref|NP_969038.1|")
        self.assertEqual(hsp.target.name, "NP_969038")
        self.assertEqual(
            hsp.target.description,
            "twin-argine protein translocase component [Bdellovibrio bacteriovorus HD100] >gi|39575865|emb|CAE80031.1| twin-argine protein translocase component [Bdellovibrio bacteriovorus HD100]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG  S+  +L++AVI ++ FG  +L  +G  +G +I+GFK+ ++           + D  AK I D Q  ++Q +      ++  + Q",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|425236         0 MGEFSLTHILLLAVIFLIFFGPSRLPQLGQSMGKAIRGFKQGLN-----------EIDVD
                  0 ||..|..............||...|...|...|..|.|||....-----------..|..
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFT

gi|425236        49 AKDIHDNQQVSHQNKQSMGQTQKQGENQ  77
                 60 ||.|.|.|....|..............|  88
gi|491764        74 AKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[171]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|71546080|ref|ZP_00666945.1|")
        self.assertEqual(hit.target.name, "ZP_00666945")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Syntrophobacter fumaroxidans MPOB] >gi|71488143|gb|EAO20575.1| Twin-arginine translocation protein TatA/E [Syntrophobacter fumaroxidans MPOB]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=73)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 73.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.7278)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.48874)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 20)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[17, 55],
                          [33, 71]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 38))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({17: 'FGPGKLPDIGKSLGKGIRNFKKATDEESPVPQVPSKTA'}, length=73)",
        )
        self.assertEqual(hsp.target.id, "gi|71546080|ref|ZP_00666945.1|")
        self.assertEqual(hsp.target.name, "ZP_00666945")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Syntrophobacter fumaroxidans MPOB] >gi|71488143|gb|EAO20575.1| Twin-arginine translocation protein TatA/E [Syntrophobacter fumaroxidans MPOB]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG  KL  IG  LG  I+ FKKA  ++ P     S+ A"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|715460        17 FGPGKLPDIGKSLGKGIRNFKKATDEESPVPQVPSKTA 55
                  0 ||..||..||..||..|..||||.....|.....|..| 38
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDA 71
""",
        )
        hit = hits[172]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68002197|ref|ZP_00534828.1|")
        self.assertEqual(hit.target.name, "ZP_00534828")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Geobacter metallireducens GS-15] >gi|67993414|gb|EAM80570.1| Twin-arginine translocation protein TatA/E [Geobacter metallireducens GS-15]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=60)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 18)
        self.assertEqual(hsp.annotations["positive"], 24)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 42, 42, 60],
                          [33, 56, 57, 75]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 42))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGPAKLPQLGQSLGAGIRNFKKATLEEPEQIATKDKEEGAA'}, length=60)",
        )
        self.assertEqual(hsp.target.id, "gi|68002197|ref|ZP_00534828.1|")
        self.assertEqual(hsp.target.name, "ZP_00534828")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Geobacter metallireducens GS-15] >gi|67993414|gb|EAM80570.1| Twin-arginine translocation protein TatA/E [Geobacter metallireducens GS-15]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG  KL  +G  LGA I+ FKKA + +EP+Q  T    +  A"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|680021        19 FGPAKLPQLGQSLGAGIRNFKKA-TLEEPEQIATKDKEEGAA 60
                  0 ||..||...|..|||.|..||||-...||.|..|.......| 42
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTA 75
""",
        )
        hit = hits[173]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67481641|ref|XP_656170.1|")
        self.assertEqual(hit.target.name, "XP_656170")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein 16.t00066 [Entamoeba histolytica HM-1:IMSS] >gi|56473354|gb|EAL50784.1| hypothetical protein 16.t00066 [Entamoeba histolytica HM-1:IMSS]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=434)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 21)
        self.assertEqual(hsp.annotations["positive"], 32)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[164, 192, 195, 233],
                          [ 35,  63,  63, 101]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 69))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({35: 'TKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQ...DKE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({164: 'TKGSESSKTDLTKSCKGQKAHTKEDEKKLHSSDSESSDSESSYSDSDSESSDSE...DRE'}, length=434)",
        )
        self.assertEqual(hsp.target.id, "gi|67481641|ref|XP_656170.1|")
        self.assertEqual(hsp.target.name, "XP_656170")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein 16.t00066 [Entamoeba histolytica HM-1:IMSS] >gi|56473354|gb|EAL50784.1| hypothetical protein 16.t00066 [Entamoeba histolytica HM-1:IMSS]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "TK   S  +DL  S KG K    +DE K    D  S D++ +      + +D+  E++ TE     D+E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|674816       164 TKGSESSKTDLTKSCKGQKAHTKEDEKKLHSSDSESSDSESSYSDSDSESSDSEDEESST
                  0 ||...|...||..|.||.|.....||.|---.|..|.|.............|...|...|
gi|491764        35 TKKLGSIGSDLGASIKGFKKAMSDDEPK---QDKTSQDADFTAKTIADKQADTNQEQAKT

gi|674816       224 ESDSPSDRE 233
                 60 |.....|.|  69
gi|491764        92 EDAKRHDKE 101
""",
        )
        hit = hits[174]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|50935447|ref|XP_477251.1|")
        self.assertEqual(hit.target.name, "XP_477251")
        self.assertEqual(
            hit.target.description,
            "putative Calreticulin precursor [Oryza sativa (japonica cultivar-group)] >gi|51978962|ref|XP_507358.1| PREDICTED OJ1058_C08.28-2 gene product [Oryza sativa (japonica cultivar-group)] >gi|51963340|ref|XP_506239.1| PREDICTED OJ1058_C08.28-2 gene product [Oryza sativa (japonica cultivar-group)] >gi|50509013|dbj|BAD31961.1| putative Calreticulin precursor [Oryza sativa (japonica cultivar-group)] >gi|34393218|dbj|BAC82932.1| putative Calreticulin precursor [Oryza sativa (japonica cultivar-group)]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=424)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 27)
        self.assertEqual(hsp.annotations["gaps"], 5)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[382, 401, 401, 423],
                          [ 54,  73,  78, 100]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 46))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({54: 'KAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({382: 'KAGEDDDDLDDEDAEDEDKADEKADSDAEDGKDSDDEKHDE'}, length=424)",
        )
        self.assertEqual(hsp.target.id, "gi|50935447|ref|XP_477251.1|")
        self.assertEqual(hsp.target.name, "XP_477251")
        self.assertEqual(
            hsp.target.description,
            "putative Calreticulin precursor [Oryza sativa (japonica cultivar-group)] >gi|51978962|ref|XP_507358.1| PREDICTED OJ1058_C08.28-2 gene product [Oryza sativa (japonica cultivar-group)] >gi|51963340|ref|XP_506239.1| PREDICTED OJ1058_C08.28-2 gene product [Oryza sativa (japonica cultivar-group)] >gi|50509013|dbj|BAD31961.1| putative Calreticulin precursor [Oryza sativa (japonica cultivar-group)] >gi|34393218|dbj|BAC82932.1| putative Calreticulin precursor [Oryza sativa (japonica cultivar-group)]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "KA  DD+   D+ ++D D      AD++AD++ E  K  D ++HD+"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|509354       382 KAGEDDDDLDDEDAEDEDK-----ADEKADSDAEDGKDSDDEKHDE 423
                  0 ||..||....|....|.|.-----||..||...|..|..|...||.  46
gi|491764        54 KAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDK 100
""",
        )
        hit = hits[175]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|50978634|ref|NP_001003013.1|")
        self.assertEqual(hit.target.name, "NP_001003013")
        self.assertEqual(
            hit.target.description,
            "acidic (leucine-rich) nuclear phosphoprotein 32 family, member A [Canis familiaris] >gi|26984047|gb|AAN85118.1| inhibitor-1 of protein phosphatase type 2A [Canis familiaris]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=249)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 13)
        self.assertEqual(hsp.annotations["positive"], 29)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[160, 182, 182, 209],
                          [ 50,  72,  74, 101]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 51))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({50: 'KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({160: 'EGYVEGLDDDEEDEDEEEYDEDAQVVEDEEDEEEEEEGEEEDVSGEEEE'}, length=249)",
        )
        self.assertEqual(hsp.target.id, "gi|50978634|ref|NP_001003013.1|")
        self.assertEqual(hsp.target.name, "NP_001003013")
        self.assertEqual(
            hsp.target.description,
            "acidic (leucine-rich) nuclear phosphoprotein 32 family, member A [Canis familiaris] >gi|26984047|gb|AAN85118.1| inhibitor-1 of protein phosphatase type 2A [Canis familiaris]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+G+ + + DDE  +D+   D D  A+ + D++ +  +E+ + ED    ++E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|509786       160 EGYVEGLDDDEEDEDEEEYDED--AQVVEDEEDEEEEEEGEEEDVSGEEEE 209
                  0 .|......|||...|....|.|--|....|.......|....||......|  51
gi|491764        50 KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKE 101
""",
        )
        hit = hits[176]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|70936814|ref|XP_739300.1|")
        self.assertEqual(hit.target.name, "XP_739300")
        self.assertEqual(
            hit.target.description,
            "40S ribosomal subunit protein S6, putative [Plasmodium chabaudi] >gi|56516193|emb|CAH81548.1| 40S ribosomal subunit protein S6, putative [Plasmodium chabaudi]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=184)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 33)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 96, 103, 103, 129, 131, 154],
                          [ 44,  51,  52,  78,  78, 101]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 59))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({44: 'DLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({96: 'DVGKKLKVKKNISKDAKKNDKEKNSKDDKSKTKKNVDKKSEKSEKSKKVENKKVNEKQ'}, length=184)",
        )
        self.assertEqual(hsp.target.id, "gi|70936814|ref|XP_739300.1|")
        self.assertEqual(hsp.target.name, "XP_739300")
        self.assertEqual(
            hsp.target.description,
            "40S ribosomal subunit protein S6, putative [Plasmodium chabaudi] >gi|56516193|emb|CAH81548.1| 40S ribosomal subunit protein S6, putative [Plasmodium chabaudi]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "D+G  +K  KK +S D  K DK     D  +KT    DK+++ +++  K E+ K ++K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|709368        96 DVGKKLK-VKKNISKDAKKNDKEKNSKDDKSKTKKNVDKKSEKSEKSKKVENKKVNEKQ
                  0 |.|...|-.||..|.|..|.||.....|...||.--.||.........|.|..|...|.
gi|491764        44 DLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTI--ADKQADTNQEQAKTEDAKRHDKE

gi|709368       154
                 59
gi|491764       101
""",
        )
        hit = hits[177]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68075857|ref|XP_679848.1|")
        self.assertEqual(hit.target.name, "XP_679848")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein PB104900.00.0 [Plasmodium berghei] >gi|56500688|emb|CAH97504.1| hypothetical protein PB104900.00.0 [Plasmodium berghei]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=340)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 23)
        self.assertEqual(hsp.annotations["positive"], 30)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 93, 134, 137, 159],
                          [ 37,  78,  78, 100]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 66))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({37: 'KLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAK...HDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({93: 'KLVSLGKAHVPKNDKTKEAMKSNNNKEDKKIDDNKEDKKTDDNKEDKKTDDNKE...DKK'}, length=340)",
        )
        self.assertEqual(hsp.target.id, "gi|68075857|ref|XP_679848.1|")
        self.assertEqual(hsp.target.name, "XP_679848")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein PB104900.00.0 [Plasmodium berghei] >gi|56500688|emb|CAH97504.1| hypothetical protein PB104900.00.0 [Plasmodium berghei]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "KL S+G          K+AM  +  K+DK   D     KT     DK+ D N+E  KT+D K   K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|680758        93 KLVSLGKAHVPKNDKTKEAMKSNNNKEDKKIDDNKEDKKTDDNKEDKKTDDNKEDKKTDD
                  0 ||.|.|..........|.||.....|.||...|.....||.---.||..|.|.|..||.|
gi|491764        37 KLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTI---ADKQADTNQEQAKTED

gi|680758       153 NKEDKK 159
                 60 .|...|  66
gi|491764        94 AKRHDK 100
""",
        )
        hit = hits[178]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|39594005|emb|CAE70115.1|")
        self.assertEqual(hit.target.name, "CAE70115")
        self.assertEqual(
            hit.target.description,
            "Hypothetical protein CBG16567 [Caenorhabditis briggsae]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=192)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 14)
        self.assertEqual(hsp.annotations["positive"], 24)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[140, 185],
                          [ 57, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 45))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({57: 'SDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({140: 'SDDSSSSDDSDDDSDSEAEEDTEKKASTEEDSGKRDDAEERTFER'}, length=192)",
        )
        self.assertEqual(hsp.target.id, "gi|39594005|emb|CAE70115.1|")
        self.assertEqual(hsp.target.name, "CAE70115")
        self.assertEqual(
            hsp.target.description,
            "Hypothetical protein CBG16567 [Caenorhabditis briggsae]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "SDD    D +  D+D  A+   +K+A T ++  K +DA+    E+"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|395940       140 SDDSSSSDDSDDDSDSEAEEDTEKKASTEEDSGKRDDAEERTFER 185
                  0 |||....|....|.|..|.....|.|.|.....|..||.....|.  45
gi|491764        57 SDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[179]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|66809957|ref|XP_638702.1|")
        self.assertEqual(hit.target.name, "XP_638702")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein DDB0185950 [Dictyostelium discoideum] >gi|60467300|gb|EAL65333.1| hypothetical protein DDB0185950 [Dictyostelium discoideum]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=721)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 27)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 23,  41,  41,  70],
                          [ 53,  71,  73, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 49))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({53: 'KKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({23: 'EQKMEVDEPKKDATASDSTTADLENKKESSGSDDTATTDVKKDDSKQ'}, length=721)",
        )
        self.assertEqual(hsp.target.id, "gi|66809957|ref|XP_638702.1|")
        self.assertEqual(hsp.target.name, "XP_638702")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein DDB0185950 [Dictyostelium discoideum] >gi|60467300|gb|EAL65333.1| hypothetical protein DDB0185950 [Dictyostelium discoideum]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++ M  DEPK+D T+ D+  T   + +K+  +  +   T D K+ D +Q",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|668099        23 EQKMEVDEPKKDATASDS--TTADLENKKESSGSDDTATTDVKKDDSKQ  70
                  0 ...|..||||.|.|..|.--|......|..........|.|.|..|..|  49
gi|491764        53 KKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[180]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68550463|ref|ZP_00589911.1|")
        self.assertEqual(hit.target.name, "ZP_00589911")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Pelodictyon phaeoclathratiforme BU-1] >gi|68242628|gb|EAN24841.1| Twin-arginine translocation protein TatA/E [Pelodictyon phaeoclathratiforme BU-1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=69)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 10)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 44, 54, 64],
                          [33, 58, 58, 68]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 45))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTS'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGAKKLPELARGLGKGMKEFKKAQTEIEEEFNSVVDEKPKKEKTA'}, length=69)",
        )
        self.assertEqual(hsp.target.id, "gi|68550463|ref|ZP_00589911.1|")
        self.assertEqual(hsp.target.name, "ZP_00589911")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Pelodictyon phaeoclathratiforme BU-1] >gi|68242628|gb|EAN24841.1| Twin-arginine translocation protein TatA/E [Pelodictyon phaeoclathratiforme BU-1]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG KKL  +   LG  +K FKKA +          D++PK++KT+"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|685504        19 FGAKKLPELARGLGKGMKEFKKAQTEIEEEFNSVVDEKPKKEKTA 64
                  0 ||.|||......||...|.||||..----------|..||..||. 45
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMS----------DDEPKQDKTS 68
""",
        )
        hit = hits[181]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|51473916|ref|YP_067673.1|")
        self.assertEqual(hit.target.name, "YP_067673")
        self.assertEqual(
            hit.target.description,
            "TatA/E-like Sec-independent protein translocase protein [Rickettsia typhi str. Wilmington] >gi|51460228|gb|AAU04191.1| TatA/E-like Sec-independent protein translocase protein [Rickettsia typhi str. Wilmington]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=53)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 18)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[18, 51],
                          [33, 66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 33))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({18: 'FGAGKLPQVMSDLAKGLKAFKEGMKDDGNDNDK'}, length=53)",
        )
        self.assertEqual(hsp.target.id, "gi|51473916|ref|YP_067673.1|")
        self.assertEqual(hsp.target.name, "YP_067673")
        self.assertEqual(
            hsp.target.description,
            "TatA/E-like Sec-independent protein translocase protein [Rickettsia typhi str. Wilmington] >gi|51460228|gb|AAU04191.1| TatA/E-like Sec-independent protein translocase protein [Rickettsia typhi str. Wilmington]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG  KL  + SDL   +K FK+ M DD    DK"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|514739        18 FGAGKLPQVMSDLAKGLKAFKEGMKDDGNDNDK 51
                  0 ||..||....|||....|.||..|.||....|| 33
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK 66
""",
        )
        hit = hits[182]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|61857708|ref|XP_612559.1|")
        self.assertEqual(hit.target.name, "XP_612559")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to acidic (leucine-rich) nuclear phosphoprotein 32 family, member A [Bos taurus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=236)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 13)
        self.assertEqual(hsp.annotations["positive"], 29)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[147, 169, 169, 196],
                          [ 50,  72,  74, 101]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 51))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({50: 'KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({147: 'EGYVEGLDDDEEDEDEEEYDEDAQVVEDEEDEEEEEEGEEEDVSGEEEE'}, length=236)",
        )
        self.assertEqual(hsp.target.id, "gi|61857708|ref|XP_612559.1|")
        self.assertEqual(hsp.target.name, "XP_612559")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to acidic (leucine-rich) nuclear phosphoprotein 32 family, member A [Bos taurus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+G+ + + DDE  +D+   D D  A+ + D++ +  +E+ + ED    ++E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|618577       147 EGYVEGLDDDEEDEDEEEYDED--AQVVEDEEDEEEEEEGEEEDVSGEEEE 196
                  0 .|......|||...|....|.|--|....|.......|....||......|  51
gi|491764        50 KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKE 101
""",
        )
        hit = hits[183]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|39982651|gb|AAR34111.1|")
        self.assertEqual(hit.target.name, "AAR34111")
        self.assertEqual(
            hit.target.description,
            "twin-arginine translocation protein, TatA/E family [Geobacter sulfurreducens PCA] >gi|39995887|ref|NP_951838.1| twin-arginine translocation protein, TatA/E family [Geobacter sulfurreducens PCA]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=59)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 19)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 49],
                          [33, 63]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 30))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGPGKLPQLGQSLGASIRNFKKASLEEPEK'}, length=59)",
        )
        self.assertEqual(hsp.target.id, "gi|39982651|gb|AAR34111.1|")
        self.assertEqual(hsp.target.name, "AAR34111")
        self.assertEqual(
            hsp.target.description,
            "twin-arginine translocation protein, TatA/E family [Geobacter sulfurreducens PCA] >gi|39995887|ref|NP_951838.1| twin-arginine translocation protein, TatA/E family [Geobacter sulfurreducens PCA]",
        )
        self.assertEqual(hsp.annotations["midline"], "FG  KL  +G  LGASI+ FKKA  ++  K")
        self.assertEqual(
            str(hsp),
            """\
gi|399826        19 FGPGKLPQLGQSLGASIRNFKKASLEEPEK 49
                  0 ||..||...|..|||||..||||......| 30
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPK 63
""",
        )
        hit = hits[184]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|50877509|emb|CAG37349.1|")
        self.assertEqual(hit.target.name, "CAG37349")
        self.assertEqual(
            hit.target.description,
            "related to Sec-independent protein translocase protein TatE [Desulfotalea psychrophila LSv54] >gi|51246472|ref|YP_066356.1| similar to Sec-independent protein translocase protein TatE [Desulfotalea psychrophila LSv54]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=66)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 24)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 47, 49, 60],
                          [33, 61, 61, 72]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 41))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDAD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGAGKLPEIGSGIGKGIKNFKEATKSEEAAKKIDKSEEKSE'}, length=66)",
        )
        self.assertEqual(hsp.target.id, "gi|50877509|emb|CAG37349.1|")
        self.assertEqual(hsp.target.name, "CAG37349")
        self.assertEqual(
            hsp.target.description,
            "related to Sec-independent protein translocase protein TatE [Desulfotalea psychrophila LSv54] >gi|51246472|ref|YP_066356.1| similar to Sec-independent protein translocase protein TatE [Desulfotalea psychrophila LSv54]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG  KL  IGS +G  IK FK+A   +E   K DK+ + ++"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|508775        19 FGAGKLPEIGSGIGKGIKNFKEATKSEEAAKKIDKSEEKSE 60
                  0 ||..||..|||..|..||.||.|....|--.|.||...... 41
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDE--PKQDKTSQDAD 72
""",
        )
        hit = hits[185]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|52699323|ref|ZP_00340731.1|")
        self.assertEqual(hit.target.name, "ZP_00340731")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Rickettsia akari str. Hartford]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=53)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 17)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[18, 51],
                          [33, 66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 33))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({18: 'FGAGKLPQVMSDLAKGLKAFKNGMQDDGSDNDK'}, length=53)",
        )
        self.assertEqual(hsp.target.id, "gi|52699323|ref|ZP_00340731.1|")
        self.assertEqual(hsp.target.name, "ZP_00340731")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Rickettsia akari str. Hartford]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG  KL  + SDL   +K FK  M DD    DK"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|526993        18 FGAGKLPQVMSDLAKGLKAFKNGMQDDGSDNDK 51
                  0 ||..||....|||....|.||..|.||....|| 33
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK 66
""",
        )
        hit = hits[186]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|62426215|ref|ZP_00381343.1|")
        self.assertEqual(hit.target.name, "ZP_00381343")
        self.assertEqual(
            hit.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Brevibacterium linens BL2]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=93)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 21)
        self.assertEqual(hsp.annotations["positive"], 34)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 18,  42,  46,  53,  57,  93],
                          [ 33,  57,  57,  64,  64, 100]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 75))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...HDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({18: 'FGAPKLPALARSLGQSMKIFKSEVKDLRDDDEPKKTEPGELNREATENDTSTTA...HEK'}, length=93)",
        )
        self.assertEqual(hsp.target.id, "gi|62426215|ref|ZP_00381343.1|")
        self.assertEqual(hsp.target.name, "ZP_00381343")
        self.assertEqual(
            hsp.target.description,
            "COG1826: Sec-independent protein secretion pathway components [Brevibacterium linens BL2]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG  KL ++   LG S+K FK  +     DDEPK+    +   +  +    T A+      Q   + +D + H+K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|624262        18 FGAPKLPALARSLGQSMKIFKSEVKDLRDDDEPKKTEPGELNREATENDTSTTAEAARKP
                  0 ||..||......||.|.|.||...----.|||||.----............|.|......
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAM----SDDEPKQ----DKTSQDADFTAKTIADKQADT

gi|624262        78 EQPAKEKQDPQSHEK  93
                 60 .|......|...|.|  75
gi|491764        85 NQEQAKTEDAKRHDK 100
""",
        )
        hit = hits[187]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|11131838|sp|Q9SLY8|CRTC_ORYSA")
        self.assertEqual(hit.target.name, "Q9SLY8")
        self.assertEqual(
            hit.target.description,
            "Calreticulin precursor >gi|6682833|dbj|BAA88900.1| calcium-binding protein [Oryza sativa]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=424)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 27)
        self.assertEqual(hsp.annotations["gaps"], 5)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[382, 401, 401, 423],
                          [ 54,  73,  78, 100]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 46))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({54: 'KAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({382: 'KAGEDDDDLDDEDAEDEDKADEKADSDAEDGKDSDDEKHDE'}, length=424)",
        )
        self.assertEqual(hsp.target.id, "gi|11131838|sp|Q9SLY8|CRTC_ORYSA")
        self.assertEqual(hsp.target.name, "Q9SLY8")
        self.assertEqual(
            hsp.target.description,
            "Calreticulin precursor >gi|6682833|dbj|BAA88900.1| calcium-binding protein [Oryza sativa]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "KA  DD+   D+ ++D D      AD++AD++ E  K  D ++HD+"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|111318       382 KAGEDDDDLDDEDAEDEDK-----ADEKADSDAEDGKDSDDEKHDE 423
                  0 ||..||....|....|.|.-----||..||...|..|..|...||.  46
gi|491764        54 KAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDK 100
""",
        )
        hit = hits[188]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|56543690|gb|AAV89844.1|")
        self.assertEqual(hit.target.name, "AAV89844")
        self.assertEqual(
            hit.target.description,
            "Sec-independent protein secretion pathway component [Zymomonas mobilis subsp. mobilis ZM4] >gi|56552116|ref|YP_162955.1| Sec-independent protein secretion pathway component [Zymomonas mobilis subsp. mobilis ZM4]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=87)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.55643)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 31)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 47],
                          [14, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 47))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGGMSITHWIVVAVVVMIFFGKGRFSDMMGDVAKGIKSFKKGMSEDD'}, length=87)",
        )
        self.assertEqual(hsp.target.id, "gi|56543690|gb|AAV89844.1|")
        self.assertEqual(hsp.target.name, "AAV89844")
        self.assertEqual(
            hsp.target.description,
            "Sec-independent protein secretion pathway component [Zymomonas mobilis subsp. mobilis ZM4] >gi|56552116|ref|YP_162955.1| Sec-independent protein secretion pathway component [Zymomonas mobilis subsp. mobilis ZM4]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MGG+SI   +++AV+V++ FG  +   +  D+   IK FKK MS+D+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|565436         0 MGGMSITHWIVVAVVVMIFFGKGRFSDMMGDVAKGIKSFKKGMSEDD 47
                  0 |||.||.............||.........|....||.|||.||.|. 47
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDE 61
""",
        )
        hit = hits[189]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67923730|ref|ZP_00517196.1|")
        self.assertEqual(hit.target.name, "ZP_00517196")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Crocosphaera watsonii WH 8501] >gi|67854438|gb|EAM49731.1| Twin-arginine translocation protein TatA/E [Crocosphaera watsonii WH 8501]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=95)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 35)
        self.assertEqual(hsp.annotations["gaps"], 9)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[21, 70, 79, 93],
                          [33, 82, 82, 96]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 72))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQ...DAK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({21: 'FGPKKLPEIGRSLGKAVRGFQDASKEFENEFKREAQQLEESVTMKAELEENKMA...TSE'}, length=95)",
        )
        self.assertEqual(hsp.target.id, "gi|67923730|ref|ZP_00517196.1|")
        self.assertEqual(hsp.target.name, "ZP_00517196")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Crocosphaera watsonii WH 8501] >gi|67854438|gb|EAM49731.1| Twin-arginine translocation protein TatA/E [Crocosphaera watsonii WH 8501]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "FG KKL  IG  LG +++GF+ A  + E +  + +Q  + +    A+ +          D NQ +  T+ ++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|679237        21 FGPKKLPEIGRSLGKAVRGFQDASKEFENEFKREAQQLEESVTMKAELEENKMANPTPMD
                  0 ||.|||..||..||....||..|....|.......|.........|...---------.|
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQ---------AD

gi|679237        81 NNQTKMNTQTSE 93
                 60 .||....|.... 72
gi|491764        84 TNQEQAKTEDAK 96
""",
        )
        hit = hits[190]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67462585|ref|XP_647954.1|")
        self.assertEqual(hit.target.name, "XP_647954")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein 707.t00002 [Entamoeba histolytica HM-1:IMSS] >gi|56463733|gb|EAL42569.1| hypothetical protein 707.t00002 [Entamoeba histolytica HM-1:IMSS]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=140)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 30)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 40,  67,  70,  95],
                          [ 50,  77,  77, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 55))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({50: 'KGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({40: 'KNYKKIKTQEENKEETKNEDENYKEKEEIKVLQKQIKRLEEEIKEYQAKRKEEEQ'}, length=140)",
        )
        self.assertEqual(hsp.target.id, "gi|67462585|ref|XP_647954.1|")
        self.assertEqual(hsp.target.name, "XP_647954")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein 707.t00002 [Entamoeba histolytica HM-1:IMSS] >gi|56463733|gb|EAL42569.1| hypothetical protein 707.t00002 [Entamoeba histolytica HM-1:IMSS]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "K +KK  + +E K++  ++D ++  K    +  KQ    +E+ K   AKR ++EQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|674625        40 KNYKKIKTQEENKEETKNEDENYKEKEEIKVLQKQIKRLEEEIKEYQAKRKEEEQ  95
                  0 |..||.....|.|......|.....|.---...||.....|..|...|||...||  55
gi|491764        50 KGFKKAMSDDEPKQDKTSQDADFTAKT---IADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[191]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|51970620|dbj|BAD44002.1|")
        self.assertEqual(hit.target.name, "BAD44002")
        self.assertEqual(
            hit.target.description, "unknown protein [Arabidopsis thaliana]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=784)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 21)
        self.assertEqual(hsp.annotations["positive"], 35)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[166, 186, 190, 216, 216, 232],
                          [ 38,  58,  58,  84,  86, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 68))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({38: 'LGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKT...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({166: 'LDSMGSELGDSRKKRKKKRSEEKQDHEDVDELANEDLEHEESEFSDEESEEEPV...KKK'}, length=784)",
        )
        self.assertEqual(hsp.target.id, "gi|51970620|dbj|BAD44002.1|")
        self.assertEqual(hsp.target.name, "BAD44002")
        self.assertEqual(
            hsp.target.description, "unknown protein [Arabidopsis thaliana]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "L S+GS+LG S K  KK  S    D E   +  ++D +      +D++++  +E     D KRH K++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|519706       166 LDSMGSELGDSRKKRKKKRSEEKQDHEDVDELANEDLEHEESEFSDEESE--EEPVGKRD
                  0 |.|.||.||.|.|..||..|----|.|........|.........|....--.|.....|
gi|491764        38 LGSIGSDLGASIKGFKKAMS----DDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTED

gi|519706       224 RKRHKKKK 232
                 60 .|||.|..  68
gi|491764        94 AKRHDKEQ 102
""",
        )
        hit = hits[192]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|34581241|ref|ZP_00142721.1|")
        self.assertEqual(hit.target.name, "ZP_00142721")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein [Rickettsia sibirica 246] >gi|53732344|ref|ZP_00154116.2| COG1826: Sec-independent protein secretion pathway components [Rickettsia rickettsii] >gi|28262626|gb|EAA26130.1| unknown [Rickettsia sibirica 246]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=53)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 17)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[18, 51],
                          [33, 66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 33))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({18: 'FGAGKLPQVMSDLAKGLKAFKDGMKDDGSDNDK'}, length=53)",
        )
        self.assertEqual(hsp.target.id, "gi|34581241|ref|ZP_00142721.1|")
        self.assertEqual(hsp.target.name, "ZP_00142721")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein [Rickettsia sibirica 246] >gi|53732344|ref|ZP_00154116.2| COG1826: Sec-independent protein secretion pathway components [Rickettsia rickettsii] >gi|28262626|gb|EAA26130.1| unknown [Rickettsia sibirica 246]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG  KL  + SDL   +K FK  M DD    DK"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|345812        18 FGAGKLPQVMSDLAKGLKAFKDGMKDDGSDNDK 51
                  0 ||..||....|||....|.||..|.||....|| 33
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK 66
""",
        )
        hit = hits[193]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|4877984|gb|AAD31522.1|")
        self.assertEqual(hit.target.name, "AAD31522")
        self.assertEqual(hit.target.description, "THA4 [Zea mays]")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=170)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 18)
        self.assertEqual(hsp.annotations["positive"], 33)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 83, 136],
                          [ 13,  66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 53))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({13: 'CMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({83: 'CLFGLGVPELAVIAGVAALVFGPKQLPEIGRSIGKTVKSFQQAAKEFETELKK'}, length=170)",
        )
        self.assertEqual(hsp.target.id, "gi|4877984|gb|AAD31522.1|")
        self.assertEqual(hsp.target.name, "AAD31522")
        self.assertEqual(hsp.target.description, "THA4 [Zea mays]")
        self.assertEqual(
            hsp.annotations["midline"],
            "C+ G+ + +L +IA +  L+FG K+L  IG  +G ++K F++A  + E +  K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|487798        83 CLFGLGVPELAVIAGVAALVFGPKQLPEIGRSIGKTVKSFQQAAKEFETELKK 136
                  0 |..|................||.|.|..||...|...|.|..|....|....|  53
gi|491764        13 CMGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK  66
""",
        )
        hit = hits[194]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|9757886|dbj|BAB08393.1|")
        self.assertEqual(hit.target.name, "BAB08393")
        self.assertEqual(
            hit.target.description,
            "unnamed protein product [Arabidopsis thaliana] >gi|15238687|ref|NP_197295.1| MA3 domain-containing protein [Arabidopsis thaliana]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=707)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 21)
        self.assertEqual(hsp.annotations["positive"], 35)
        self.assertEqual(hsp.annotations["gaps"], 6)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[146, 166, 170, 196, 196, 212],
                          [ 38,  58,  58,  84,  86, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 68))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({38: 'LGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKT...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({146: 'LDSMGSELGDSRKKRKKKRSEEKQDHEDVDELANEDLEHEESEFSDEESEEEPV...KKK'}, length=707)",
        )
        self.assertEqual(hsp.target.id, "gi|9757886|dbj|BAB08393.1|")
        self.assertEqual(hsp.target.name, "BAB08393")
        self.assertEqual(
            hsp.target.description,
            "unnamed protein product [Arabidopsis thaliana] >gi|15238687|ref|NP_197295.1| MA3 domain-containing protein [Arabidopsis thaliana]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "L S+GS+LG S K  KK  S    D E   +  ++D +      +D++++  +E     D KRH K++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|975788       146 LDSMGSELGDSRKKRKKKRSEEKQDHEDVDELANEDLEHEESEFSDEESE--EEPVGKRD
                  0 |.|.||.||.|.|..||..|----|.|........|.........|....--.|.....|
gi|491764        38 LGSIGSDLGASIKGFKKAMS----DDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTED

gi|975788       204 RKRHKKKK 212
                 60 .|||.|..  68
gi|491764        94 AKRHDKEQ 102
""",
        )
        hit = hits[195]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|32422107|ref|XP_331497.1|")
        self.assertEqual(hit.target.name, "XP_331497")
        self.assertEqual(
            hit.target.description,
            "predicted protein [Neurospora crassa] >gi|28919664|gb|EAA29078.1| predicted protein [Neurospora crassa]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=216)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 13)
        self.assertEqual(hsp.annotations["positive"], 26)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 41,  85],
                          [ 58, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 44))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({58: 'DDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({41: 'EDKEEEDKEEENKEEEDKEEEDKEEEDKEEEDKEEENKEEDKEE'}, length=216)",
        )
        self.assertEqual(hsp.target.id, "gi|32422107|ref|XP_331497.1|")
        self.assertEqual(hsp.target.name, "XP_331497")
        self.assertEqual(
            hsp.target.description,
            "predicted protein [Neurospora crassa] >gi|28919664|gb|EAA29078.1| predicted protein [Neurospora crassa]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "+D+ ++DK  ++ +   K   DK+ +  +E+ K E+ K  DKE+"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|324221        41 EDKEEEDKEEENKEEEDKEEEDKEEEDKEEEDKEEENKEEDKEE  85
                  0 .|....||.........|...||......|..|.|..|..|||.  44
gi|491764        58 DDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[196]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68552035|ref|ZP_00591428.1|")
        self.assertEqual(hit.target.name, "ZP_00591428")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Prosthecochloris aestuarii DSM 271] >gi|68241158|gb|EAN23426.1| Twin-arginine translocation protein TatA/E [Prosthecochloris aestuarii DSM 271]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=70)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 21)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 56],
                          [33, 70]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 37))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGAKKLPELAKGLGKGMKEFKKAQTEIEDEFNKAMSD'}, length=70)",
        )
        self.assertEqual(hsp.target.id, "gi|68552035|ref|ZP_00591428.1|")
        self.assertEqual(hsp.target.name, "ZP_00591428")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Prosthecochloris aestuarii DSM 271] >gi|68241158|gb|EAN23426.1| Twin-arginine translocation protein TatA/E [Prosthecochloris aestuarii DSM 271]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG KKL  +   LG  +K FKKA ++ E + +K   D"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|685520        19 FGAKKLPELAKGLGKGMKEFKKAQTEIEDEFNKAMSD 56
                  0 ||.|||......||...|.||||....|....|...| 37
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD 70
""",
        )
        hit = hits[197]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68177649|ref|ZP_00550794.1|")
        self.assertEqual(hit.target.name, "ZP_00550794")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Desulfuromonas acetoxidans DSM 684] >gi|67982303|gb|EAM71712.1| Twin-arginine translocation protein TatA/E [Desulfuromonas acetoxidans DSM 684]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=58)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 22)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 43, 45, 54],
                          [33, 57, 57, 66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 35))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGAKRLPQLGSGLGKGIKNFKQGIKENDTESLEDK'}, length=58)",
        )
        self.assertEqual(hsp.target.id, "gi|68177649|ref|ZP_00550794.1|")
        self.assertEqual(hsp.target.name, "ZP_00550794")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Desulfuromonas acetoxidans DSM 684] >gi|67982303|gb|EAM71712.1| Twin-arginine translocation protein TatA/E [Desulfuromonas acetoxidans DSM 684]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG K+L  +GS LG  IK FK+ +  +D E  +DK"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|681776        19 FGAKRLPQLGSGLGKGIKNFKQGIKENDTESLEDK 54
                  0 ||.|.|...||.||..||.||...--.|.|...|| 35
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAM--SDDEPKQDK 66
""",
        )
        hit = hits[198]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67934756|ref|ZP_00527782.1|")
        self.assertEqual(hit.target.name, "ZP_00527782")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Chlorobium phaeobacteroides DSM 266] >gi|67776249|gb|EAM35909.1| Twin-arginine translocation protein TatA/E [Chlorobium phaeobacteroides DSM 266]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=65)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 24)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 63],
                          [33, 77]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 44))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGAKKLPELARGLGRGMKEFKKAQTEIEEEFNKVVEEPPAKEKT'}, length=65)",
        )
        self.assertEqual(hsp.target.id, "gi|67934756|ref|ZP_00527782.1|")
        self.assertEqual(hsp.target.name, "ZP_00527782")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Chlorobium phaeobacteroides DSM 266] >gi|67776249|gb|EAM35909.1| Twin-arginine translocation protein TatA/E [Chlorobium phaeobacteroides DSM 266]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG KKL  +   LG  +K FKKA ++ E + +K  ++     KT"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|679347        19 FGAKKLPELARGLGRGMKEFKKAQTEIEEEFNKVVEEPPAKEKT 63
                  0 ||.|||......||...|.||||....|....|.........|| 44
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKT 77
""",
        )
        hit = hits[199]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|42550455|gb|EAA73298.1|")
        self.assertEqual(hit.target.name, "EAA73298")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein FG04514.1 [Gibberella zeae PH-1] >gi|46117344|ref|XP_384690.1| hypothetical protein FG04514.1 [Gibberella zeae PH-1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=297)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 22)
        self.assertEqual(hsp.annotations["positive"], 29)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[187, 251],
                          [ 37, 101]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 64))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({37: 'KLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAK...DKE'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({187: 'KLKSHGPDLPASQSFAKKHPRDSEDEDDVSSEEESDTDDDDDDDDDDDKTDEAK...DNE'}, length=297)",
        )
        self.assertEqual(hsp.target.id, "gi|42550455|gb|EAA73298.1|")
        self.assertEqual(hsp.target.name, "EAA73298")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein FG04514.1 [Gibberella zeae PH-1] >gi|46117344|ref|XP_384690.1| hypothetical protein FG04514.1 [Gibberella zeae PH-1]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "KL S G DL AS    KK   D E + D +S++   T     D   D   ++AK+E     D E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|425504       187 KLKSHGPDLPASQSFAKKHPRDSEDEDDVSSEEESDTDDDDDDDDDDDKTDEAKSEGDTA
                  0 ||.|.|.||.||....||...|.|...|..|.....|.....|...|.....||.|....
gi|491764        37 KLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKR

gi|425504       247 IDNE 251
                 60 .|.|  64
gi|491764        97 HDKE 101
""",
        )
        hit = hits[200]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|15893083|ref|NP_360797.1|")
        self.assertEqual(hit.target.name, "NP_360797")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein RC1160 [Rickettsia conorii str. Malish 7] >gi|15620287|gb|AAL03698.1| unknown [Rickettsia conorii str. Malish 7] >gi|25504411|pir||H97844 hypothetical protein RC1160 [imported] - Rickettsia conorii  (strain Malish 7) >gi|24212502|sp|Q92GG3|TATA_RICCN Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=53)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 17)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[18, 51],
                          [33, 66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 33))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({18: 'FGAGKLPQVMSDLAKGLKAFKDGMKDDGSDNDK'}, length=53)",
        )
        self.assertEqual(hsp.target.id, "gi|15893083|ref|NP_360797.1|")
        self.assertEqual(hsp.target.name, "NP_360797")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein RC1160 [Rickettsia conorii str. Malish 7] >gi|15620287|gb|AAL03698.1| unknown [Rickettsia conorii str. Malish 7] >gi|25504411|pir||H97844 hypothetical protein RC1160 [imported] - Rickettsia conorii  (strain Malish 7) >gi|24212502|sp|Q92GG3|TATA_RICCN Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG  KL  + SDL   +K FK  M DD    DK"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|158930        18 FGAGKLPQVMSDLAKGLKAFKDGMKDDGSDNDK 51
                  0 ||..||....|||....|.||..|.||....|| 33
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK 66
""",
        )
        hit = hits[201]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|57233621|ref|YP_182297.1|")
        self.assertEqual(hit.target.name, "YP_182297")
        self.assertEqual(
            hit.target.description,
            "twin-arginine translocation protein, TatA/E family [Dehalococcoides ethenogenes 195] >gi|57224069|gb|AAW39126.1| twin-arginine translocation protein, TatA/E family [Dehalococcoides ethenogenes 195]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=65)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 13)
        self.assertEqual(hsp.annotations["positive"], 23)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 56],
                          [33, 70]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 37))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGIGKLPQVGDAIGKGIRNFRKASSGEEEKEEVETKE'}, length=65)",
        )
        self.assertEqual(hsp.target.id, "gi|57233621|ref|YP_182297.1|")
        self.assertEqual(hsp.target.name, "YP_182297")
        self.assertEqual(
            hsp.target.description,
            "twin-arginine translocation protein, TatA/E family [Dehalococcoides ethenogenes 195] >gi|57224069|gb|AAW39126.1| twin-arginine translocation protein, TatA/E family [Dehalococcoides ethenogenes 195]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG  KL  +G  +G  I+ F+KA S +E K++  +++"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|572336        19 FGIGKLPQVGDAIGKGIRNFRKASSGEEEKEEVETKE 56
                  0 ||..||...|...|..|..|.||.|..|.|....... 37
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD 70
""",
        )
        hit = hits[202]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|75908036|ref|YP_322332.1|")
        self.assertEqual(hit.target.name, "YP_322332")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Anabaena variabilis ATCC 29413] >gi|75701761|gb|ABA21437.1| Twin-arginine translocation protein TatA/E [Anabaena variabilis ATCC 29413] >gi|53764126|ref|ZP_00159794.2| COG1826: Sec-independent protein secretion pathway components [Anabaena variabilis ATCC 29413]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=56)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 14)
        self.assertEqual(hsp.annotations["positive"], 24)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 43, 47, 56],
                          [33, 57, 57, 66]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 37))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDK'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGPKKIPELGSALGKTLRGFKEELKTPSEDTNPEEEK'}, length=56)",
        )
        self.assertEqual(hsp.target.id, "gi|75908036|ref|YP_322332.1|")
        self.assertEqual(hsp.target.name, "YP_322332")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Anabaena variabilis ATCC 29413] >gi|75701761|gb|ABA21437.1| Twin-arginine translocation protein TatA/E [Anabaena variabilis ATCC 29413] >gi|53764126|ref|ZP_00159794.2| COG1826: Sec-independent protein secretion pathway components [Anabaena variabilis ATCC 29413]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "FG KK+  +GS LG +++GFK+ +     D  P+++K"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|759080        19 FGPKKIPELGSALGKTLRGFKEELKTPSEDTNPEEEK 56
                  0 ||.||....||.||....|||...----.|..|...| 37
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAM----SDDEPKQDK 66
""",
        )
        hit = hits[203]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|72383453|ref|YP_292808.1|")
        self.assertEqual(hit.target.name, "YP_292808")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Prochlorococcus marinus str. NATL2A] >gi|72003303|gb|AAZ59105.1| Twin-arginine translocation protein TatA/E [Prochlorococcus marinus str. NATL2A]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=71)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 39)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 4, 70],
                          [16, 82]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 66))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({16: 'GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQD...DKQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({4: 'GVGLPEIAVIAGLALVIFGPKRLPELGRTIGKTLKGLQSASTEFEREIKNAMTE...DKE'}, length=71)",
        )
        self.assertEqual(hsp.target.id, "gi|72383453|ref|YP_292808.1|")
        self.assertEqual(hsp.target.name, "YP_292808")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Prochlorococcus marinus str. NATL2A] >gi|72003303|gb|AAZ59105.1| Twin-arginine translocation protein TatA/E [Prochlorococcus marinus str. NATL2A]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "G+ + ++ +IA + +++FG K+L  +G  +G ++KG + A ++ E +      + +   + IADK+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|723834         4 GVGLPEIAVIAGLALVIFGPKRLPELGRTIGKTLKGLQSASTEFEREIKNAMTEEESANE
                  0 |................||.|.|...|...|...||...|....|...............
gi|491764        16 GISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAK

gi|723834        64 NIADKE 70
                 60 .||||. 66
gi|491764        76 TIADKQ 82
""",
        )
        hit = hits[204]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|1666185|emb|CAB04766.1|")
        self.assertEqual(hit.target.name, "CAB04766")
        self.assertEqual(
            hit.target.description,
            "ORF13(1) [Rhodococcus erythropolis] >gi|9979018|sp|P72267|TATA_RHOER Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=98)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 25)
        self.assertEqual(hsp.annotations["positive"], 35)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 0, 40, 43, 60],
                          [14, 54, 54, 71]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 60))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({0: 'MGAMSPWHWAIVALVVVILFGSKKLPDAARGLGRSLRIFKSEVKEMQNDNSTPAPTAQSA'}, length=98)",
        )
        self.assertEqual(hsp.target.id, "gi|1666185|emb|CAB04766.1|")
        self.assertEqual(hsp.target.name, "CAB04766")
        self.assertEqual(
            hsp.target.description,
            "ORF13(1) [Rhodococcus erythropolis] >gi|9979018|sp|P72267|TATA_RHOER Sec-independent protein translocase protein tatA/E homolog",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "MG +S W   I+A++VV+LFG+KKL      LG S++ FK   K M +D      T+Q A",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|166618         0 MGAMSPWHWAIVALVVVILFGSKKLPDAARGLGRSLRIFKSEVKEMQNDNSTPAPTAQSA
                  0 ||..|.|............||.|||......||.|...||---|.|..|......|.|.|
gi|491764        14 MGGISIWQXXXXXXXXXXXFGTKKLGSIGSDLGASIKGFK---KAMSDDEPKQDKTSQDA

gi|166618        60 
                 60 
gi|491764        71 
""",
        )
        hit = hits[205]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|72138252|ref|XP_800288.1|")
        self.assertEqual(hit.target.name, "XP_800288")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: hypothetical protein XP_795195 [Strongylocentrotus purpuratus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=946)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.95088)
        self.assertEqual(hsp.annotations["identity"], 13)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[854, 898],
                          [ 58, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 44))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({58: 'DDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({854: 'EDQDKEDKDEEDKDEEDKDKEDKDAEEEEEEDNADEEEDADKDE'}, length=946)",
        )
        self.assertEqual(hsp.target.id, "gi|72138252|ref|XP_800288.1|")
        self.assertEqual(hsp.target.name, "XP_800288")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: hypothetical protein XP_795195 [Strongylocentrotus purpuratus]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "+D+ K+DK  +D D   K   DK A+  +E+   ++ +  DK++"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|721382       854 EDQDKEDKDEEDKDEEDKDKEDKDAEEEEEEDNADEEEDADKDE 898
                  0 .|..|.||...|.|...|...||.|....|..........||..  44
gi|491764        58 DDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )
        hit = hits[206]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67923190|ref|ZP_00516678.1|")
        self.assertEqual(hit.target.name, "ZP_00516678")
        self.assertEqual(
            hit.target.description,
            "Twin-arginine translocation protein TatA/E [Crocosphaera watsonii WH 8501] >gi|67854976|gb|EAM50247.1| Twin-arginine translocation protein TatA/E [Crocosphaera watsonii WH 8501]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=50)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 70.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.5722)
        self.assertAlmostEqual(hsp.annotations["evalue"], 7.7721)
        self.assertEqual(hsp.annotations["identity"], 11)
        self.assertEqual(hsp.annotations["positive"], 23)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[19, 50],
                          [33, 64]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 31))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({33: 'FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({19: 'FGPKKIPELGSSLGKTLRGFKEGVNNPKDEE'}, length=50)",
        )
        self.assertEqual(hsp.target.id, "gi|67923190|ref|ZP_00516678.1|")
        self.assertEqual(hsp.target.name, "ZP_00516678")
        self.assertEqual(
            hsp.target.description,
            "Twin-arginine translocation protein TatA/E [Crocosphaera watsonii WH 8501] >gi|67854976|gb|EAM50247.1| Twin-arginine translocation protein TatA/E [Crocosphaera watsonii WH 8501]",
        )
        self.assertEqual(hsp.annotations["midline"], "FG KK+  +GS LG +++GFK+ +++ + ++")
        self.assertEqual(
            str(hsp),
            """\
gi|679231        19 FGPKKIPELGSSLGKTLRGFKEGVNNPKDEE 50
                  0 ||.||....||.||....|||.......... 31
gi|491764        33 FGTKKLGSIGSDLGASIKGFKKAMSDDEPKQ 64
""",
        )
        hit = hits[207]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|3329623|gb|AAC26930.1|")
        self.assertEqual(hit.target.name, "AAC26930")
        self.assertEqual(
            hit.target.description,
            "Hypothetical protein F36H12.3 [Caenorhabditis elegans] >gi|17540204|ref|NP_500767.1| F36H12.3 [Caenorhabditis elegans]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=335)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 70.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.5722)
        self.assertAlmostEqual(hsp.annotations["evalue"], 7.7721)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 31)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 74, 141],
                          [ 35, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 67))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({35: 'TKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQ...KEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({74: 'SKKSEGKKSDKKEEKKEEKKEEKEDKKEEKKEEKKEDDKKDEKKDEKKDEKEED...KEK'}, length=335)",
        )
        self.assertEqual(hsp.target.id, "gi|3329623|gb|AAC26930.1|")
        self.assertEqual(hsp.target.name, "AAC26930")
        self.assertEqual(
            hsp.target.description,
            "Hypothetical protein F36H12.3 [Caenorhabditis elegans] >gi|17540204|ref|NP_500767.1| F36H12.3 [Caenorhabditis elegans]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+KK     SD     K  KK   +D+ ++ K  +  D       D++ D  +E  K+ED K  +KE+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|332962        74 SKKSEGKKSDKKEEKKEEKKEEKEDKKEEKKEEKKEDDKKDEKKDEKKDEKEEDKKSEDK
                  0 .||.....||.....|..||....|.....|.....|.......|...|...|..|.||.
gi|491764        35 TKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDA

gi|332962       134 KEDEKEK 141
                 60 |...||.  67
gi|491764        95 KRHDKEQ 102
""",
        )
        hit = hits[208]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|39597929|emb|CAE68621.1|")
        self.assertEqual(hit.target.name, "CAE68621")
        self.assertEqual(
            hit.target.description,
            "Hypothetical protein CBG14505 [Caenorhabditis briggsae]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=2691)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 70.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.5722)
        self.assertAlmostEqual(hsp.annotations["evalue"], 7.7721)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 27)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[1678, 1705, 1709, 1730],
                          [  54,   81,   81,  102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 52))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({54: 'KAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1678: 'KDESEEKNKEDNMEESKDFTEMTVDNTISLGECSTTQYEEKTIDIDEHEEEQ'}, length=2691)",
        )
        self.assertEqual(hsp.target.id, "gi|39597929|emb|CAE68621.1|")
        self.assertEqual(hsp.target.name, "CAE68621")
        self.assertEqual(
            hsp.target.description,
            "Hypothetical protein CBG14505 [Caenorhabditis briggsae]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "K  S+++ K+D   +  DFT  T+ +     +  T Q + KT D   H++EQ",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|395979      1678 KDESEEKNKEDNMEESKDFTEMTVDNTISLGECSTTQYEEKTIDIDEHEEEQ 1730
                  0 |..|....|.|......|||..|....----...|.|...||.|...|..||   52
gi|491764        54 KAMSDDEPKQDKTSQDADFTAKTIADK----QADTNQEQAKTEDAKRHDKEQ  102
""",
        )
        hit = hits[209]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68182025|ref|ZP_00555006.1|")
        self.assertEqual(hit.target.name, "ZP_00555006")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein JannDRAFT_2282 [Jannaschia sp. CCS1] >gi|67977679|gb|EAM67298.1| hypothetical protein JannDRAFT_2282 [Jannaschia sp. CCS1]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=438)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 70.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.5722)
        self.assertAlmostEqual(hsp.annotations["evalue"], 7.7721)
        self.assertEqual(hsp.annotations["identity"], 14)
        self.assertEqual(hsp.annotations["positive"], 28)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[234, 288],
                          [ 38,  92]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 54))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({38: 'LGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKT'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({234: 'VGAVDQDMDPEARDTDASAADDETISDETTYDDDAEAEAAHDETVEDDTEQTET'}, length=438)",
        )
        self.assertEqual(hsp.target.id, "gi|68182025|ref|ZP_00555006.1|")
        self.assertEqual(hsp.target.name, "ZP_00555006")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein JannDRAFT_2282 [Jannaschia sp. CCS1] >gi|67977679|gb|EAM67298.1| hypothetical protein JannDRAFT_2282 [Jannaschia sp. CCS1]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+G++  D+    +    + +DDE   D+T+ D D  A+   D+  + + EQ +T",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|681820       234 VGAVDQDMDPEARDTDASAADDETISDETTYDDDAEAEAAHDETVEDDTEQTET 288
                  0 .|....|.............|||...|.|..|.|..|....|.......||..|  54
gi|491764        38 LGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKT  92
""",
        )
        hit = hits[210]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|21204492|dbj|BAB95189.1|")
        self.assertEqual(hit.target.name, "BAB95189")
        self.assertEqual(
            hit.target.description,
            "ebh [Staphylococcus aureus subsp. aureus MW2] >gi|21283053|ref|NP_646141.1| hypothetical protein MW1324 [Staphylococcus aureus subsp. aureus MW2]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=9904)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 70.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.5722)
        self.assertAlmostEqual(hsp.annotations["evalue"], 7.7721)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 36)
        self.assertEqual(hsp.annotations["gaps"], 12)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[5269, 5295, 5305, 5313, 5315, 5342],
                          [  34,   60,   60,   68,   68,   95]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 73))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({34: 'GTKKLGSIGSDLGASIKGFKKAMSDDEPKQDKTSQDADFTAKTIADKQADTNQE...EDA'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({5269: 'GVNQVSTTASELNTAMSNLQRGINDEAATKAAQKYTDADRDKQTAYNDAVTAAK...EQA'}, length=9904)",
        )
        self.assertEqual(hsp.target.id, "gi|21204492|dbj|BAB95189.1|")
        self.assertEqual(hsp.target.name, "BAB95189")
        self.assertEqual(
            hsp.target.description,
            "ebh [Staphylococcus aureus subsp. aureus MW2] >gi|21283053|ref|NP_646141.1| hypothetical protein MW1324 [Staphylococcus aureus subsp. aureus MW2]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "G  ++ +  S+L  ++   ++ ++D+          +  +DK +   DA   AKT+ DK A TN+ +A  E A",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|212044      5269 GVNQVSTTASELNTAMSNLQRGINDEAATKAAQKYTDADRDKQTAYNDAVTAAKTLLDKT
                  0 |........|.|............|.----------....||..--.||...|||..||.
gi|491764        34 GTKKLGSIGSDLGASIKGFKKAMSDD----------EPKQDKTS--QDADFTAKTIADKQ

gi|212044      5329 AGTNENKAAVEQA 5342
                 60 |.||...|..|.|   73
gi|491764        82 ADTNQEQAKTEDA   95
""",
        )
        hit = hits[211]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|39593039|emb|CAE64508.1|")
        self.assertEqual(hit.target.name, "CAE64508")
        self.assertEqual(
            hit.target.description,
            "Hypothetical protein CBG09238 [Caenorhabditis briggsae]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=960)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 70.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.5722)
        self.assertAlmostEqual(hsp.annotations["evalue"], 7.7721)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 33)
        self.assertEqual(hsp.annotations["gaps"], 4)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[409, 420, 423, 441, 441, 459],
                          [ 54,  65,  65,  83,  84, 102]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 51))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({54: 'KAMSDDEPKQDKTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ'}, length=103)",
        )
        self.assertEqual(hsp.query.id, "gi|49176427|ref|NP_418280.3|")
        self.assertEqual(
            hsp.query.description,
            "component of Sec-independent translocase [Escherichia coli K12]",
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({409: 'KKEADDKAKKDLEAKTKKEADEKAKKEADEKAKKEAEAKTKEAEAKTKKE'}, length=960)",
        )
        self.assertEqual(hsp.target.id, "gi|39593039|emb|CAE64508.1|")
        self.assertEqual(hsp.target.name, "CAE64508")
        self.assertEqual(
            hsp.target.description,
            "Hypothetical protein CBG09238 [Caenorhabditis briggsae]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "K  +DD+ K+D   KT ++AD  AK  AD++A   + +AKT++A+   K++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|395930       409 KKEADDKAKKDLEAKTKKEADEKAKKEADEKA-KKEAEAKTKEAEAKTKKE 459
                  0 |...||..|.|---||...||..||..||..|-.....|||..|....|..  51
gi|491764        54 KAMSDDEPKQD---KTSQDADFTAKTIADKQADTNQEQAKTEDAKRHDKEQ 102
""",
        )

    def test_xml_2212L_blastn_001(self):
        """Parsing BLASTP 2.2.1N (xml_2212L_blastn_001.xml)."""
        filename = "xml_2212L_blastn_001.xml"
        datafile = os.path.join("Blast", filename)
        with open(datafile, "rb") as handle:
            records = Blast.parse(handle)
            self.assertEqual(records.program, "blastn")
            self.assertEqual(records.version, "BLASTN 2.2.12 [Aug-07-2005]")
            self.assertEqual(
                records.reference,
                'Altschul, Stephen F., Thomas L. Madden, Alejandro A. SchÃ¤ffer, Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), "Gapped BLAST and PSI-BLAST: a new generation of protein database search programs", Nucleic Acids Res. 25:3389-3402.',
            )
            self.assertEqual(records.db, "nr")
            self.assertIsInstance(records.query, SeqRecord)
            self.assertEqual(records.query.id, "gi|1348916|gb|G26684.1|G26684")
            self.assertEqual(
                records.query.description, "human STS STS_D11570, sequence tagged site"
            )
            self.assertEqual(repr(records.query.seq), "Seq(None, length=285)")
            self.assertEqual(len(records.param), 5)
            self.assertAlmostEqual(records.param["expect"], 10.0)
            self.assertEqual(records.param["sc-match"], 1)
            self.assertEqual(records.param["sc-mismatch"], -3)
            self.assertEqual(records.param["gap-open"], 5)
            self.assertEqual(records.param["gap-extend"], 2)
            record = next(records)
            self.assertRaises(StopIteration, next, records)
        self.check_xml_2212L_blastn_001(record)

        with open(datafile, "rb") as handle:
            record = Blast.read(handle)
            self.check_xml_2212L_blastn_001(record)

    def check_xml_2212L_blastn_001(self, record):
        self.assertEqual(record.num, 1)
        self.assertIsInstance(record.query, SeqRecord)
        self.assertEqual(record.query.id, "gi|1348916|gb|G26684.1|G26684")
        self.assertEqual(
            record.query.description, "human STS STS_D11570, sequence tagged site"
        )
        self.assertEqual(repr(record.query.seq), "Seq(None, length=285)")
        self.assertEqual(len(record.stat), 7)
        self.assertEqual(record.stat["db-num"], 371021)
        self.assertEqual(record.stat["db-len"], 1233631384)
        self.assertEqual(record.stat["hsp-len"], 0)
        self.assertAlmostEqual(record.stat["eff-space"], 0)
        self.assertAlmostEqual(record.stat["kappa"], 0.710603)
        self.assertAlmostEqual(record.stat["lambda"], 1.37406)
        self.assertAlmostEqual(record.stat["entropy"], 1.30725)
        hits = record.hits
        self.assertEqual(len(hits), 2)

        hit = hits[0]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|9950606|gb|AE004854.1|")
        self.assertEqual(hit.target.name, "AE004854")
        self.assertEqual(
            hit.target.description,
            "Pseudomonas aeruginosa PAO1, section 415 of 529 of the complete genome",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=11884)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 19.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 38.1576)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.0598)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 19)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[6011, 6030],
                          [  67,   86]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["frame"], 1)
        self.assertEqual(hsp.shape, (2, 19))
        self.assertEqual(
            repr(hsp.query.seq), "Seq({67: 'CAGGCCAGCGACTTCTGGG'}, length=285)"
        )
        self.assertEqual(hsp.query.id, "gi|1348916|gb|G26684.1|G26684")
        self.assertEqual(
            hsp.query.description, "human STS STS_D11570, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq), "Seq({6011: 'CAGGCCAGCGACTTCTGGG'}, length=11884)"
        )
        self.assertEqual(hsp.target.id, "gi|9950606|gb|AE004854.1|")
        self.assertEqual(hsp.target.name, "AE004854")
        self.assertEqual(
            hsp.target.description,
            "Pseudomonas aeruginosa PAO1, section 415 of 529 of the complete genome",
        )
        self.assertEqual(hsp.annotations["midline"], "|||||||||||||||||||")
        self.assertEqual(
            str(hsp),
            """\
gi|995060      6011 CAGGCCAGCGACTTCTGGG 6030
                  0 |||||||||||||||||||   19
gi|134891        67 CAGGCCAGCGACTTCTGGG   86
""",
        )
        hit = hits[1]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|15073988|emb|AL591786.1|SME591786")
        self.assertEqual(hit.target.name, "AL591786")
        self.assertEqual(
            hit.target.description,
            "Sinorhizobium meliloti 1021 complete chromosome; segment 5/12",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=299350)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 18.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 36.1753)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.18768)
        self.assertEqual(hsp.annotations["identity"], 20)
        self.assertEqual(hsp.annotations["positive"], 20)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[83648, 83627],
                          [  203,   224]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["frame"], -1)
        self.assertEqual(hsp.shape, (2, 21))
        self.assertEqual(
            repr(hsp.query.seq), "Seq({203: 'TGAAAGGAAATNAAAATGGAA'}, length=285)"
        )
        self.assertEqual(hsp.query.id, "gi|1348916|gb|G26684.1|G26684")
        self.assertEqual(
            hsp.query.description, "human STS STS_D11570, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq), "Seq({83627: 'TTCCATTTTGATTTCCTTTCA'}, length=299350)"
        )
        self.assertEqual(hsp.target.id, "gi|15073988|emb|AL591786.1|SME591786")
        self.assertEqual(hsp.target.name, "AL591786")
        self.assertEqual(
            hsp.target.description,
            "Sinorhizobium meliloti 1021 complete chromosome; segment 5/12",
        )
        self.assertEqual(hsp.annotations["midline"], "||||||||||| |||||||||")
        self.assertEqual(
            str(hsp),
            """\
gi|150739     83648 TGAAAGGAAATCAAAATGGAA 83627
                  0 |||||||||||.|||||||||    21
gi|134891       203 TGAAAGGAAATNAAAATGGAA   224
""",
        )

    def test_xml_2212L_blastx_001(self):
        """Parsing BLASTX 2.2.12 (xml_2212L_blastx_001.xml)."""
        filename = "xml_2212L_blastx_001.xml"
        datafile = os.path.join("Blast", filename)
        with open(datafile, "rb") as handle:
            records = Blast.parse(handle)
            self.assertEqual(records.program, "blastx")
            self.assertEqual(records.version, "BLASTX 2.2.12 [Aug-07-2005]")
            self.assertEqual(
                records.reference,
                'Altschul, Stephen F., Thomas L. Madden, Alejandro A. SchÃ¤ffer, Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), "Gapped BLAST and PSI-BLAST: a new generation of protein database search programs", Nucleic Acids Res. 25:3389-3402.',
            )
            self.assertEqual(records.db, "nr")
            self.assertIsInstance(records.query, SeqRecord)
            self.assertEqual(records.query.id, "gi|1347369|gb|G25137.1|G25137")
            self.assertEqual(
                records.query.description, "human STS EST48004, sequence tagged site"
            )
            self.assertEqual(repr(records.query.seq), "Seq(None, length=556)")
            self.assertEqual(len(records.param), 5)
            self.assertEqual(records.param["matrix"], "BLOSUM62")
            self.assertAlmostEqual(records.param["expect"], 10.0)
            self.assertEqual(records.param["gap-open"], 11)
            self.assertEqual(records.param["gap-extend"], 1)
            self.assertEqual(records.param["filter"], "L;")
            record = next(records)
            self.assertRaises(StopIteration, next, records)
        self.check_xml_2212L_blastx_001(record)

        with open(datafile, "rb") as handle:
            record = Blast.read(handle)
            self.check_xml_2212L_blastx_001(record)

    def check_xml_2212L_blastx_001(self, record):
        self.assertEqual(record.num, 1)
        self.assertIsInstance(record.query, SeqRecord)
        self.assertEqual(record.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            record.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(repr(record.query.seq), "Seq(None, length=556)")
        self.assertEqual(len(record.stat), 7)
        self.assertEqual(record.stat["db-num"], 2934173)
        self.assertEqual(record.stat["db-len"], 1011751523)
        self.assertEqual(record.stat["hsp-len"], 0)
        self.assertAlmostEqual(record.stat["eff-space"], 0)
        self.assertAlmostEqual(record.stat["kappa"], 0.041)
        self.assertAlmostEqual(record.stat["lambda"], 0.267)
        self.assertAlmostEqual(record.stat["entropy"], 0.14)
        hits = record.hits
        self.assertEqual(len(hits), 78)

        hit = hits[0]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|12654095|gb|AAH00859.1|")
        self.assertEqual(hit.target.name, "AAH00859")
        self.assertEqual(
            hit.target.description, "Unknown (protein for IMAGE:3459481) [Homo sapiens]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=319)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 630.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 247.284)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.69599e-64)
        self.assertEqual(hsp.annotations["identity"], 122)
        self.assertEqual(hsp.annotations["positive"], 123)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[155, 288],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 155)
        self.assertEqual(hsp.target.annotations["end"], 288)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({155: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=319)",
        )
        self.assertEqual(hsp.target.id, "gi|12654095|gb|AAH00859.1|")
        self.assertEqual(hsp.target.name, "AAH00859")
        self.assertEqual(
            hsp.target.description, "Unknown (protein for IMAGE:3459481) [Homo sapiens]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERF GPYTDFTP TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|126540       155 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|126540       215 NKKAFDKFKKEHGVVPQADNATPSERFEGPYTDFTPWTTEEQKLLEQALKTYPVNTPERW
                 60 |||||||||||||||||||||||||||.||||||||.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|126540       275 EKIAEAVPGRTKK 288
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[1]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|51493021|ref|XP_168590.4|")
        self.assertEqual(hit.target.name, "XP_168590")
        self.assertEqual(
            hit.target.description, "PREDICTED: zuotin related factor 1 [Homo sapiens]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=520)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 630.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 247.284)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.69599e-64)
        self.assertEqual(hsp.annotations["identity"], 122)
        self.assertEqual(hsp.annotations["positive"], 123)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[356, 489],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 356)
        self.assertEqual(hsp.target.annotations["end"], 489)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({356: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=520)",
        )
        self.assertEqual(hsp.target.id, "gi|51493021|ref|XP_168590.4|")
        self.assertEqual(hsp.target.name, "XP_168590")
        self.assertEqual(
            hsp.target.description, "PREDICTED: zuotin related factor 1 [Homo sapiens]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERF GPYTDFTP TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|514930       356 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|514930       416 NKKAFDKFKKEHGVVPQADNATPSERFEGPYTDFTPWTTEEQKLLEQALKTYPVNTPERW
                 60 |||||||||||||||||||||||||||.||||||||.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|514930       476 EKIAEAVPGRTKK 489
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[2]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|51492817|ref|XP_379909.2|")
        self.assertEqual(hit.target.name, "XP_379909")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to Zuotin related factor-1 (M-phase phosphoprotein 11) [Homo sapiens]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=584)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 630.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 247.284)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.69599e-64)
        self.assertEqual(hsp.annotations["identity"], 122)
        self.assertEqual(hsp.annotations["positive"], 123)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[415, 548],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 415)
        self.assertEqual(hsp.target.annotations["end"], 548)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({415: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=584)",
        )
        self.assertEqual(hsp.target.id, "gi|51492817|ref|XP_379909.2|")
        self.assertEqual(hsp.target.name, "XP_379909")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to Zuotin related factor-1 (M-phase phosphoprotein 11) [Homo sapiens]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERF GPYTDFTP TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|514928       415 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|514928       475 NKKAFDKFKKEHGVVPQADNATPSERFEGPYTDFTPWTTEEQKLLEQALKTYPVNTPERW
                 60 |||||||||||||||||||||||||||.||||||||.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|514928       535 EKIAEAVPGRTKK 548
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[3]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67968477|dbj|BAE00600.1|")
        self.assertEqual(hit.target.name, "BAE00600")
        self.assertEqual(
            hit.target.description, "unnamed protein product [Macaca fascicularis]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=621)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 625.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 245.358)
        self.assertAlmostEqual(hsp.annotations["evalue"], 6.44477e-64)
        self.assertEqual(hsp.annotations["identity"], 121)
        self.assertEqual(hsp.annotations["positive"], 122)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[457, 590],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 457)
        self.assertEqual(hsp.target.annotations["end"], 590)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({457: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=621)",
        )
        self.assertEqual(hsp.target.id, "gi|67968477|dbj|BAE00600.1|")
        self.assertEqual(hsp.target.name, "BAE00600")
        self.assertEqual(
            hsp.target.description, "unnamed protein product [Macaca fascicularis]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNA PSERF GPYTDFTP TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|679684       457 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|679684       517 NKKAFDKFKKEHGVVPQADNAAPSERFEGPYTDFTPWTTEEQKLLEQALKTYPVNTPERW
                 60 |||||||||||||||||||||.|||||.||||||||.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|679684       577 EKIAEAVPGRTKK 590
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[4]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|1770454|emb|CAA66913.1|")
        self.assertEqual(hit.target.name, "CAA66913")
        self.assertEqual(
            hit.target.description, "M-phase phosphoprotein 11 [Homo sapiens]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=582)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 622.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 244.202)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.43575e-63)
        self.assertEqual(hsp.annotations["identity"], 121)
        self.assertEqual(hsp.annotations["positive"], 122)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[418, 551],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 418)
        self.assertEqual(hsp.target.annotations["end"], 551)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({418: 'DLQLLIKAVNLFPARTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=582)",
        )
        self.assertEqual(hsp.target.id, "gi|1770454|emb|CAA66913.1|")
        self.assertEqual(hsp.target.name, "CAA66913")
        self.assertEqual(
            hsp.target.description, "M-phase phosphoprotein 11 [Homo sapiens]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPA TNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERF GPYTDFTP TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|177045       418 DLQLLIKAVNLFPARTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||.|||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|177045       478 NKKAFDKFKKEHGVVPQADNATPSERFEGPYTDFTPWTTEEQKLLEQALKTYPVNTPERW
                 60 |||||||||||||||||||||||||||.||||||||.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|177045       538 EKIAEAVPGRTKK 551
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[5]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|12230855|sp|Q99543|ZRF1_HUMAN")
        self.assertEqual(hit.target.name, "Q99543")
        self.assertEqual(
            hit.target.description,
            "Zuotin-related factor 1 (M-phase phosphoprotein 11)",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=568)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 622.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 244.202)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.43575e-63)
        self.assertEqual(hsp.annotations["identity"], 121)
        self.assertEqual(hsp.annotations["positive"], 122)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[404, 537],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 404)
        self.assertEqual(hsp.target.annotations["end"], 537)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({404: 'DLQLLIKAVNLFPARTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=568)",
        )
        self.assertEqual(hsp.target.id, "gi|12230855|sp|Q99543|ZRF1_HUMAN")
        self.assertEqual(hsp.target.name, "Q99543")
        self.assertEqual(
            hsp.target.description,
            "Zuotin-related factor 1 (M-phase phosphoprotein 11)",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPA TNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERF GPYTDFTP TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|122308       404 DLQLLIKAVNLFPARTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||.|||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|122308       464 NKKAFDKFKKEHGVVPQADNATPSERFEGPYTDFTPWTTEEQKLLEQALKTYPVNTPERW
                 60 |||||||||||||||||||||||||||.||||||||.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|122308       524 EKIAEAVPGRTKK 537
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[6]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|76615186|ref|XP_584591.2|")
        self.assertEqual(hit.target.name, "XP_584591")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 2 isoform 2 isoform 1 [Bos taurus] >gi|76615184|ref|XP_871283.1| PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 2 isoform 2 isoform 2 [Bos taurus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=475)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 621.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 243.817)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.87514e-63)
        self.assertEqual(hsp.annotations["identity"], 121)
        self.assertEqual(hsp.annotations["positive"], 122)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[311, 444],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 311)
        self.assertEqual(hsp.target.annotations["end"], 444)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({311: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=475)",
        )
        self.assertEqual(hsp.target.id, "gi|76615186|ref|XP_584591.2|")
        self.assertEqual(hsp.target.name, "XP_584591")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 2 isoform 2 isoform 1 [Bos taurus] >gi|76615184|ref|XP_871283.1| PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 2 isoform 2 isoform 2 [Bos taurus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERF GP TDFTP TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|766151       311 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|766151       371 NKKAFDKFKKEHGVVPQADNATPSERFEGPCTDFTPWTTEEQKLLEQALKTYPVNTPERW
                 60 |||||||||||||||||||||||||||.||.|||||.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|766151       431 EKIAEAVPGRTKK 444
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[7]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|73981816|ref|XP_540394.2|")
        self.assertEqual(hit.target.name, "XP_540394")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 2 isoform 2 isoform 2 [Canis familiaris]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=508)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 621.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 243.817)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.87514e-63)
        self.assertEqual(hsp.annotations["identity"], 121)
        self.assertEqual(hsp.annotations["positive"], 122)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[344, 477],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 344)
        self.assertEqual(hsp.target.annotations["end"], 477)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({344: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=508)",
        )
        self.assertEqual(hsp.target.id, "gi|73981816|ref|XP_540394.2|")
        self.assertEqual(hsp.target.name, "XP_540394")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 2 isoform 2 isoform 2 [Canis familiaris]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERF GP TDFTP TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|739818       344 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|739818       404 NKKAFDKFKKEHGVVPQADNATPSERFEGPCTDFTPWTTEEQKLLEQALKTYPVNTPERW
                 60 |||||||||||||||||||||||||||.||.|||||.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|739818       464 EKIAEAVPGRTKK 477
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[8]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|73981814|ref|XP_849517.1|")
        self.assertEqual(hit.target.name, "XP_849517")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 2 isoform 2 isoform 3 [Canis familiaris]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=521)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 621.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 243.817)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.87514e-63)
        self.assertEqual(hsp.annotations["identity"], 121)
        self.assertEqual(hsp.annotations["positive"], 122)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[357, 490],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 357)
        self.assertEqual(hsp.target.annotations["end"], 490)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({357: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=521)",
        )
        self.assertEqual(hsp.target.id, "gi|73981814|ref|XP_849517.1|")
        self.assertEqual(hsp.target.name, "XP_849517")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 2 isoform 2 isoform 3 [Canis familiaris]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERF GP TDFTP TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|739818       357 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|739818       417 NKKAFDKFKKEHGVVPQADNATPSERFEGPCTDFTPWTTEEQKLLEQALKTYPVNTPERW
                 60 |||||||||||||||||||||||||||.||.|||||.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|739818       477 EKIAEAVPGRTKK 490
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[9]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|57032822|gb|AAH88838.1|")
        self.assertEqual(hit.target.name, "AAH88838")
        self.assertEqual(hit.target.description, "Dnajc2 protein [Rattus norvegicus]")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=621)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 587.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 230.72)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.6427e-59)
        self.assertEqual(hsp.annotations["identity"], 115)
        self.assertEqual(hsp.annotations["positive"], 117)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[457, 590],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 457)
        self.assertEqual(hsp.target.annotations["end"], 590)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({457: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=621)",
        )
        self.assertEqual(hsp.target.id, "gi|57032822|gb|AAH88838.1|")
        self.assertEqual(hsp.target.name, "AAH88838")
        self.assertEqual(hsp.target.description, "Dnajc2 protein [Rattus norvegicus]")
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGV PQAD+A PSERF GP  D  P TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|570328       457 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|570328       517 NKKAFDKFKKEHGVAPQADSAAPSERFEGPCIDSIPWTTEEQKLLEQALKTYPVNTPERW
                 60 ||||||||||||||.||||.|.|||||.||..|..|.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|570328       577 EKIAEAVPGRTKK 590
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[10]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|32481976|gb|AAP84341.1|")
        self.assertEqual(hit.target.name, "AAP84341")
        self.assertEqual(
            hit.target.description, "zuotin related factor 2 [Rattus norvegicus]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=200)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 587.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 230.72)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.6427e-59)
        self.assertEqual(hsp.annotations["identity"], 115)
        self.assertEqual(hsp.annotations["positive"], 117)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 36, 169],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 36)
        self.assertEqual(hsp.target.annotations["end"], 169)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({36: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=200)",
        )
        self.assertEqual(hsp.target.id, "gi|32481976|gb|AAP84341.1|")
        self.assertEqual(hsp.target.name, "AAP84341")
        self.assertEqual(
            hsp.target.description, "zuotin related factor 2 [Rattus norvegicus]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGV PQAD+A PSERF GP  D  P TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|324819        36 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|324819        96 NKKAFDKFKKEHGVAPQADSAAPSERFEGPCIDSIPWTTEEQKLLEQALKTYPVNTPERW
                 60 ||||||||||||||.||||.|.|||||.||..|..|.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|324819       156 EKIAEAVPGRTKK 169
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[11]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|32481974|gb|AAP84340.1|")
        self.assertEqual(hit.target.name, "AAP84340")
        self.assertEqual(
            hit.target.description, "zuotin related factor 3 [Rattus norvegicus]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=547)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 587.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 230.72)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.6427e-59)
        self.assertEqual(hsp.annotations["identity"], 115)
        self.assertEqual(hsp.annotations["positive"], 117)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[383, 516],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 383)
        self.assertEqual(hsp.target.annotations["end"], 516)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({383: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=547)",
        )
        self.assertEqual(hsp.target.id, "gi|32481974|gb|AAP84340.1|")
        self.assertEqual(hsp.target.name, "AAP84340")
        self.assertEqual(
            hsp.target.description, "zuotin related factor 3 [Rattus norvegicus]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGV PQAD+A PSERF GP  D  P TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|324819       383 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|324819       443 NKKAFDKFKKEHGVAPQADSAAPSERFEGPCIDSIPWTTEEQKLLEQALKTYPVNTPERW
                 60 ||||||||||||||.||||.|.|||||.||..|..|.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|324819       503 EKIAEAVPGRTKK 516
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[12]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|32481970|gb|AAP84338.1|")
        self.assertEqual(hit.target.name, "AAP84338")
        self.assertEqual(
            hit.target.description, "zuotin related factor 1 [Rattus norvegicus]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=621)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 587.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 230.72)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.6427e-59)
        self.assertEqual(hsp.annotations["identity"], 115)
        self.assertEqual(hsp.annotations["positive"], 117)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[457, 590],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 457)
        self.assertEqual(hsp.target.annotations["end"], 590)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({457: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...TKK'}, length=621)",
        )
        self.assertEqual(hsp.target.id, "gi|32481970|gb|AAP84338.1|")
        self.assertEqual(hsp.target.name, "AAP84338")
        self.assertEqual(
            hsp.target.description, "zuotin related factor 1 [Rattus norvegicus]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGV PQAD+A PSERF GP  D  P TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|324819       457 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|324819       517 NKKAFDKFKKEHGVAPQADSAAPSERFEGPCIDSIPWTTEEQKLLEQALKTYPVNTPERW
                 60 ||||||||||||||.||||.|.|||||.||..|..|.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|324819       577 EKIAEAVPGRTKK 590
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[13]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|6677659|ref|NP_033610.1|")
        self.assertEqual(hit.target.name, "NP_033610")
        self.assertEqual(
            hit.target.description,
            "DnaJ (Hsp40) homolog, subfamily C, member 2 isoform 2 [Mus musculus] >gi|74203507|dbj|BAE20907.1| unnamed protein product [Mus musculus] >gi|30354366|gb|AAH52027.1| DnaJ (Hsp40) homolog, subfamily C, member 2, isoform 2 [Mus musculus] >gi|1060925|dbj|BAA09854.1| MIDA1 [Mus musculus] >gi|2137417|pir||A57591 Id-associated protein 1 - mouse",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=621)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 579.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 227.639)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.39063e-58)
        self.assertEqual(hsp.annotations["identity"], 114)
        self.assertEqual(hsp.annotations["positive"], 116)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[457, 590],
                          [  0, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 457)
        self.assertEqual(hsp.target.annotations["end"], 590)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({457: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVISKAKSLQKLDP...TKK'}, length=621)",
        )
        self.assertEqual(hsp.target.id, "gi|6677659|ref|NP_033610.1|")
        self.assertEqual(hsp.target.name, "NP_033610")
        self.assertEqual(
            hsp.target.description,
            "DnaJ (Hsp40) homolog, subfamily C, member 2 isoform 2 [Mus musculus] >gi|74203507|dbj|BAE20907.1| unnamed protein product [Mus musculus] >gi|30354366|gb|AAH52027.1| DnaJ (Hsp40) homolog, subfamily C, member 2, isoform 2 [Mus musculus] >gi|1060925|dbj|BAA09854.1| MIDA1 [Mus musculus] >gi|2137417|pir||A57591 Id-associated protein 1 - mouse",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVI KAKSLQKLDPHQKDDINKKAFDKFKKEHGV  QAD+A PSERF GP  D TP TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|667765       457 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVISKAKSLQKLDPHQKDDI
                  0 |||||||||||||||||||||||||||||||||||||||||||.||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|667765       517 NKKAFDKFKKEHGVASQADSAAPSERFEGPCIDSTPWTTEEQKLLEQALKTYPVNTPERW
                 60 ||||||||||||||..|||.|.|||||.||..|.||.|||.|||.||||.||||||.|||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|667765       577 EKIAEAVPGRTKK 590
                120 ..||.|||||.|. 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[14]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|39794437|gb|AAH64251.1|")
        self.assertEqual(hit.target.name, "AAH64251")
        self.assertEqual(
            hit.target.description, "Dnajc2-prov protein [Xenopus tropicalis]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=635)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 549.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 216.083)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.18708e-55)
        self.assertEqual(hsp.annotations["identity"], 108)
        self.assertEqual(hsp.annotations["positive"], 115)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[470, 548, 549, 604],
                          [  0,  78,  78, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 470)
        self.assertEqual(hsp.target.annotations["end"], 604)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 134))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({470: 'DLQLLIKAVNLFPAGTNARWEVIANYMNLHSISGIKRTSKDVINKAKSLQKLDP...SKK'}, length=635)",
        )
        self.assertEqual(hsp.target.id, "gi|39794437|gb|AAH64251.1|")
        self.assertEqual(hsp.target.name, "AAH64251")
        self.assertEqual(
            hsp.target.description, "Dnajc2-prov protein [Xenopus tropicalis]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTN+RWEVIANYMN+HS SG+KRT+KDVI KAKSLQKLDP QKDDINKKAFDKFKKEH VVPQ+ DNA PSERF GP  D +P TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|397944       470 DLQLLIKAVNLFPAGTNARWEVIANYMNLHSISGIKRTSKDVINKAKSLQKLDPQQKDDI
                  0 |||||||||||||||||.||||||||||.||.||.|||.||||.||||||||||.|||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|397944       530 NKKAFDKFKKEHRVVPQSVDNAVPSERFEGPAADMSPWTTEEQKLLEQALKTYPVNTPER
                 60 ||||||||||||.||||.-|||.|||||.||..|..|.|||.|||.||||.||||||.||
gi|134736        60 NKKAFDKFKKEHGVVPQA-DNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXER

gi|397944       590 WEKIAEAVPGRSKK 604
                120 |..||.|||||.|. 134
gi|134736       119 WXXIAVAVPGRXKE 133
""",
        )
        hit = hits[15]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|47086411|ref|NP_997976.1|")
        self.assertEqual(hit.target.name, "NP_997976")
        self.assertEqual(
            hit.target.description,
            "zuotin related factor 1 [Danio rerio] >gi|45709493|gb|AAH67568.1| Zgc:85671 [Danio rerio]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=618)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 492.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 194.126)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.70388e-48)
        self.assertEqual(hsp.annotations["identity"], 100)
        self.assertEqual(hsp.annotations["positive"], 111)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[453, 528, 529, 541, 543, 589],
                          [  0,  75,  75,  87,  87, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 453)
        self.assertEqual(hsp.target.annotations["end"], 589)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 136))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({453: 'DLQLLIKAVNLFPAGTNARWEVIANYMNQHSSSGVRRTAKDVINKAKTLQKLDP...SKK'}, length=618)",
        )
        self.assertEqual(hsp.target.id, "gi|47086411|ref|NP_997976.1|")
        self.assertEqual(hsp.target.name, "NP_997976")
        self.assertEqual(
            hsp.target.description,
            "zuotin related factor 1 [Danio rerio] >gi|45709493|gb|AAH67568.1| Zgc:85671 [Danio rerio]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTN+RWEVIANYMN HSSSGV+RTAKDVI KAK+LQKLDPHQKD+IN+KAF+KFKKEH  V P  DNA PSERF   G  ++    TTE QKL EQAL TYPV+T ERW  I+ AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|470864       453 DLQLLIKAVNLFPAGTNARWEVIANYMNQHSSSGVRRTAKDVINKAKTLQKLDPHQKDEI
                  0 |||||||||||||||||.||||||||||.||||||.|||||||.|||.||||||||||.|
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|470864       513 NRKAFEKFKKEHSAVPPTVDNAMPSERFDAVGADSNAAAWTTEEQKLLEQALKTYPVSTA
                 60 |.|||.||||||..|-|..|||.|||||--.|........|||.|||.||||.||||.|.
gi|134736        60 NKKAFDKFKKEHGVV-PQADNATPSERF--XGPYTDFTPXTTEXQKLXEQALNTYPVNTX

gi|470864       573 ERWERISEAVPGRSKK 589
                120 |||..|..|||||.|. 136
gi|134736       117 ERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[16]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|32766539|gb|AAH55125.1|")
        self.assertEqual(hit.target.name, "AAH55125")
        self.assertEqual(hit.target.description, "Zgc:85671 protein [Danio rerio]")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=620)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 492.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 194.126)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.70388e-48)
        self.assertEqual(hsp.annotations["identity"], 100)
        self.assertEqual(hsp.annotations["positive"], 111)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[453, 528, 529, 541, 543, 589],
                          [  0,  75,  75,  87,  87, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 453)
        self.assertEqual(hsp.target.annotations["end"], 589)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 136))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({453: 'DLQLLIKAVNLFPAGTNARWEVIANYMNQHSSSGVRRTAKDVINKAKTLQKLDP...SKK'}, length=620)",
        )
        self.assertEqual(hsp.target.id, "gi|32766539|gb|AAH55125.1|")
        self.assertEqual(hsp.target.name, "AAH55125")
        self.assertEqual(hsp.target.description, "Zgc:85671 protein [Danio rerio]")
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTN+RWEVIANYMN HSSSGV+RTAKDVI KAK+LQKLDPHQKD+IN+KAF+KFKKEH  V P  DNA PSERF   G  ++    TTE QKL EQAL TYPV+T ERW  I+ AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|327665       453 DLQLLIKAVNLFPAGTNARWEVIANYMNQHSSSGVRRTAKDVINKAKTLQKLDPHQKDEI
                  0 |||||||||||||||||.||||||||||.||||||.|||||||.|||.||||||||||.|
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|327665       513 NRKAFEKFKKEHSAVPPTVDNAMPSERFDAVGADSNAAAWTTEEQKLLEQALKTYPVSTA
                 60 |.|||.||||||..|-|..|||.|||||--.|........|||.|||.||||.||||.|.
gi|134736        60 NKKAFDKFKKEHGVV-PQADNATPSERF--XGPYTDFTPXTTEXQKLXEQALNTYPVNTX

gi|327665       573 ERWERISEAVPGRSKK 589
                120 |||..|..|||||.|. 136
gi|134736       117 ERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[17]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|5577977|gb|AAD45407.1|")
        self.assertEqual(hit.target.name, "AAD45407")
        self.assertEqual(
            hit.target.description,
            "gliosarcoma-related antigen MIDA1 [Rattus norvegicus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=562)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 481.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 189.889)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.21338e-47)
        self.assertEqual(hsp.annotations["identity"], 94)
        self.assertEqual(hsp.annotations["positive"], 95)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[457, 561],
                          [  0, 104]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 312)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 457)
        self.assertEqual(hsp.target.annotations["end"], 561)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 104))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...QKL')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({457: 'DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...QKL'}, length=562)",
        )
        self.assertEqual(hsp.target.id, "gi|5577977|gb|AAD45407.1|")
        self.assertEqual(hsp.target.name, "AAD45407")
        self.assertEqual(
            hsp.target.description,
            "gliosarcoma-related antigen MIDA1 [Rattus norvegicus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGV PQAD+A PSERF GP  D  P TTE QKL",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|557797       457 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|557797       517 NKKAFDKFKKEHGVAPQADSAAPSERFEGPCIDSIPWTTEEQKL 561
                 60 ||||||||||||||.||||.|.|||||.||..|..|.|||.||| 104
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKL 104
""",
        )
        hit = hits[18]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|50728035|ref|XP_415961.1|")
        self.assertEqual(hit.target.name, "XP_415961")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to zuotin related factor 1 [Gallus gallus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=420)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 477.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 188.348)
        self.assertAlmostEqual(hsp.annotations["evalue"], 9.3495e-47)
        self.assertEqual(hsp.annotations["identity"], 91)
        self.assertEqual(hsp.annotations["positive"], 97)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[290, 405],
                          [  0, 115]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 54)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 290)
        self.assertEqual(hsp.target.annotations["end"], 405)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 115))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('RWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEH...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({290: 'RWEVIANYMNLHSTTGIKRTAKDVINKAKSLQKLDPHQKDDINKKAFDKFKKEH...SKK'}, length=420)",
        )
        self.assertEqual(hsp.target.id, "gi|50728035|ref|XP_415961.1|")
        self.assertEqual(hsp.target.name, "XP_415961")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to zuotin related factor 1 [Gallus gallus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "RWEVIANYMN+HS++G+KRTAKDVI KAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQ D A PSERF G   D +P TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|507280       290 RWEVIANYMNLHSTTGIKRTAKDVINKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQM
                  0 ||||||||||.||..|.||||||||.|||||||||||||||||||||||||||||||||.
gi|134736         0 RWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQA

gi|507280       350 DTAAPSERFEGSPLDSSPWTTEEQKLLEQALKTYPVNTPERWEKIAAAVPGRSKK 405
                 60 |.|.|||||.|...|..|.|||.|||.||||.||||||.|||..||.|||||.|. 115
gi|134736        60 DNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXKE 115
""",
        )
        hit = hits[19]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|47208143|emb|CAF93399.1|")
        self.assertEqual(hit.target.name, "CAF93399")
        self.assertEqual(
            hit.target.description, "unnamed protein product [Tetraodon nigroviridis]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=549)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 365.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 145.206)
        self.assertAlmostEqual(hsp.annotations["evalue"], 9.07675e-34)
        self.assertEqual(hsp.annotations["identity"], 72)
        self.assertEqual(hsp.annotations["positive"], 80)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[454, 530, 531, 544],
                          [  0,  76,  76,  89]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 267)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 454)
        self.assertEqual(hsp.target.annotations["end"], 544)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 90))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...FXG')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({454: 'DLQLLIKAVNLFPAGTNARWEVIANYMNQHSTSGMKRTAKDVINKAKNLQRLDP...FDG'}, length=549)",
        )
        self.assertEqual(hsp.target.id, "gi|47208143|emb|CAF93399.1|")
        self.assertEqual(hsp.target.name, "CAF93399")
        self.assertEqual(
            hsp.target.description, "unnamed protein product [Tetraodon nigroviridis]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTN+RWEVIANYMN HS+SG+KRTAKDVI KAK+LQ+LDP QKD+INKKAF+KF+KEH  VP   DNA PSERF G",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|472081       454 DLQLLIKAVNLFPAGTNARWEVIANYMNQHSTSGMKRTAKDVINKAKNLQRLDPVQKDEI
                  0 |||||||||||||||||.||||||||||.||.||.||||||||.|||.||.|||.|||.|
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|472081       514 NKKAFEKFRKEHTSVPLSVDNAVPSERFDG 544
                 60 |||||.||.|||..||-..|||.|||||.|  90
gi|134736        60 NKKAFDKFKKEHGVVP-QADNATPSERFXG  89
""",
        )
        hit = hits[20]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|76615182|ref|XP_882962.1|")
        self.assertEqual(hit.target.name, "XP_882962")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to Zuotin-related factor 1 (M-phase phosphoprotein 11) isoform 3 [Bos taurus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=124)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 362.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 144.05)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.02209e-33)
        self.assertEqual(hsp.annotations["identity"], 69)
        self.assertEqual(hsp.annotations["positive"], 70)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[12, 93],
                          [ 0, 81]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 156)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 12)
        self.assertEqual(hsp.target.annotations["end"], 93)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 81))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DPHQKDDINKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXE...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({12: 'DPHQKDDINKKAFDKFKKEHGVVPQADNATPSERFEGPCTDFTPWTTEEQKLLE...TKK'}, length=124)",
        )
        self.assertEqual(hsp.target.id, "gi|76615182|ref|XP_882962.1|")
        self.assertEqual(hsp.target.name, "XP_882962")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to Zuotin-related factor 1 (M-phase phosphoprotein 11) isoform 3 [Bos taurus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DPHQKDDINKKAFDKFKKEHGVVPQADNATPSERF GP TDFTP TTE QKL EQAL TYPVNT ERW  IA AVPGR K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|766151        12 DPHQKDDINKKAFDKFKKEHGVVPQADNATPSERFEGPCTDFTPWTTEEQKLLEQALKTY
                  0 |||||||||||||||||||||||||||||||||||.||.|||||.|||.|||.||||.||
gi|134736         0 DPHQKDDINKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTY

gi|766151        72 PVNTPERWEKIAEAVPGRTKK 93
                 60 ||||.|||..||.|||||.|. 81
gi|134736        60 PVNTXERWXXIAVAVPGRXKE 81
""",
        )
        hit = hits[21]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|72061332|ref|XP_788523.1|")
        self.assertEqual(hit.target.name, "XP_788523")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to zuotin related factor 1 [Strongylocentrotus purpuratus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=623)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 311.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 124.405)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.65801e-27)
        self.assertEqual(hsp.annotations["identity"], 68)
        self.assertEqual(hsp.annotations["positive"], 89)
        self.assertEqual(hsp.annotations["gaps"], 10)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[452, 526, 527, 551, 560, 595],
                          [  0,  74,  74,  98,  98, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 452)
        self.assertEqual(hsp.target.annotations["end"], 595)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 143))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({452: 'DTQLLIKAANIFPPGTSSRYEVIANYINNHSTSGSNRNAKDIINKTKNLPRLDG...TKK'}, length=623)",
        )
        self.assertEqual(hsp.target.id, "gi|72061332|ref|XP_788523.1|")
        self.assertEqual(hsp.target.name, "XP_788523")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to zuotin related factor 1 [Strongylocentrotus purpuratus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "D QLLIKA N+FP GT+SR+EVIANY+N HS+SG  R AKD+I K K+L +LD   K   N+KAF+KF++  G  + ++D A PSE F G      P           T+ QK  EQAL T+P +  +RW  I+ AVP R K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|720613       452 DTQLLIKAANIFPPGTSSRYEVIANYINNHSTSGSNRNAKDIINKTKNLPRLDGGMKAAA
                  0 |.||||||.|.||.||.||.||||||.|.||.||..|.|||.|.|.|.|..||...|...
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|720613       512 NEKAFEKFQQATGAKLKKSDEAPPSENFEGGEGAAAPAAAVEGPKAWQTDEQKRLEQALK
                 60 |.|||.||....|.-....|.|.|||.|.|......|..---------|..||..||||.
gi|134736        60 NKKAFDKFKKEHGV-VPQADNATPSERFXGPYTDFTPXT---------TEXQKLXEQALN

gi|720613       572 TFPASATDRWDKISEAVPTRTKK 595
                120 |.|.....||..|..|||.|.|. 143
gi|134736       110 TYPVNTXERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[22]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|66503903|ref|XP_396658.2|")
        self.assertEqual(hit.target.name, "XP_396658")
        self.assertEqual(
            hit.target.description, "PREDICTED: similar to CG10565-PA [Apis mellifera]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=617)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 288.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 115.546)
        self.assertAlmostEqual(hsp.annotations["evalue"], 7.70178e-25)
        self.assertEqual(hsp.annotations["identity"], 68)
        self.assertEqual(hsp.annotations["positive"], 85)
        self.assertEqual(hsp.annotations["gaps"], 16)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[445, 475, 477, 500, 503, 533, 535, 543, 552, 594],
                          [  0,  30,  30,  53,  53,  83,  83,  91,  91, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 445)
        self.assertEqual(hsp.target.annotations["end"], 594)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 149))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({445: 'DLQLLIKAVNLFPAGTNQRWEVVANFINQHSTSSTGITRDAKEVLAKAKDLQST...TNK'}, length=617)",
        )
        self.assertEqual(hsp.target.id, "gi|66503903|ref|XP_396658.2|")
        self.assertEqual(hsp.target.name, "XP_396658")
        self.assertEqual(
            hsp.target.description, "PREDICTED: similar to CG10565-PA [Apis mellifera]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAGTN RWEV+AN++N H  SS+G+ R AK+V+ KAK LQ  D      K+  NKKA+D F  E       ++  P  +ER   P           +  P T   QKL EQAL TYP +  +RW  IA  +P R  +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|665039       445 DLQLLIKAVNLFPAGTNQRWEVVANFINQHSTSSTGITRDAKEVLAKAKDLQSTDFSRSS
                  0 |||||||||||||||||.||||.||..|.|--||.|..|.||.|..|||.||..|---..
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIH--SSSGVKRTAKDVIGKAKSLQKLD---PH

gi|665039       505 LKEQANKKAYDNFIAEKKTKESIEDRMPAVTERLDHPILNGINSEQKKESQPWTPAEQKL
                 60 .|...||||.|.|..|...........|--.||...|.---------....|.|...|||
gi|134736        55 QKDDINKKAFDKFKKEHGVVPQADNATP--SERFXGPY---------TDFTPXTTEXQKL

gi|665039       565 LEQALKTYPTSVPDRWDQIAACIPTRTNK 594
                120 .||||.|||.....||..||...|.|... 149
gi|134736       104 XEQALNTYPVNTXERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[23]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|72008661|ref|XP_786271.1|")
        self.assertEqual(hit.target.name, "XP_786271")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to zuotin related factor 1 [Strongylocentrotus purpuratus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=193)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 245.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 98.9821)
        self.assertAlmostEqual(hsp.annotations["evalue"], 7.45978e-20)
        self.assertEqual(hsp.annotations["identity"], 55)
        self.assertEqual(hsp.annotations["positive"], 74)
        self.assertEqual(hsp.annotations["gaps"], 10)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 41,  96,  97, 121, 130, 165],
                          [  0,  55,  55,  79,  79, 114]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 57)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 41)
        self.assertEqual(hsp.target.annotations["end"], 165)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 124))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('WEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHG...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({41: 'YEVIANYINNHSTSGSNRAAKDIINKTKNLQRLDGGMKAAANEKAFEKFQQATG...TKK'}, length=193)",
        )
        self.assertEqual(hsp.target.id, "gi|72008661|ref|XP_786271.1|")
        self.assertEqual(hsp.target.name, "XP_786271")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to zuotin related factor 1 [Strongylocentrotus purpuratus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+EVIANY+N HS+SG  R AKD+I K K+LQ+LD   K   N+KAF+KF++  G  + ++D A PSE F G      P           T+ QK  EQAL T+P +  +RW  I+ AVP R K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|720086        41 YEVIANYINNHSTSGSNRAAKDIINKTKNLQRLDGGMKAAANEKAFEKFQQATGAKLKKS
                  0 .||||||.|.||.||..|.|||.|.|.|.||.||...|...|.|||.||....|.-....
gi|134736         0 WEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGV-VPQA

gi|720086       101 DEAPPSENFEGGEGAAAPAAAAEGPKAWQTDEQKRLEQALKTFPASATDRWDKISEAVPT
                 60 |.|.|||.|.|......|..---------|..||..||||.|.|.....||..|..|||.
gi|134736        59 DNATPSERFXGPYTDFTPXT---------TEXQKLXEQALNTYPVNTXERWXXIAVAVPG

gi|720086       161 RTKK 165
                120 |.|. 124
gi|134736       110 RXKE 114
""",
        )
        hit = hits[24]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|54641476|gb|EAL30226.1|")
        self.assertEqual(hit.target.name, "EAL30226")
        self.assertEqual(
            hit.target.description, "GA10399-PA [Drosophila pseudoobscura]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=637)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 219.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 88.9669)
        self.assertAlmostEqual(hsp.annotations["evalue"], 7.71966e-17)
        self.assertEqual(hsp.annotations["identity"], 66)
        self.assertEqual(hsp.annotations["positive"], 86)
        self.assertEqual(hsp.annotations["gaps"], 47)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[435, 466, 467, 489, 489, 499, 506, 513, 538, 543, 544, 554, 557,
                           566, 575, 613],
                          [  0,  31,  31,  53,  54,  64,  64,  71,  71,  76,  76,  86,  86,
                            95,  95, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 435)
        self.assertEqual(hsp.target.annotations["end"], 613)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 179))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({435: 'NVQLLIKAVNLFPAGTAQRWDVIATFINQHSGSGGAQVLARDVLNKAKALQNSD...SKK'}, length=637)",
        )
        self.assertEqual(hsp.target.id, "gi|54641476|gb|EAL30226.1|")
        self.assertEqual(hsp.target.name, "EAL30226")
        self.assertEqual(
            hsp.target.description, "GA10399-PA [Drosophila pseudoobscura]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++QLLIKAVNLFPAGT  RW+VIA ++N HS S G +  A+DV+ KAK+LQ  D H K  +  +A       F+K KKE                          G  P Q +N  P +       P T+ T           T E Q L EQA+ +YP  T +RW  IA  +P R K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|546414       435 NVQLLIKAVNLFPAGTAQRWDVIATFINQHSGSGGAQVLARDVLNKAKALQNSD-HSKSS
                  0 ..||||||||||||||..||.|||...|.||-|.|....|.||..|||.||..|-|.|..
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHS-SSGVKRTAKDVIGKAKSLQKLDPHQKDD

gi|546414       494 LKTQANDAAFASFEKSKKEVQVSNDITIGEEAPSQESKENVKQNGGAHPNQVNNQKPKQN
                 60 ....|-------|.|.|||-------------------------.|..|-|..|..|...
gi|134736        59 INKKA-------FDKFKKE-------------------------HGVVP-QADNATPSER

gi|546414       554 GISTPSPMTNGTGGAGAGASKTWTKEEQALLEQAIKSYPTTTPDRWDRIAACIPNRSKK
                120 ---...|.|..|---------..|.|.|.|.|||...||..|..||..||...|.|.|.
gi|134736        86 ---FXGPYTDFT---------PXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXKE

gi|546414       613
                179
gi|134736       133
""",
        )
        hit = hits[25]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|55245384|gb|EAL41766.1|")
        self.assertEqual(hit.target.name, "EAL41766")
        self.assertEqual(
            hit.target.description,
            "ENSANGP00000029085 [Anopheles gambiae str. PEST] >gi|57971654|ref|XP_564715.1| ENSANGP00000029085 [Anopheles gambiae str. PEST]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=300)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 218.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 88.5817)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.00822e-16)
        self.assertEqual(hsp.annotations["identity"], 59)
        self.assertEqual(hsp.annotations["positive"], 76)
        self.assertEqual(hsp.annotations["gaps"], 5)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[143, 175, 177, 198, 198, 204, 204, 260, 261, 277],
                          [  0,  32,  32,  53,  54,  60,  61, 117, 117, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 143)
        self.assertEqual(hsp.target.annotations["end"], 277)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 136))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({143: 'NVQLLIKAVNLFPAGTISRWEVIANYLNQHGTELGDMKFYAKDALNKAKELQAG...TKK'}, length=300)",
        )
        self.assertEqual(hsp.target.id, "gi|55245384|gb|EAL41766.1|")
        self.assertEqual(hsp.target.name, "EAL41766")
        self.assertEqual(
            hsp.target.description,
            "ENSANGP00000029085 [Anopheles gambiae str. PEST] >gi|57971654|ref|XP_564715.1| ENSANGP00000029085 [Anopheles gambiae str. PEST]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++QLLIKAVNLFPAGT SRWEVIANY+N H +    +K  AKD + KAK LQ  D   K D+ K   ++   E  +  Q +     ER           + E Q L EQA+ TYPV+   +RW  IA  +P R K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|552453       143 NVQLLIKAVNLFPAGTISRWEVIANYLNQHGTELGDMKFYAKDALNKAKELQAGD-FSKS
                  0 ..||||||||||||||.|||||||||.|.|..--...|..|||...|||.||..|-..|.
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSS--SGVKRTAKDVIGKAKSLQKLDPHQKD

gi|552453       202 DL-KTVVNQQAYESPMARQRNRPAVPERRQPRRRRKRTWSKEEQALLEQAIKTYPVSCGP
                 60 |.-|........|.....|.......||.............|.|.|.|||..||||...-
gi|134736        58 DINKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTX-

gi|552453       261 DRWDRIAECIPNRTKK 277
                120 .||..||...|.|.|. 136
gi|134736       117 ERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[26]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|6677657|ref|NP_033609.1|")
        self.assertEqual(hit.target.name, "NP_033609")
        self.assertEqual(
            hit.target.description,
            "DnaJ (Hsp40) homolog, subfamily C, member 2 isoform 1 [Mus musculus] >gi|1731448|sp|P54103|ZRF1_MOUSE Zuotin-related factor 1 >gi|1256832|gb|AAC52486.1| zuotin related factor",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=514)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 211.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 85.8853)
        self.assertAlmostEqual(hsp.annotations["evalue"], 6.53508e-16)
        self.assertEqual(hsp.annotations["identity"], 41)
        self.assertEqual(hsp.annotations["positive"], 44)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[457, 504],
                          [  0,  47]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 141)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 457)
        self.assertEqual(hsp.target.annotations["end"], 504)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 47))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAK')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({457: 'DLQLLIKAVNLFPAGRNSRWDVIANYMNIHSSSGVKRTAKDVISEVR'}, length=514)",
        )
        self.assertEqual(hsp.target.id, "gi|6677657|ref|NP_033609.1|")
        self.assertEqual(hsp.target.name, "NP_033609")
        self.assertEqual(
            hsp.target.description,
            "DnaJ (Hsp40) homolog, subfamily C, member 2 isoform 1 [Mus musculus] >gi|1731448|sp|P54103|ZRF1_MOUSE Zuotin-related factor 1 >gi|1256832|gb|AAC52486.1| zuotin related factor",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DLQLLIKAVNLFPAG NSRW+VIANYMNIHSSSGVKRTAKDVI + +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|667765       457 DLQLLIKAVNLFPAGRNSRWDVIANYMNIHSSSGVKRTAKDVISEVR 504
                  0 |||||||||||||||.||||.||||||||||||||||||||||....  47
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAK  47
""",
        )
        hit = hits[27]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|7296390|gb|AAF51678.1|")
        self.assertEqual(hit.target.name, "AAF51678")
        self.assertEqual(
            hit.target.description,
            "CG10565-PA [Drosophila melanogaster] >gi|17862382|gb|AAL39668.1| LD23875p [Drosophila melanogaster] >gi|21356311|ref|NP_649284.1| CG10565-PA [Drosophila melanogaster]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=646)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 207.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 84.3445)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.90142e-15)
        self.assertEqual(hsp.annotations["identity"], 63)
        self.assertEqual(hsp.annotations["positive"], 85)
        self.assertEqual(hsp.annotations["gaps"], 55)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[438, 469, 470, 492, 492, 502, 509, 514, 537, 558, 558, 564, 586,
                           622],
                          [  0,  31,  31,  53,  54,  64,  64,  69,  69,  90,  91,  97,  97,
                           133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 438)
        self.assertEqual(hsp.target.annotations["end"], 622)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 186))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({438: 'NVQLLIKAVNLFPAGTAQRWDVIATFINQHSPDNTVLVNARDVLNKAKALQNTD...SKK'}, length=646)",
        )
        self.assertEqual(hsp.target.id, "gi|7296390|gb|AAF51678.1|")
        self.assertEqual(hsp.target.name, "AAF51678")
        self.assertEqual(
            hsp.target.description,
            "CG10565-PA [Drosophila melanogaster] >gi|17862382|gb|AAL39668.1| LD23875p [Drosophila melanogaster] >gi|21356311|ref|NP_649284.1| CG10565-PA [Drosophila melanogaster]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++QLLIKAVNLFPAGT  RW+VIA ++N HS  + V   A+DV+ KAK+LQ  D H K  +  +A       F+K K                       K++GV  +A+N +  +    P     P                       T E Q L EQA+ TYP  T +RW  IA  +P R K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|729639       438 NVQLLIKAVNLFPAGTAQRWDVIATFINQHSPDNTVLVNARDVLNKAKALQNTD-HSKSS
                  0 ..||||||||||||||..||.|||...|.||-...|...|.||..|||.||..|-|.|..
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHS-SSGVKRTAKDVIGKAKSLQKLDPHQKDD

gi|729639       497 LKTQANDAAFASFEKSKKDVQTCKDITLGEETAQASKENLKQNGVDHKANNQSTKQNGTA
                 60 ....|-------|.|.|-----------------------|..||...|.|.........
gi|134736        59 INKKA-------FDKFK-----------------------KEHGVVPQADNATPSERFXG

gi|729639       557 P-APANPTAAPAPVPATNGSTGGGAASKTWTKEEQALLEQAIKTYPTTTPDRWDCIAACI
                120 |-....|.----------------------|.|.|.|.|||..|||..|..||..||...
gi|134736        89 PYTDFTPX----------------------TTEXQKLXEQALNTYPVNTXERWXXIAVAV

gi|729639       616 PNRSKK 622
                180 |.|.|. 186
gi|134736       127 PGRXKE 133
""",
        )
        hit = hits[28]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|55245385|gb|EAA03986.2|")
        self.assertEqual(hit.target.name, "EAA03986")
        self.assertEqual(
            hit.target.description,
            "ENSANGP00000009397 [Anopheles gambiae str. PEST] >gi|58378250|ref|XP_308338.2| ENSANGP00000009397 [Anopheles gambiae str. PEST]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=589)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 197.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 80.4925)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.74564e-14)
        self.assertEqual(hsp.annotations["identity"], 62)
        self.assertEqual(hsp.annotations["positive"], 84)
        self.assertEqual(hsp.annotations["gaps"], 57)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[375, 407, 409, 435, 438, 449, 473, 502, 529, 548, 549, 565],
                          [  0,  32,  32,  58,  58,  69,  69,  98,  98, 117, 117, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 375)
        self.assertEqual(hsp.target.annotations["end"], 565)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 190))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({375: 'NVQLLIKAVNLFPAGTISRWEVIANYLNQHGTELGDMKFYAKDALNKAKELQAG...TKK'}, length=589)",
        )
        self.assertEqual(hsp.target.id, "gi|55245385|gb|EAA03986.2|")
        self.assertEqual(hsp.target.name, "EAA03986")
        self.assertEqual(
            hsp.target.description,
            "ENSANGP00000009397 [Anopheles gambiae str. PEST] >gi|58378250|ref|XP_308338.2| ENSANGP00000009397 [Anopheles gambiae str. PEST]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++QLLIKAVNLFPAGT SRWEVIANY+N H +    +K  AKD + KAK LQ  D  + D    +N++A++ F+                        KE G       +  +E+   P  +    T                            E Q L EQA+ TYPV+   +RW  IA  +P R K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|552453       375 NVQLLIKAVNLFPAGTISRWEVIANYLNQHGTELGDMKFYAKDALNKAKELQAGDFSKSD
                  0 ..||||||||||||||.|||||||||.|.|..--...|..|||...|||.||..|....|
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSS--SGVKRTAKDVIGKAKSLQKLDPHQKD

gi|552453       435 LKTVVNQQAYESFERSKKDLKIIDNSEISTKEAAELASKEKGQSDSKPKSAAAEKKASPM
                 60 ---..|..|...|.------------------------||.|...........|....|.
gi|134736        58 ---DINKKAFDKFK------------------------KEHGVVPQADNATPSERFXGPY

gi|552453       495 VNGVQQTDGKAAKPASSAGTAPAKKEKEANKVWSKEEQALLEQAIKTYPVSCGPDRWDRI
                120 ......|---------------------------.|.|.|.|||..||||...-.||..|
gi|134736        91 TDFTPXT---------------------------TEXQKLXEQALNTYPVNTX-ERWXXI

gi|552453       555 AECIPNRTKK 565
                180 |...|.|.|. 190
gi|134736       123 AVAVPGRXKE 133
""",
        )
        hit = hits[29]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|56755797|gb|AAW26077.1|")
        self.assertEqual(hit.target.name, "AAW26077")
        self.assertEqual(
            hit.target.description, "SJCHGC05986 protein [Schistosoma japonicum]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=161)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 167.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 68.9366)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.2669e-11)
        self.assertEqual(hsp.annotations["identity"], 49)
        self.assertEqual(hsp.annotations["positive"], 67)
        self.assertEqual(hsp.annotations["gaps"], 14)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[  1,  33,  33,  68,  71,  88,  88, 110, 115, 134],
                          [  0,  32,  33,  68,  68,  85,  90, 112, 112, 131]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 3)
        self.assertEqual(hsp.query.annotations["end"], 396)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 1)
        self.assertEqual(hsp.target.annotations["end"], 134)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 139))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('LQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPH...RXK')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1: 'IHVLVKAVNILPAGTPKRWEAIAAYVNQHVNSASVSGKDALKQAKLLKQEDSNL...RTR'}, length=161)",
        )
        self.assertEqual(hsp.target.id, "gi|56755797|gb|AAW26077.1|")
        self.assertEqual(hsp.target.name, "AAW26077")
        self.assertEqual(
            hsp.target.description, "SJCHGC05986 protein [Schistosoma japonicum]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+ +L+KAVN+ PAGT  RWE IA Y+N H +S    + KD + +AK L++ D + +   N  AFD F    KE   V      T  E          P T   Q+  EQAL +YP       + +RW  IA  V  R +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|567557         1 IHVLVKAVNILPAGTPKRWEAIAAYVNQHVNS-ASVSGKDALKQAKLLKQEDSNLRKTAN
                  0 ...|.||||..||||..|||.||.|.|.|..|-.....||....||.|...|.......|
gi|134736         0 LQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDIN

gi|567557        60 TNAFDSFTNSVKETDAVKNVAITTHLEA-----EGSRPWTVVEQRALEQALKSYPSTAGY
                 60 ..|||.|.---||...|......|..|.-----....|.|...|...||||..||-----
gi|134736        60 KKAFDKFK---KEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYP-----

gi|567557       115 SGSDDRWQLIANVVGTRTR 134
                120 .....||..||..|..|.. 139
gi|134736       112 VNTXERWXXIAVAVPGRXK 131
""",
        )
        hit = hits[30]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|39584134|emb|CAE61509.1|")
        self.assertEqual(hit.target.name, "CAE61509")
        self.assertEqual(
            hit.target.description,
            "Hypothetical protein CBG05408 [Caenorhabditis briggsae]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=589)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 131.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 55.0694)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.23532e-06)
        self.assertEqual(hsp.annotations["identity"], 44)
        self.assertEqual(hsp.annotations["positive"], 62)
        self.assertEqual(hsp.annotations["gaps"], 26)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[459, 489, 491, 496, 497, 515, 515, 533, 533, 539, 539, 572],
                          [  0,  30,  30,  35,  35,  53,  67,  85,  92,  98, 100, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 459)
        self.assertEqual(hsp.target.annotations["end"], 572)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 136))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({459: 'EIQLLVKASNTFPPGTVERWVQIADYINEHRKDSQGLPPKTEKQVIKQCKAVQT...TKK'}, length=589)",
        )
        self.assertEqual(hsp.target.id, "gi|39584134|emb|CAE61509.1|")
        self.assertEqual(hsp.target.name, "CAE61509")
        self.assertEqual(
            hsp.target.description,
            "Hypothetical protein CBG05408 [Caenorhabditis briggsae]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++QLL+KA N FP GT  RW  IA+Y+N H   S G+  +T K VI + K++Q ++               K       Q   A P E       D    T   QK  E+AL  +P +  ERW  I+  V  + K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|395841       459 EIQLLVKASNTFPPGTVERWVQIADYINEHRKDSQGLPPKTEKQVIKQCKAVQTMN----
                  0 ..|||.||.|.||.||..||..||.|.|.|--.|.|.-..|.|.||...|..|...----
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIH--SSSGV-KRTAKDVIGKAKSLQKLDPHQK

gi|395841       515 ----------VKLPSTTQNQLGTALPDE-------DVWSAT--EQKTLEEALKKHPASDP
                 60 ----------.|.......|...|.|.|-------|....|--.||..|.||...|....
gi|134736        57 DDINKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTX

gi|395841       556 ERWEKISTEVGTKTKK 572
                120 |||..|...|....|. 136
gi|134736       117 ERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[31]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|23508859|ref|NP_701527.1|")
        self.assertEqual(hit.target.name, "NP_701527")
        self.assertEqual(
            hit.target.description,
            "DNA-binding chaperone, putative [Plasmodium falciparum 3D7] >gi|23496695|gb|AAN36251.1| DNA-binding chaperone, putative [Plasmodium falciparum 3D7]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=939)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 126.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 53.1434)
        self.assertAlmostEqual(hsp.annotations["evalue"], 4.69423e-06)
        self.assertEqual(hsp.annotations["identity"], 38)
        self.assertEqual(hsp.annotations["positive"], 60)
        self.assertEqual(hsp.annotations["gaps"], 25)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[773, 801, 801, 819, 836, 851, 852, 899],
                          [  0,  28,  35,  53,  53,  68,  68, 115]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 345)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 773)
        self.assertEqual(hsp.target.annotations["end"], 899)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...PVN')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({773: 'EVSLLAKALKLYPGGTRNRWVLISNSIKTKTVKEVIKKTKEMFENDTLKNLGRN...PTS'}, length=939)",
        )
        self.assertEqual(hsp.target.id, "gi|23508859|ref|NP_701527.1|")
        self.assertEqual(hsp.target.name, "NP_701527")
        self.assertEqual(
            hsp.target.description,
            "DNA-binding chaperone, putative [Plasmodium falciparum 3D7] >gi|23496695|gb|AAN36251.1| DNA-binding chaperone, putative [Plasmodium falciparum 3D7]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++ LL KA+ L+P GT +RW +I+N +         +T K+VI K K + + D                  +Q   + KK  D   K+E+ +  + +N   ++   G      P T E Q L EQAL  YP +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|235088       773 EVSLLAKALKLYPGGTRNRWVLISNSIK-------TKTVKEVIKKTKEMFENDTLKNLGR
                  0 ...||.||..|.|.||..||..|.|...-------..|.|.||.|.|.....|-------
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLD-------

gi|235088       826 NFDETPFDHFKNQNKGVMKKIDDNLDKREYKLTKENNNQVETDNLNGDVEKKKPWTHEEQ
                 60 ----------..|.....||..|..-|.|........|........|......|.|.|.|
gi|134736        53 ----------PHQKDDINKKAFDKF-KKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQ

gi|235088       886 HLLEQALIKYPTS 899
                120 .|.||||..||.. 133
gi|134736       102 KLXEQALNTYPVN 115
""",
        )
        hit = hits[32]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|12322899|gb|AAG51437.1|")
        self.assertEqual(hit.target.name, "AAG51437")
        self.assertEqual(
            hit.target.description,
            "putative cell division related protein; 50012-47994 [Arabidopsis thaliana] >gi|15229761|ref|NP_187752.1| DNAJ heat shock N-terminal domain-containing protein / cell division protein-related [Arabidopsis thaliana]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=663)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 124.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 52.373)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.00714e-06)
        self.assertEqual(hsp.annotations["identity"], 45)
        self.assertEqual(hsp.annotations["positive"], 72)
        self.assertEqual(hsp.annotations["gaps"], 51)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[485, 512, 512, 527, 529, 534, 534, 542, 558, 563, 567, 582, 598,
                           640],
                          [  0,  27,  33,  48,  48,  53,  60,  68,  68,  73,  73,  88,  88,
                           130]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 390)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 485)
        self.assertEqual(hsp.target.annotations["end"], 640)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 168))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...PGR')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({485: 'EIDMLRKGMIKYPKGTSRRWEVISEYIGTGRSVEEILKATKTVLLQKPDSAKAF...PGK'}, length=663)",
        )
        self.assertEqual(hsp.target.id, "gi|12322899|gb|AAG51437.1|")
        self.assertEqual(hsp.target.name, "AAG51437")
        self.assertEqual(
            hsp.target.description,
            "putative cell division related protein; 50012-47994 [Arabidopsis thaliana] >gi|15229761|ref|NP_187752.1| DNAJ heat shock N-terminal domain-containing protein / cell division protein-related [Arabidopsis thaliana]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++ +L K +  +P GT+ RWEVI+ Y+      G  R+ ++++   K+  LQK D       + KAFD F                ++E G     +    NA PS+                   G  +D    +T  ++   QAL T+P  T +RW  +A AVPG+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|123228       485 EIDMLRKGMIKYPKGTSRRWEVISEYI------GTGRSVEEILKATKTVLLQKPD-----
                  0 ....|.|.....|.||..|||||..|.------|..|.........|.--|||.|-----
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKS--LQKLDPHQKD

gi|123228       534 --SAKAFDSFLEKRKPSASITSPLSTREELGESLPTMTTTTNAKPSKETVVGKSSSSQSS
                 60 --..||||.|----------------..|.|----......||.||....----------
gi|134736        58 DINKKAFDKF----------------KKEHG----VVPQADNATPSERFX----------

gi|123228       592 DNNGEVGGSSDADSWSTVQERALVQALKTFPKETSQRWERVAAAVPGK 640
                120 ------|...|.....|.......|||.|.|..|..||...|.||||. 168
gi|134736        88 ------GPYTDFTPXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGR 130
""",
        )
        hit = hits[33]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|68075771|ref|XP_679805.1|")
        self.assertEqual(hit.target.name, "XP_679805")
        self.assertEqual(
            hit.target.description,
            "DNA-binding chaperone, putative [Plasmodium berghei] >gi|56500634|emb|CAH98046.1| DNA-binding chaperone, putative [Plasmodium berghei]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=859)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 123.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 51.9878)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.04577e-05)
        self.assertEqual(hsp.annotations["identity"], 44)
        self.assertEqual(hsp.annotations["positive"], 68)
        self.assertEqual(hsp.annotations["gaps"], 27)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[693, 721, 721, 739, 741, 760, 761, 776, 791, 817, 819, 839],
                          [  0,  28,  35,  53,  53,  72,  72,  87,  87, 113, 113, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 693)
        self.assertEqual(hsp.target.annotations["end"], 839)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 153))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({693: 'EVSLLSKALKLYPGGTKNRWNVIANSIKTKNVKEVIKKAKEMFENETLKNLSKN...SVE'}, length=859)",
        )
        self.assertEqual(hsp.target.id, "gi|68075771|ref|XP_679805.1|")
        self.assertEqual(hsp.target.name, "XP_679805")
        self.assertEqual(
            hsp.target.description,
            "DNA-binding chaperone, putative [Plasmodium berghei] >gi|56500634|emb|CAH98046.1| DNA-binding chaperone, putative [Plasmodium berghei]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++ LL KA+ L+P GT +RW VIAN +         +  K+VI KAK + + +   +   +  + AFD FK ++ GV+ + DN      +                       P T E Q L E+AL  +P  + T ER   +A  +  R  E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|680757       693 EVSLLSKALKLYPGGTKNRWNVIANSIK-------TKNVKEVIKKAKEMFENETLKNLSK
                  0 ...||.||..|.|.||..||.||||...-------....|.||.|||......--.....
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLD--PHQKD

gi|680757       746 NFEESAFDNFKNQNKGVMKKIDNKLDKREYKHINDQNNISSAHSSDNNSEQKKPWTHEEQ
                 60 .....|||.||...-||....||.......---------------........|.|.|.|
gi|134736        58 DINKKAFDKFKKEH-GVVPQADNATPSERF---------------XGPYTDFTPXTTEXQ

gi|680757       806 MLLEKALMKHPATIPTKERLKLVANELKTRSVE 839
                120 .|.|.||...|--..|.||....|.....|..| 153
gi|134736       102 KLXEQALNTYP--VNTXERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[34]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|66358504|ref|XP_626430.1|")
        self.assertEqual(hit.target.name, "XP_626430")
        self.assertEqual(
            hit.target.description,
            "zuotin related factor-1 like protein with a DNAJ domain at the N-terminus and 2 SANT domains, orthologs in plasmodium [Cryptosporidium parvum] >gi|46227848|gb|EAK88768.1| zuotin related factor-1 like protein with a DNAJ domain at the N-terminus and 2 SANT domains, orthologs in plasmodium [Cryptosporidium parvum]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=677)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 122.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 51.6026)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.36581e-05)
        self.assertEqual(hsp.annotations["identity"], 40)
        self.assertEqual(hsp.annotations["positive"], 66)
        self.assertEqual(hsp.annotations["gaps"], 20)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[512, 571, 571, 577, 578, 599, 606, 614, 621, 637, 639, 656],
                          [  0,  59,  62,  68,  68,  89,  89,  97,  97, 113, 113, 130]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 390)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 512)
        self.assertEqual(hsp.target.annotations["end"], 656)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 147))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...PGR')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({512: 'EMSLLAKALQKYPGGYKNRWDMISEYLKNTKTKEQILTKVKELSESEKLAKLSN...PGK'}, length=677)",
        )
        self.assertEqual(hsp.target.id, "gi|66358504|ref|XP_626430.1|")
        self.assertEqual(hsp.target.name, "XP_626430")
        self.assertEqual(
            hsp.target.description,
            "zuotin related factor-1 like protein with a DNAJ domain at the N-terminus and 2 SANT domains, orthologs in plasmodium [Cryptosporidium parvum] >gi|46227848|gb|EAK88768.1| zuotin related factor-1 like protein with a DNAJ domain at the N-terminus and 2 SANT domains, orthologs in plasmodium [Cryptosporidium parvum]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++ LL KA+  +P G  +RW++I+ Y+    +     T    + +++ L KL    K+D    AFD F +   GV+ + DN      + G          D T         T + Q   E+AL  YP  + + ERW  I+  +PG+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|663585       512 EMSLLAKALQKYPGGYKNRWDMISEYLKNTKTKEQILTKVKELSESEKLAKLSNEVKED-
                  0 ...||.||....|.|...||..|..|...........|..........|.||....|.|-
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|663585       571 --SAFDTFIQSNKGVLKKFDNIPDVRDYSGTSIINNSAKNDATQQKKEIDLWTRDQQCSL
                 60 --.|||.|-....||....||........|-------...|.|..-------|...|...
gi|134736        60 NKKAFDKF-KKEHGVVPQADNATPSERFXG-------PYTDFTPX-------TTEXQKLX

gi|663585       629 ERALKQYPSSLPSNERWELISSCIPGK 656
                120 |.||..||--....|||..|....||. 147
gi|134736       105 EQALNTYP--VNTXERWXXIAVAVPGR 130
""",
        )
        hit = hits[35]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|50923697|ref|XP_472209.1|")
        self.assertEqual(hit.target.name, "XP_472209")
        self.assertEqual(
            hit.target.description,
            "OSJNBa0083D01.10 [Oryza sativa (japonica cultivar-group)] >gi|39546277|emb|CAE05696.3| OSJNBa0083D01.10 [Oryza sativa (japonica cultivar-group)]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=256)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 121.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 51.2174)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.78381e-05)
        self.assertEqual(hsp.annotations["identity"], 45)
        self.assertEqual(hsp.annotations["positive"], 74)
        self.assertEqual(hsp.annotations["gaps"], 58)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 71,  98,  98, 113, 115, 120, 120, 140, 149, 158, 184, 194, 201,
                           207, 208, 233],
                          [  0,  27,  33,  48,  48,  53,  60,  80,  80,  89,  89,  99,  99,
                           105, 105, 130]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 390)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 71)
        self.assertEqual(hsp.target.annotations["end"], 233)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 175))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...PGR')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({71: 'EIELLRKAIQKYPKGTSRRWEVVSEFIGTGRSVEEILKATKTVLLQKPDSTKAF...PGK'}, length=256)",
        )
        self.assertEqual(hsp.target.id, "gi|50923697|ref|XP_472209.1|")
        self.assertEqual(hsp.target.name, "XP_472209")
        self.assertEqual(
            hsp.target.description,
            "OSJNBa0083D01.10 [Oryza sativa (japonica cultivar-group)] >gi|39546277|emb|CAE05696.3| OSJNBa0083D01.10 [Oryza sativa (japonica cultivar-group)]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+++LL KA+  +P GT+ RWEV++ ++      G  R+ ++++   K+  LQK D       + KAFD F ++    P   +           P+E+  G                          P ++ TP  T       E Q L   QAL  +P +  +RW  +A AVPG+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|509236        71 EIELLRKAIQKYPKGTSRRWEVVSEFI------GTGRSVEEILKATKTVLLQKPD-----
                  0 ...||.||....|.||..||||.....------|..|.........|.--|||.|-----
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKS--LQKLDPHQKD

gi|509236       120 --STKAFDSFLEKRKPAPSIASPLSVRTETVGLPTEKAAGNASSKAPAQHASSKTSDEKA
                 60 --..||||.|.......|....---------..|.|...|--------------------
gi|134736        58 DINKKAFDKFKKEHGVVPQADN---------ATPSERFXG--------------------

gi|509236       178 AAPAPAPVSNGTPSGTADPEAWSEAQVLALVQALKAFPKDASQRWERVAAAVPGK 233
                120 ------|....||..|-------|.|.|.-.|||...|.....||...|.||||. 175
gi|134736        89 ------PYTDFTPXTT-------EXQKLX-EQALNTYPVNTXERWXXIAVAVPGR 130
""",
        )
        hit = hits[36]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|1572812|gb|AAB09157.1|")
        self.assertEqual(hit.target.name, "AAB09157")
        self.assertEqual(
            hit.target.description,
            "Dnaj domain (prokaryotic heat shock protein) protein 11 [Caenorhabditis elegans] >gi|17540268|ref|NP_501006.1| DNaJ domain (prokaryotic heat shock protein) family member (dnj-11) [Caenorhabditis elegans]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=589)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 118.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 50.0618)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.9739e-05)
        self.assertEqual(hsp.annotations["identity"], 42)
        self.assertEqual(hsp.annotations["positive"], 61)
        self.assertEqual(hsp.annotations["gaps"], 26)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[459, 489, 491, 496, 497, 515, 515, 533, 533, 539, 539, 572],
                          [  0,  30,  30,  35,  35,  53,  67,  85,  92,  98, 100, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 459)
        self.assertEqual(hsp.target.annotations["end"], 572)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 136))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({459: 'EIQLLVKASNTFPPGTVERWVQIADYINEHRKDSTGLPPKTEKQVIKQCKAVQT...SKK'}, length=589)",
        )
        self.assertEqual(hsp.target.id, "gi|1572812|gb|AAB09157.1|")
        self.assertEqual(hsp.target.name, "AAB09157")
        self.assertEqual(
            hsp.target.description,
            "Dnaj domain (prokaryotic heat shock protein) protein 11 [Caenorhabditis elegans] >gi|17540268|ref|NP_501006.1| DNaJ domain (prokaryotic heat shock protein) family member (dnj-11) [Caenorhabditis elegans]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++QLL+KA N FP GT  RW  IA+Y+N H   S+G+  +T K VI + K++Q ++               K       Q   A P E       D    T   QK  E A+  +  +  ERW  I+  V  + K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|157281       459 EIQLLVKASNTFPPGTVERWVQIADYINEHRKDSTGLPPKTEKQVIKQCKAVQTMN----
                  0 ..|||.||.|.||.||..||..||.|.|.|--.|.|.-..|.|.||...|..|...----
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIH--SSSGV-KRTAKDVIGKAKSLQKLDPHQK

gi|157281       515 ----------VKLPSTTQNQLGTALPDE-------DVWSAT--EQKTLEDAIKKHKSSDP
                 60 ----------.|.......|...|.|.|-------|....|--.||..|.|.........
gi|134736        57 DDINKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTX

gi|157281       556 ERWEKISTEVGTKSKK 572
                120 |||..|...|....|. 136
gi|134736       117 ERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[37]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|23486826|gb|EAA20902.1|")
        self.assertEqual(hit.target.name, "EAA20902")
        self.assertEqual(
            hit.target.description, "zuotin related factor-1 [Plasmodium yoelii yoelii]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=848)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 117.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 49.6766)
        self.assertAlmostEqual(hsp.annotations["evalue"], 5.19008e-05)
        self.assertEqual(hsp.annotations["identity"], 41)
        self.assertEqual(hsp.annotations["positive"], 68)
        self.assertEqual(hsp.annotations["gaps"], 15)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[682, 725, 725, 734, 745, 760, 761, 806, 808, 828],
                          [  0,  43,  44,  53,  53,  68,  68, 113, 113, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 682)
        self.assertEqual(hsp.target.annotations["end"], 828)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 147))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({682: 'EISLLSKALKLYPGGTKDRWTVIANSIKTKNVKEVIKKAKEMFENETLKNLSKN...SVE'}, length=848)",
        )
        self.assertEqual(hsp.target.id, "gi|23486826|gb|EAA20902.1|")
        self.assertEqual(hsp.target.name, "EAA20902")
        self.assertEqual(
            hsp.target.description, "zuotin related factor-1 [Plasmodium yoelii yoelii]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++ LL KA+ L+P GT  RW VIAN +   +   V + AK++  + ++L+ L             +Q   + KK  DK  K+E+  +   +N + +           P T E Q L E+AL  +P  + T ER   ++  +  R  E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|234868       682 EISLLSKALKLYPGGTKDRWTVIANSIKTKNVKEVIKKAKEMF-ENETLKNLSKNFEESA
                  0 ...||.||..|.|.||..||.||||.........|...||...-....|..|.-------
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLD-------

gi|234868       741 FDNFKNQNKGVMKKIDDKLDKREYKDINDQNNLSSAHSSDNNSEQKKPWTHEEQMLLEKA
                 60 ----..|.....||..||.-|.|........|...............|.|.|.|.|.|.|
gi|134736        53 ----PHQKDDINKKAFDKF-KKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQA

gi|234868       801 LMKHPATIPTKERLKLVSNELKTRSVE 828
                120 |...|--..|.||..........|..| 147
gi|134736       108 LNTYP--VNTXERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[38]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|67615225|ref|XP_667421.1|")
        self.assertEqual(hit.target.name, "XP_667421")
        self.assertEqual(
            hit.target.description,
            "zuotin related factor-1 [Cryptosporidium hominis] >gi|54658551|gb|EAL37186.1| zuotin related factor-1 [Cryptosporidium hominis]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=673)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 116.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 49.2914)
        self.assertAlmostEqual(hsp.annotations["evalue"], 6.77845e-05)
        self.assertEqual(hsp.annotations["identity"], 39)
        self.assertEqual(hsp.annotations["positive"], 65)
        self.assertEqual(hsp.annotations["gaps"], 20)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[508, 567, 567, 573, 574, 595, 602, 610, 617, 633, 635, 652],
                          [  0,  59,  62,  68,  68,  89,  89,  97,  97, 113, 113, 130]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 390)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 508)
        self.assertEqual(hsp.target.annotations["end"], 652)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 147))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...PGR')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({508: 'EMSLLAKALQKYPGGYKNRWDMISEYLKNTKTKEQILTKVKELSESEKLAKLSN...PGK'}, length=673)",
        )
        self.assertEqual(hsp.target.id, "gi|67615225|ref|XP_667421.1|")
        self.assertEqual(hsp.target.name, "XP_667421")
        self.assertEqual(
            hsp.target.description,
            "zuotin related factor-1 [Cryptosporidium hominis] >gi|54658551|gb|EAL37186.1| zuotin related factor-1 [Cryptosporidium hominis]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++ LL KA+  +P G  +RW++I+ Y+    +     T    + +++ L KL    K++    AFD F +   GV+ + DN      + G          D T         T + Q   E+AL  YP  +   ERW  I+  +PG+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|676152       508 EMSLLAKALQKYPGGYKNRWDMISEYLKNTKTKEQILTKVKELSESEKLAKLSNEVKEE-
                  0 ...||.||....|.|...||..|..|...........|..........|.||....|..-
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|676152       567 --SAFDTFIQSNKGVLKKFDNIPDVRDYSGTSIINNSAKNDVTHQKKEIDLWTRDQQCSL
                 60 --.|||.|-....||....||........|-------...|.|..-------|...|...
gi|134736        60 NKKAFDKF-KKEHGVVPQADNATPSERFXG-------PYTDFTPX-------TTEXQKLX

gi|676152       625 ERALKQYPSSLPLNERWELISSCIPGK 652
                120 |.||..||--....|||..|....||. 147
gi|134736       105 EQALNTYP--VNTXERWXXIAVAVPGR 130
""",
        )
        hit = hits[39]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|70951177|ref|XP_744850.1|")
        self.assertEqual(hit.target.name, "XP_744850")
        self.assertEqual(
            hit.target.description,
            "DNA-binding chaperone, putative [Plasmodium chabaudi] >gi|56524970|emb|CAH80605.1| DNA-binding chaperone, putative [Plasmodium chabaudi]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=621)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 116.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 49.2914)
        self.assertAlmostEqual(hsp.annotations["evalue"], 6.77845e-05)
        self.assertEqual(hsp.annotations["identity"], 43)
        self.assertEqual(hsp.annotations["positive"], 69)
        self.assertEqual(hsp.annotations["gaps"], 27)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[455, 483, 483, 501, 503, 522, 523, 538, 547, 555, 561, 579, 581,
                           601],
                          [  0,  28,  35,  53,  53,  72,  72,  87,  87,  95,  95, 113, 113,
                           133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 455)
        self.assertEqual(hsp.target.annotations["end"], 601)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 153))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({455: 'EISLLSKALKLYPGGTKNRWTVIANSIKTKNVKEVIKKTKEMFENETLKNLSKN...TVE'}, length=621)",
        )
        self.assertEqual(hsp.target.id, "gi|70951177|ref|XP_744850.1|")
        self.assertEqual(hsp.target.name, "XP_744850")
        self.assertEqual(
            hsp.target.description,
            "DNA-binding chaperone, putative [Plasmodium chabaudi] >gi|56524970|emb|CAH80605.1| DNA-binding chaperone, putative [Plasmodium chabaudi]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++ LL KA+ L+P GT +RW VIAN +         +  K+VI K K + + +   +   +  + AFD FK ++ GV+ + D+      +           P +         P T E Q L E+AL  +P  + T ER   +A  +  R  E",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|709511       455 EISLLSKALKLYPGGTKNRWTVIANSIK-------TKNVKEVIKKTKEMFENETLKNLSK
                  0 ...||.||..|.|.||..||.||||...-------....|.||.|.|......--.....
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLD--PHQKD

gi|709511       508 NFEESAFDNFKNQNKGVMKKIDDKLDKREYKHINDQNHVSNPNSSDNNSEQKKPWTHEEQ
                 60 .....|||.||...-||....|........---------..|.....------|.|.|.|
gi|134736        58 DINKKAFDKFKKEH-GVVPQADNATPSERF---------XGPYTDFT------PXTTEXQ

gi|709511       568 MLLEKALMKHPATIPTKERLKLVANELKTRTVE 601
                120 .|.|.||...|--..|.||....|.....|..| 153
gi|134736       102 KLXEQALNTYP--VNTXERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[40]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|8978347|dbj|BAA98200.1|")
        self.assertEqual(hit.target.name, "BAA98200")
        self.assertEqual(
            hit.target.description,
            "cell division related protein-like [Arabidopsis thaliana] >gi|15239928|ref|NP_196229.1| DNAJ heat shock N-terminal domain-containing protein / cell division protein-related [Arabidopsis thaliana]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=663)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 113.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 48.1358)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000151008)
        self.assertEqual(hsp.annotations["identity"], 45)
        self.assertEqual(hsp.annotations["positive"], 73)
        self.assertEqual(hsp.annotations["gaps"], 56)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[480, 507, 507, 522, 524, 529, 529, 537, 553, 558, 560, 563, 567,
                           574, 593, 640],
                          [  0,  27,  33,  48,  48,  53,  60,  68,  68,  73,  73,  76,  76,
                            83,  83, 130]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 390)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 480)
        self.assertEqual(hsp.target.annotations["end"], 640)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 173))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...PGR')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({480: 'EIDMLRKGTTKFPKGTSQRWEVISEYIGTGRSVEEILKATKTVLLQKPDSAKAF...PGK'}, length=663)",
        )
        self.assertEqual(hsp.target.id, "gi|8978347|dbj|BAA98200.1|")
        self.assertEqual(hsp.target.name, "BAA98200")
        self.assertEqual(
            hsp.target.description,
            "cell division related protein-like [Arabidopsis thaliana] >gi|15239928|ref|NP_196229.1| DNAJ heat shock N-terminal domain-containing protein / cell division protein-related [Arabidopsis thaliana]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++ +L K    FP GT+ RWEVI+ Y+      G  R+ ++++   K+  LQK D       + KAFD F                ++E G  ++P    + +N+T                    SE      +D    +   ++   QAL T+P  T +RW  +A AVPG+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|897834       480 EIDMLRKGTTKFPKGTSQRWEVISEYI------GTGRSVEEILKATKTVLLQKPD-----
                  0 ....|.|....||.||..|||||..|.------|..|.........|.--|||.|-----
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKS--LQKLDPHQKD

gi|897834       529 --SAKAFDSFLENRKPAASINSPLSTREELGEPIIPTKAHEDNNSTKTETAEQNGKTKEN
                 60 --..||||.|----------------..|.|--..|----...|.|.-------------
gi|134736        58 DINKKAFDKF----------------KKEHG--VVP----QADNATP-------------

gi|897834       587 NNSNGNSEPAAASGSDPDGWSAVQERALVQALKTFPKETNQRWERVATAVPGK 640
                120 ------||.......|.............|||.|.|..|..||...|.||||. 173
gi|134736        83 ------SERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGR 130
""",
        )
        hit = hits[41]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|31442292|dbj|BAC77346.1|")
        self.assertEqual(hit.target.name, "BAC77346")
        self.assertEqual(
            hit.target.description, "gonidia forming protein GlsA [Lilium longiflorum]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=655)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 111.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 47.3654)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000257581)
        self.assertEqual(hsp.annotations["identity"], 44)
        self.assertEqual(hsp.annotations["positive"], 72)
        self.assertEqual(hsp.annotations["gaps"], 54)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[475, 502, 502, 517, 519, 524, 524, 536, 553, 562, 568, 579, 580,
                           586, 601, 633],
                          [  0,  27,  33,  48,  48,  53,  60,  72,  72,  81,  81,  92,  92,
                            98,  98, 130]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 390)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 475)
        self.assertEqual(hsp.target.annotations["end"], 633)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 171))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...PGR')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({475: 'EIELLRKGIQKYQKGTSRRWEVISEYIGTGRSVEEILKATKTVLLQKPDSSKAF...PGK'}, length=655)",
        )
        self.assertEqual(hsp.target.id, "gi|31442292|dbj|BAC77346.1|")
        self.assertEqual(hsp.target.name, "BAC77346")
        self.assertEqual(
            hsp.target.description, "gonidia forming protein GlsA [Lilium longiflorum]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+++LL K +  +  GT+ RWEVI+ Y+      G  R+ ++++   K+  LQK D       + KAFD F ++                  G   +A +A      TPS     P   D TP +                  ++   QAL T+P +  +RW  +A A+PG+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|314422       475 EIELLRKGIQKYQKGTSRRWEVISEYI------GTGRSVEEILKATKTVLLQKPD-----
                  0 ...||.|.......||..|||||..|.------|..|.........|.--|||.|-----
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKS--LQKLDPHQKD

gi|314422       524 --SSKAFDSFLEKRKPAKAIVSPLTTRLESEGSTVEAGDASSKSIPTPSLSSSSPEKPDG
                 60 --..||||.|....-----------------|....|..|------|||.....|..-|.
gi|134736        58 DINKKAFDKFKKEH-----------------GVVPQADNA------TPSERFXGPYT-DF

gi|314422       582 TPVSLPNGVPSVPEQDTWSATQERALIQALKTFPKDVNQRWERVAAAIPGK 633
                120 ||..---------------........|||.|.|.....||...|.|.||. 171
gi|134736        94 TPXT---------------TEXQKLXEQALNTYPVNTXERWXXIAVAVPGR 130
""",
        )
        hit = hits[42]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|55243553|gb|EAA06445.2|")
        self.assertEqual(hit.target.name, "EAA06445")
        self.assertEqual(
            hit.target.description,
            "ENSANGP00000012466 [Anopheles gambiae str. PEST] >gi|58380898|ref|XP_310857.2| ENSANGP00000012466 [Anopheles gambiae str. PEST]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=480)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 108.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 46.2098)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000573831)
        self.assertEqual(hsp.annotations["identity"], 38)
        self.assertEqual(hsp.annotations["positive"], 63)
        self.assertEqual(hsp.annotations["gaps"], 18)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[310, 337, 337, 355, 358, 367, 367, 392, 395, 420, 421, 439],
                          [  0,  27,  35,  53,  53,  62,  65,  90,  90, 115, 115, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 310)
        self.assertEqual(hsp.target.annotations["end"], 439)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 140))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({310: 'DLVELVRLVKKYPGGTSNRWELIAELMQRSVEEITYMAAKMKECGYRLPHQSEG...SKE'}, length=480)",
        )
        self.assertEqual(hsp.target.id, "gi|55243553|gb|EAA06445.2|")
        self.assertEqual(hsp.target.name, "EAA06445")
        self.assertEqual(
            hsp.target.description,
            "ENSANGP00000012466 [Anopheles gambiae str. PEST] >gi|58380898|ref|XP_310857.2| ENSANGP00000012466 [Anopheles gambiae str. PEST]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DL  L++ V  +P GT++RWE+IA  M        +R+ +++   A  +++     PHQ +       D+     G    A   T +    G        +  T + Q+  E A+  YP +   +RW  IA +VPG+ KE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|552435       310 DLVELVRLVKKYPGGTSNRWELIAELM--------QRSVEEITYMAAKMKECGYRLPHQS
                  0 ||..|...|...|.||..|||.||..|--------.|........|.......---|||.
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLD---PHQK

gi|552435       362 EGARG---DESGGSSGAPVAAKVKTKTRDTAGGGELAASGSTWTQQQQQALEVAIQKYPK
                 60 .....---|......|....|...|......|.---.......|...|...|.|...||.
gi|134736        57 DDINKKAFDKFKKEHGVVPQADNATPSERFXGP---YTDFTPXTTEXQKLXEQALNTYPV

gi|552435       419 SANYDRWQKIANSVPGKSKE 439
                120 .-...||..||..|||..|| 140
gi|134736       114 N-TXERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[43]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|66816347|ref|XP_642183.1|")
        self.assertEqual(hit.target.name, "XP_642183")
        self.assertEqual(
            hit.target.description,
            "DNAJ heat shock N-terminal domain-containing protein [Dictyostelium discoideum] >gi|60470282|gb|EAL68262.1| myb domain-containing protein [Dictyostelium discoideum]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=634)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 107.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 45.8246)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.000749446)
        self.assertEqual(hsp.annotations["identity"], 46)
        self.assertEqual(hsp.annotations["positive"], 65)
        self.assertEqual(hsp.annotations["gaps"], 51)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[450, 477, 477, 493, 493, 502, 509, 520, 553, 563, 564, 614],
                          [  0,  27,  34,  50,  53,  62,  62,  73,  73,  83,  83, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 450)
        self.assertEqual(hsp.target.annotations["end"], 614)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 174))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({450: 'ELHLLAKAIQKFPPGVTKRWESVASCIPTRSLKDVIAKAKTSQPTQQQSFSKPE...SKK'}, length=634)",
        )
        self.assertEqual(hsp.target.id, "gi|66816347|ref|XP_642183.1|")
        self.assertEqual(hsp.target.name, "XP_642183")
        self.assertEqual(
            hsp.target.description,
            "DNAJ heat shock N-terminal domain-containing protein [Dictyostelium discoideum] >gi|60470282|gb|EAL68262.1| myb domain-containing protein [Dictyostelium discoideum]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+L LL KA+  FP G   RWE +A+ +         R+ KDVI KAK+ Q   P Q+   +K         +DK K + G                                      D A P +++     T     T E QKL E+AL     N  +RW  IA  +  + K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|668163       450 ELHLLAKAIQKFPPGVTKRWESVASCI-------PTRSLKDVIAKAKTSQ---PTQQQSF
                  0 .|.||.||...||.|...|||..|...-------..|..||||.|||..|---|.|....
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|668163       500 SKPEAAPSGSDYDKLKAKVGHMEIKSELSSKVDLGQYPVGTTSNGTESTTTATAPSTVDT
                 60 .|-------...||.|...|---------------------------------.....|.
gi|134736        60 NK-------KAFDKFKKEHG---------------------------------VVPQADN

gi|668163       560 AKPAAKKETTTTTASVEWTPEEQKLLEEALQKVDKNAEDRWDQIAARLGTKSKK 614
                120 |.|-........|.....|.|.|||.|.||.....|...||..||.......|. 174
gi|134736        80 ATP-SERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[44]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|56789643|gb|AAH88511.1|")
        self.assertEqual(hit.target.name, "AAH88511")
        self.assertEqual(
            hit.target.description,
            "DnaJ (Hsp40) homolog, subfamily C, member 1 [Xenopus tropicalis] >gi|58332554|ref|NP_001011351.1| DnaJ (Hsp40) homolog, subfamily C, member 1 [Xenopus tropicalis]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=535)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 104.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 44.669)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00166959)
        self.assertEqual(hsp.annotations["identity"], 30)
        self.assertEqual(hsp.annotations["positive"], 44)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[410, 514],
                          [  0, 104]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 87)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 410)
        self.assertEqual(hsp.target.annotations["end"], 514)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 104))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('HSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({410: 'HSTAARVRKRKSTKGATDAVPPLRGEAEEKVRSRRQRDFDVEQEAEELADSDSD...SKE'}, length=535)",
        )
        self.assertEqual(hsp.target.id, "gi|56789643|gb|AAH88511.1|")
        self.assertEqual(hsp.target.name, "AAH88511")
        self.assertEqual(
            hsp.target.description,
            "DnaJ (Hsp40) homolog, subfamily C, member 1 [Xenopus tropicalis] >gi|58332554|ref|NP_001011351.1| DnaJ (Hsp40) homolog, subfamily C, member 1 [Xenopus tropicalis]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "HS++   R  K   G   ++  L    ++ +  +    F  E      AD+ + + +     +     T   QKL E AL  YP  T ERW  IA  VPG+ KE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|567896       410 HSTAARVRKRKSTKGATDAVPPLRGEAEEKVRSRRQRDFDVEQEAEELADSDSDTRKKEQ
                  0 ||.....|..|...|.......|...............|..|......||..........
gi|134736         0 HSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERFXG

gi|567896       470 GRSLEELWTQNQQKLLELALQQYPKGTGERWDKIAKCVPGKSKE 514
                 60 ........|...|||.|.||..||..|.|||..||..|||..|| 104
gi|134736        60 PYTDFTPXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXKE 104
""",
        )
        hit = hits[45]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|72108961|ref|XP_794997.1|")
        self.assertEqual(hit.target.name, "XP_794997")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to DnaJ homolog subfamily C member 1 (DnaJ protein homolog MTJ1) [Strongylocentrotus purpuratus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=327)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 103.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 44.2838)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00218055)
        self.assertEqual(hsp.annotations["identity"], 35)
        self.assertEqual(hsp.annotations["positive"], 53)
        self.assertEqual(hsp.annotations["gaps"], 32)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[201, 227, 227, 244, 244, 266, 266, 302],
                          [  0,  26,  34,  51,  65,  87,  97, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 201)
        self.assertEqual(hsp.target.annotations["end"], 302)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 133))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({201: 'EVSSLVKIMSKYPGGTTDRWTRIAEEIKKPVDVVTKKAKQLKSQKFATNVDAAA...TKE'}, length=327)",
        )
        self.assertEqual(hsp.target.id, "gi|72108961|ref|XP_794997.1|")
        self.assertEqual(hsp.target.name, "XP_794997")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to DnaJ homolog subfamily C member 1 (DnaJ protein homolog MTJ1) [Strongylocentrotus purpuratus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++  L+K ++ +P GT  RW  IA          +K+    V  KAK L+                KF        Q D    S  +          +   QK+ E+A+  YP +  +RW  IA +VPG+ KE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|721089       201 EVSSLVKIMSKYPGGTTDRWTRIAEE--------IKKPVDVVTKKAKQLKS---------
                  0 ....|.|.....|.||..||..||..--------.|.....|..|||.|..---------
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|721089       244 -----QKFATNVDAAAQDDLVNESCAW----------SQRQQKVLEKAMQVYPRSVDDRW
                 60 -----.||........|.|....|...----------....||..|.|...||.....||
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERW

gi|721089       289 DKIADSVPGKTKE 302
                120 ..||..|||..|| 133
gi|134736       120 XXIAVAVPGRXKE 133
""",
        )
        hit = hits[46]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|73948752|ref|XP_858895.1|")
        self.assertEqual(hit.target.name, "XP_858895")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 1 isoform 2 [Canis familiaris]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=412)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 102.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 43.8986)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00284789)
        self.assertEqual(hsp.annotations["identity"], 48)
        self.assertEqual(hsp.annotations["positive"], 76)
        self.assertEqual(hsp.annotations["gaps"], 75)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[187, 214, 230, 243, 262, 281, 281, 297, 311, 324, 325, 330, 353,
                           391],
                          [  0,  27,  27,  40,  40,  59,  61,  77,  77,  90,  90,  95,  95,
                           133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 187)
        self.assertEqual(hsp.target.annotations["end"], 391)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 206))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({187: 'DLSQLTRSMVKFPGGTPGRWEKIAHELGRSVTDVTTKAKQLKDSVTCSSGMVRL...SKE'}, length=412)",
        )
        self.assertEqual(hsp.target.id, "gi|73948752|ref|XP_858895.1|")
        self.assertEqual(hsp.target.name, "XP_858895")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 1 isoform 2 [Canis familiaris]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DL  L +++  FP GT  RWE IA+ +                ++  SSG+ R ++                   D+I + +  ++    +++D  ++  D+  ++  VVP+              A    P E+F G    DF                        P T   QKL E AL  YP  + +RW  IA  VP + KE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|739487       187 DLSQLTRSMVKFPGGTPGRWEKIAHELGRSVTDVTTKAKQLKDSVTCSSGMVRLSELKST
                  0 ||..|......||.||..|||.||...----------------....|||..|...----
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYM----------------NIHSSSGVKRTAK----

gi|739487       247 AQNSRPTKAPTALPDDIITQREDAKQAREEEEED--EQEDDEEGEQEAVVPESRPRRRRP
                 60 ---------------|.|...............|--....|.......|||.--------
gi|134736        40 ---------------DVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQ--------

gi|739487       305 TRPPEAAAKVEPEEKFRGKRQKDFDISEQKESSDEESQKKDRTRAAEEPWTQSQQKLLEL
                120 ------|....|.|.|.|.-..||.-----------------------|.|...|||.|.
gi|134736        77 ------ADNATPSERFXGP-YTDFT-----------------------PXTTEXQKLXEQ

gi|739487       365 ALQQYPKGSSDRWDKIAKCVPSKSKE 391
                180 ||..||.....||..||..||...|| 206
gi|134736       107 ALNTYPVNTXERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[47]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|73948750|ref|XP_849482.1|")
        self.assertEqual(hit.target.name, "XP_849482")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 1 isoform 1 [Canis familiaris]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=561)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 102.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 43.8986)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00284789)
        self.assertEqual(hsp.annotations["identity"], 48)
        self.assertEqual(hsp.annotations["positive"], 76)
        self.assertEqual(hsp.annotations["gaps"], 75)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[336, 363, 379, 392, 411, 430, 430, 446, 460, 473, 474, 479, 502,
                           540],
                          [  0,  27,  27,  40,  40,  59,  61,  77,  77,  90,  90,  95,  95,
                           133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 336)
        self.assertEqual(hsp.target.annotations["end"], 540)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 206))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({336: 'DLSQLTRSMVKFPGGTPGRWEKIAHELGRSVTDVTTKAKQLKDSVTCSSGMVRL...SKE'}, length=561)",
        )
        self.assertEqual(hsp.target.id, "gi|73948750|ref|XP_849482.1|")
        self.assertEqual(hsp.target.name, "XP_849482")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 1 isoform 1 [Canis familiaris]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DL  L +++  FP GT  RWE IA+ +                ++  SSG+ R ++                   D+I + +  ++    +++D  ++  D+  ++  VVP+              A    P E+F G    DF                        P T   QKL E AL  YP  + +RW  IA  VP + KE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|739487       336 DLSQLTRSMVKFPGGTPGRWEKIAHELGRSVTDVTTKAKQLKDSVTCSSGMVRLSELKST
                  0 ||..|......||.||..|||.||...----------------....|||..|...----
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYM----------------NIHSSSGVKRTAK----

gi|739487       396 AQNSRPTKAPTALPDDIITQREDAKQAREEEEED--EQEDDEEGEQEAVVPESRPRRRRP
                 60 ---------------|.|...............|--....|.......|||.--------
gi|134736        40 ---------------DVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQ--------

gi|739487       454 TRPPEAAAKVEPEEKFRGKRQKDFDISEQKESSDEESQKKDRTRAAEEPWTQSQQKLLEL
                120 ------|....|.|.|.|.-..||.-----------------------|.|...|||.|.
gi|134736        77 ------ADNATPSERFXGP-YTDFT-----------------------PXTTEXQKLXEQ

gi|739487       514 ALQQYPKGSSDRWDKIAKCVPSKSKE 540
                180 ||..||.....||..||..||...|| 206
gi|134736       107 ALNTYPVNTXERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[48]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|66514203|ref|XP_624533.1|")
        self.assertEqual(hit.target.name, "XP_624533")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to ENSANGP00000012466 [Apis mellifera]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=431)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 101.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 43.5134)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00371946)
        self.assertEqual(hsp.annotations["identity"], 40)
        self.assertEqual(hsp.annotations["positive"], 59)
        self.assertEqual(hsp.annotations["gaps"], 21)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[297, 325, 325, 338, 338, 346, 346, 364, 364, 393, 394, 411],
                          [  0,  28,  36,  49,  56,  64,  67,  85,  87, 116, 116, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 297)
        self.assertEqual(hsp.target.annotations["end"], 411)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 134))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({297: 'DILELIKLVKKYPSGTSERWDKIADAMNRTVFEVTHMAKKIKDEGLKPGTSVEE...SKD'}, length=431)",
        )
        self.assertEqual(hsp.target.id, "gi|66514203|ref|XP_624533.1|")
        self.assertEqual(hsp.target.name, "XP_624533")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to ENSANGP00000012466 [Apis mellifera]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "D+  LIK V  +P+GT+ RW+ IA+ MN        RT  +V   AK +       KD+  K        E  VV +    T +        + +  + + Q+  E AL  YP  T  +RW  IA  V G+ K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|665142       297 DILELIKLVKKYPSGTSERWDKIADAMN--------RTVFEVTHMAKKI-------KDEG
                  0 |...|||.|...|.||..||..||..||--------||...|...||..-------||..
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|665142       342 LKPG---TSVEETVVEERSKKTKTR--AEIVDNISEWSQQQQRALEAALIKYPKGTSTDR
                 60 .|..---...|..||......|...--..............|...|.||..||..|-..|
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNT-XER

gi|665142       397 WEKIANCVEGKSKD 411
                120 |..||..|.|..|. 134
gi|134736       119 WXXIAVAVPGRXKE 133
""",
        )
        hit = hits[49]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|9758732|dbj|BAB09170.1|")
        self.assertEqual(hit.target.name, "BAB09170")
        self.assertEqual(
            hit.target.description, "unnamed protein product [Arabidopsis thaliana]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=352)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 98.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 42.3578)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00828609)
        self.assertEqual(hsp.annotations["identity"], 37)
        self.assertEqual(hsp.annotations["positive"], 60)
        self.assertEqual(hsp.annotations["gaps"], 18)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[206, 230, 230, 277, 277, 287, 287, 300, 305, 330],
                          [  0,  24,  30,  77,  83,  93,  94, 107, 107, 132]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 396)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 206)
        self.assertEqual(hsp.target.annotations["end"], 330)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 137))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...RXK')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({206: 'EIEILKKQLIKHPAGKPGRWETVASAFGGRYKTENVIKKAKEIGEKKIYESDDY...KSK'}, length=352)",
        )
        self.assertEqual(hsp.target.id, "gi|9758732|dbj|BAB09170.1|")
        self.assertEqual(hsp.target.name, "BAB09170")
        self.assertEqual(
            hsp.target.description, "unnamed protein product [Arabidopsis thaliana]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++++L K +   PAG   RWE +A      S+ G +   ++VI KAK + +   ++ DD  +   ++   +  +V +      +E   G   D    T E     E      AL  +P     RW  IA AVPG+ K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|975873       206 EIEILKKQLIKHPAGKPGRWETVA------SAFGGRYKTENVIKKAKEIGEKKIYESDDY
                  0 ....|.|.....|||...|||..|------|..|.......||.|||..........||.
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|975873       260 AQFLKNRKASDPRLVDE------NEENSGAGGD-AEGTKEIWSNGEDIALLNALKAFPKE
                 60 ..............|..------.|...|...|-...|.|.....|.-----||...|..
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQ-----ALNTYPVN

gi|975873       313 AAMRWEKIAAAVPGKSK 330
                120 ...||..||.||||..| 137
gi|134736       115 TXERWXXIAVAVPGRXK 132
""",
        )
        hit = hits[50]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|13605893|gb|AAK32932.1|")
        self.assertEqual(hit.target.name, "AAK32932")
        self.assertEqual(
            hit.target.description,
            "AT5g45420/MFC19_9 [Arabidopsis thaliana] >gi|18491137|gb|AAL69537.1| AT5g45420/MFC19_9 [Arabidopsis thaliana] >gi|26450023|dbj|BAC42132.1| unknown protein [Arabidopsis thaliana] >gi|18422552|ref|NP_568645.1| myb family transcription factor [Arabidopsis thaliana]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=309)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 98.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 42.3578)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.00828609)
        self.assertEqual(hsp.annotations["identity"], 37)
        self.assertEqual(hsp.annotations["positive"], 60)
        self.assertEqual(hsp.annotations["gaps"], 18)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[163, 187, 187, 234, 234, 244, 244, 257, 262, 287],
                          [  0,  24,  30,  77,  83,  93,  94, 107, 107, 132]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 396)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 163)
        self.assertEqual(hsp.target.annotations["end"], 287)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 137))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...RXK')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({163: 'EIEILKKQLIKHPAGKPGRWETVASAFGGRYKTENVIKKAKEIGEKKIYESDDY...KSK'}, length=309)",
        )
        self.assertEqual(hsp.target.id, "gi|13605893|gb|AAK32932.1|")
        self.assertEqual(hsp.target.name, "AAK32932")
        self.assertEqual(
            hsp.target.description,
            "AT5g45420/MFC19_9 [Arabidopsis thaliana] >gi|18491137|gb|AAL69537.1| AT5g45420/MFC19_9 [Arabidopsis thaliana] >gi|26450023|dbj|BAC42132.1| unknown protein [Arabidopsis thaliana] >gi|18422552|ref|NP_568645.1| myb family transcription factor [Arabidopsis thaliana]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++++L K +   PAG   RWE +A      S+ G +   ++VI KAK + +   ++ DD  +   ++   +  +V +      +E   G   D    T E     E      AL  +P     RW  IA AVPG+ K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|136058       163 EIEILKKQLIKHPAGKPGRWETVA------SAFGGRYKTENVIKKAKEIGEKKIYESDDY
                  0 ....|.|.....|||...|||..|------|..|.......||.|||..........||.
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|136058       217 AQFLKNRKASDPRLVDE------NEENSGAGGD-AEGTKEIWSNGEDIALLNALKAFPKE
                 60 ..............|..------.|...|...|-...|.|.....|.-----||...|..
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQ-----ALNTYPVN

gi|136058       270 AAMRWEKIAAAVPGKSK 287
                120 ...||..||.||||..| 137
gi|134736       115 TXERWXXIAVAVPGRXK 132
""",
        )
        hit = hits[51]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|76683316|gb|AAK26135.2|")
        self.assertEqual(hit.target.name, "AAK26135")
        self.assertEqual(
            hit.target.description,
            "Hypothetical protein F54F2.9 [Caenorhabditis elegans]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=300)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 96.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 41.5874)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0141339)
        self.assertEqual(hsp.annotations["identity"], 30)
        self.assertEqual(hsp.annotations["positive"], 54)
        self.assertEqual(hsp.annotations["gaps"], 26)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[183, 200, 200, 216, 216, 241, 241, 279],
                          [  0,  17,  25,  41,  44,  69,  84, 122]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 33)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 183)
        self.assertEqual(hsp.target.annotations["end"], 279)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 122))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('FPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAF...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({183: 'YPAGTPNRWEQMGRVLNRSAEDVIAMAGKMKQMKQEDYTKLLMTTIQQSVPVEE...TKK'}, length=300)",
        )
        self.assertEqual(hsp.target.id, "gi|76683316|gb|AAK26135.2|")
        self.assertEqual(hsp.target.name, "AAK26135")
        self.assertEqual(
            hsp.target.description,
            "Hypothetical protein F54F2.9 [Caenorhabditis elegans]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+PAGT +RWE +   +N        R+A+DVI  A  ++++   +++D  K      ++   V  ++++                 +   QK  E AL  YP  T ERW  I+  +  + K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|766833       183 YPAGTPNRWEQMGRVLN--------RSAEDVIAMAGKMKQM---KQEDYTKLLMTTIQQS
                  0 .||||..|||......|--------|.|.|||..|......---...|..|.........
gi|134736         0 FPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKE

gi|766833       232 VPVEEKSED---------------DWSQAEQKAFETALQKYPKGTDERWERISEEIGSKT
                 60 ..|......---------------......||..|.||..||..|.|||..|........
gi|134736        60 HGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRX

gi|766833       277 KK 279
                120 |. 122
gi|134736       120 KE 122
""",
        )
        hit = hits[52]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|17553612|ref|NP_498949.1|")
        self.assertEqual(hit.target.name, "NP_498949")
        self.assertEqual(
            hit.target.description,
            "F54F2.9 [Caenorhabditis elegans] >gi|465911|sp|P34454|YMA9_CAEEL Hypothetical protein F54F2.9 in chromosome III",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=275)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 96.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 41.5874)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0141339)
        self.assertEqual(hsp.annotations["identity"], 30)
        self.assertEqual(hsp.annotations["positive"], 54)
        self.assertEqual(hsp.annotations["gaps"], 26)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[158, 175, 175, 191, 191, 216, 216, 254],
                          [  0,  17,  25,  41,  44,  69,  84, 122]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 33)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 158)
        self.assertEqual(hsp.target.annotations["end"], 254)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 122))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('FPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAF...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({158: 'YPAGTPNRWEQMGRVLNRSAEDVIAMAGKMKQMKQEDYTKLLMTTIQQSVPVEE...TKK'}, length=275)",
        )
        self.assertEqual(hsp.target.id, "gi|17553612|ref|NP_498949.1|")
        self.assertEqual(hsp.target.name, "NP_498949")
        self.assertEqual(
            hsp.target.description,
            "F54F2.9 [Caenorhabditis elegans] >gi|465911|sp|P34454|YMA9_CAEEL Hypothetical protein F54F2.9 in chromosome III",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+PAGT +RWE +   +N        R+A+DVI  A  ++++   +++D  K      ++   V  ++++                 +   QK  E AL  YP  T ERW  I+  +  + K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|175536       158 YPAGTPNRWEQMGRVLN--------RSAEDVIAMAGKMKQM---KQEDYTKLLMTTIQQS
                  0 .||||..|||......|--------|.|.|||..|......---...|..|.........
gi|134736         0 FPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKE

gi|175536       207 VPVEEKSED---------------DWSQAEQKAFETALQKYPKGTDERWERISEEIGSKT
                 60 ..|......---------------......||..|.||..||..|.|||..|........
gi|134736        60 HGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRX

gi|175536       252 KK 254
                120 |. 122
gi|134736       120 KE 122
""",
        )
        hit = hits[53]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|7293551|gb|AAF48924.1|")
        self.assertEqual(hit.target.name, "AAF48924")
        self.assertEqual(
            hit.target.description,
            "CG7556-PA [Drosophila melanogaster] >gi|21428836|gb|AAM50137.1| GH07340p [Drosophila melanogaster] >gi|24643180|ref|NP_573354.1| CG7556-PA [Drosophila melanogaster]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=522)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 95.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 41.2022)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0184595)
        self.assertEqual(hsp.annotations["identity"], 38)
        self.assertEqual(hsp.annotations["positive"], 59)
        self.assertEqual(hsp.annotations["gaps"], 16)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[307, 335, 341, 376, 376, 381, 381, 401, 401, 420, 421, 438],
                          [  0,  28,  28,  63,  65,  70,  74,  94,  97, 116, 116, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 307)
        self.assertEqual(hsp.target.annotations["end"], 438)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 140))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({307: 'DLTELIRLVKKYPGGAGSRWNTIAESMNRSVQEVTFMAAKMKENGYRIPGQTDS...TKE'}, length=522)",
        )
        self.assertEqual(hsp.target.id, "gi|7293551|gb|AAF48924.1|")
        self.assertEqual(hsp.target.name, "AAF48924")
        self.assertEqual(
            hsp.target.description,
            "CG7556-PA [Drosophila melanogaster] >gi|21428836|gb|AAM50137.1| GH07340p [Drosophila melanogaster] >gi|24643180|ref|NP_573354.1| CG7556-PA [Drosophila melanogaster]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DL  LI+ V  +P G  SRW  IA  MN         ++ +K     + G+  S+ +    +     +K  +K KK          A+  +    P T++   T E Q+  E A+  Y      +RW  IA +VP + KE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|729355       307 DLTELIRLVKKYPGGAGSRWNTIAESMNRSVQEVTFMAAKMKENGYRIPGQTDSVAEALV
                  0 ||..||..|...|.|..|||..||..||------.......|.......|...|......
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMN------IHSSSGVKRTAKDVIGKAKSLQKLDP

gi|729355       367 QESQQAQRK--EKVKK----AAANAGASAEKSMLIPETNW---TQEQQRALEAAIVKYRK
                 60 ........|--.|.||----......|........|.|..---|.|.|...|.|...|..
gi|134736        54 HQKDDINKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPV

gi|729355       418 TAGGDRWQKIANSVPEKTKE 438
                120 ..-..||..||..||...|| 140
gi|134736       114 NT-XERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[54]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|39585088|emb|CAE62739.1|")
        self.assertEqual(hit.target.name, "CAE62739")
        self.assertEqual(
            hit.target.description,
            "Hypothetical protein CBG06902 [Caenorhabditis briggsae]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=535)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 95.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 41.2022)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0184595)
        self.assertEqual(hsp.annotations["identity"], 31)
        self.assertEqual(hsp.annotations["positive"], 52)
        self.assertEqual(hsp.annotations["gaps"], 26)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[419, 436, 436, 452, 452, 468, 468, 478, 478, 515],
                          [  0,  17,  25,  41,  44,  60,  63,  73,  85, 122]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 33)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 419)
        self.assertEqual(hsp.target.annotations["end"], 515)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 122))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('FPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAF...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({419: 'YPAGTPNRWEQMGRVLNRTPEDVIAMAGKMKQMKQEDYTKLLMSSIQQSVPSEE...TKK'}, length=535)",
        )
        self.assertEqual(hsp.target.id, "gi|39585088|emb|CAE62739.1|")
        self.assertEqual(hsp.target.name, "CAE62739")
        self.assertEqual(
            hsp.target.description,
            "Hypothetical protein CBG06902 [Caenorhabditis briggsae]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+PAGT +RWE +   +N        RT +DVI  A  ++++   +++D  K      ++    VP  + +                +   QK  E AL  YP  T ERW  I+  +  + K+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|395850       419 YPAGTPNRWEQMGRVLN--------RTPEDVIAMAGKMKQM---KQEDYTKLLMSSIQQS
                  0 .||||..|||......|--------||..|||..|......---...|..|.........
gi|134736         0 FPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKE

gi|395850       468 ---VPSEEKSEDD------------WSQSEQKAFELALQKYPKGTDERWERISEEIGTKT
                 60 ---||........------------.....||..|.||..||..|.|||..|........
gi|134736        60 HGVVPQADNATPSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRX

gi|395850       513 KK 515
                120 |. 122
gi|134736       120 KE 122
""",
        )
        hit = hits[55]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|54643310|gb|EAL32054.1|")
        self.assertEqual(hit.target.name, "EAL32054")
        self.assertEqual(
            hit.target.description, "GA20437-PA [Drosophila pseudoobscura]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=529)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 95.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 41.2022)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0184595)
        self.assertEqual(hsp.annotations["identity"], 40)
        self.assertEqual(hsp.annotations["positive"], 59)
        self.assertEqual(hsp.annotations["gaps"], 12)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[301, 329, 335, 356, 357, 370, 370, 387, 388, 415, 416, 440],
                          [  0,  28,  28,  49,  49,  62,  65,  82,  82, 109, 109, 133]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 301)
        self.assertEqual(hsp.target.annotations["end"], 440)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 142))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({301: 'DLTELIRLVKKHPGGAGSRWNTIAESMNRSVQEVTFMAAKMKENGYRIPGQTES...TKE'}, length=529)",
        )
        self.assertEqual(hsp.target.id, "gi|54643310|gb|EAL32054.1|")
        self.assertEqual(hsp.target.name, "EAL32054")
        self.assertEqual(
            hsp.target.description, "GA20437-PA [Drosophila pseudoobscura]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DL  LI+ V   P G  SRW  IA  MN         ++ +K     + G+ +S+ + L    ++ + K   +K KK   V   A   T  S          T  T E Q+  E A+       + +RW  IA +VP + KE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|546433       301 DLTELIRLVKKHPGGAGSRWNTIAESMNRSVQEVTFMAAKMKENGYRIPGQTESVAENLV
                  0 ||..||..|...|.|..|||..||..||------.......|.......|...|.-..|.
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMN------IHSSSGVKRTAKDVIGKAKSL-QKLD

gi|546433       361 QESQEAVRK---EKVKKSASVTATAAPGTVTSSSEKSMLIPETNWTQEQQRALEAAIVKN
                 60 ........|---.|.||...|...|...|-.|..........|..|.|.|...|.|.-..
gi|134736        53 PHQKDDINKKAFDKFKKEHGVVPQADNAT-PSERFXGPYTDFTPXTTEXQKLXEQAL-NT

gi|546433       418 RKAASGDRWQKIANSVPEKTKE 440
                120 .......||..||..||...|| 142
gi|134736       111 YPVNTXERWXXIAVAVPGRXKE 133
""",
        )
        hit = hits[56]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|49119322|gb|AAH73404.1|")
        self.assertEqual(hit.target.name, "AAH73404")
        self.assertEqual(hit.target.description, "MGC80867 protein [Xenopus laevis]")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=534)")
        self.assertEqual(len(hit), 2)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 93.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 40.4318)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0314871)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 20)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[481, 513],
                          [  0,  32]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 303)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 481)
        self.assertEqual(hsp.target.annotations["end"], 513)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 32))
        self.assertEqual(repr(hsp.query.seq), "Seq('QKLXEQALNTYPVNTXERWXXIAVAVPGRXKE')")
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({481: 'QKLLELALQQYPKGTGERWDKIAKCVPGKSKE'}, length=534)",
        )
        self.assertEqual(hsp.target.id, "gi|49119322|gb|AAH73404.1|")
        self.assertEqual(hsp.target.name, "AAH73404")
        self.assertEqual(hsp.target.description, "MGC80867 protein [Xenopus laevis]")
        self.assertEqual(hsp.annotations["midline"], "QKL E AL  YP  T ERW  IA  VPG+ KE")
        self.assertEqual(
            str(hsp),
            """\
gi|491193       481 QKLLELALQQYPKGTGERWDKIAKCVPGKSKE 513
                  0 |||.|.||..||..|.|||..||..|||..||  32
gi|134736         0 QKLXEQALNTYPVNTXERWXXIAVAVPGRXKE  32
""",
        )
        hsp = hit[1]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.57476)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[315, 343, 343, 357],
                          [  0,  28,  36,  50]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 150)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 315)
        self.assertEqual(hsp.target.annotations["end"], 357)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 50))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQ')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({315: 'DLSQLTRNMTKFPGGTPGRWEKIAHELGRSVTDVTTKAKQLK'}, length=534)",
        )
        self.assertEqual(hsp.target.id, "gi|49119322|gb|AAH73404.1|")
        self.assertEqual(hsp.target.name, "AAH73404")
        self.assertEqual(hsp.target.description, "MGC80867 protein [Xenopus laevis]")
        self.assertEqual(
            hsp.annotations["midline"],
            "DL  L + +  FP GT  RWE IA+ +         R+  DV  KAK L+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|491193       315 DLSQLTRNMTKFPGGTPGRWEKIAHELG--------RSVTDVTTKAKQLK 357
                  0 ||..|......||.||..|||.||....--------|...||..|||.|.  50
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQ  50
""",
        )
        hit = hits[57]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|16507118|gb|AAL24046.1|")
        self.assertEqual(hit.target.name, "AAL24046")
        self.assertEqual(hit.target.description, "DnaJ-like protein [Homo sapiens]")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=275)")
        self.assertEqual(len(hit), 2)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 92.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 40.0466)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0411235)
        self.assertEqual(hsp.annotations["identity"], 27)
        self.assertEqual(hsp.annotations["positive"], 43)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[164, 203, 204, 254],
                          [  0,  39,  39,  89]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 132)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 164)
        self.assertEqual(hsp.target.annotations["end"], 254)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 90))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('KAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXT...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({164: 'RRKPARLLEATAKPEPEEKSRAKRQKDFDIAEQNESSDEESLRKERARSAEEPW...SKE'}, length=275)",
        )
        self.assertEqual(hsp.target.id, "gi|16507118|gb|AAL24046.1|")
        self.assertEqual(hsp.target.name, "AAL24046")
        self.assertEqual(hsp.target.description, "DnaJ-like protein [Homo sapiens]")
        self.assertEqual(
            hsp.annotations["midline"],
            "+ K  + L+   K +  +K+  K +K+  +  Q +++   S R     +   P T   QKL E AL  YP  + +RW  IA  VP + KE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|165071       164 RRKPARLLEATAKPEPEEKSRAKRQKDFDIAEQNESSDEESLRKERARSAEEPWTQNQQK
                  0 ..|....|....|.....|...|..|......|......-|.|.........|.|...||
gi|134736         0 KAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATP-SERFXGPYTDFTPXTTEXQK

gi|165071       224 LLELALQQYPRGSSDRWDKIARCVPSKSKE 254
                 60 |.|.||..||.....||..||..||...||  90
gi|134736        59 LXEQALNTYPVNTXERWXXIAVAVPGRXKE  89
""",
        )
        hsp = hit[1]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.57476)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 26)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[54, 82, 82, 96],
                          [ 0, 28, 36, 50]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 150)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 54)
        self.assertEqual(hsp.target.annotations["end"], 96)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 50))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQ')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({54: 'DLSQLTRSMVKFPGGTPGRWEKIAHELGRSVTDVTTKAKQLK'}, length=275)",
        )
        self.assertEqual(hsp.target.id, "gi|16507118|gb|AAL24046.1|")
        self.assertEqual(hsp.target.name, "AAL24046")
        self.assertEqual(hsp.target.description, "DnaJ-like protein [Homo sapiens]")
        self.assertEqual(
            hsp.annotations["midline"],
            "DL  L +++  FP GT  RWE IA+ +         R+  DV  KAK L+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|165071        54 DLSQLTRSMVKFPGGTPGRWEKIAHELG--------RSVTDVTTKAKQLK 96
                  0 ||..|......||.||..|||.||....--------|...||..|||.|. 50
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQ 50
""",
        )
        hit = hits[58]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|10438787|dbj|BAB15343.1|")
        self.assertEqual(hit.target.name, "BAB15343")
        self.assertEqual(
            hit.target.description, "unnamed protein product [Homo sapiens]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=340)")
        self.assertEqual(len(hit), 2)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 92.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 40.0466)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0411235)
        self.assertEqual(hsp.annotations["identity"], 27)
        self.assertEqual(hsp.annotations["positive"], 43)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[229, 268, 269, 319],
                          [  0,  39,  39,  89]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 132)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 229)
        self.assertEqual(hsp.target.annotations["end"], 319)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 90))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('KAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXT...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({229: 'RRKPARLLEATAKPEPEEKSRAKRQKDFDIAEQNESSDEESLRKERARSAEEPW...SKE'}, length=340)",
        )
        self.assertEqual(hsp.target.id, "gi|10438787|dbj|BAB15343.1|")
        self.assertEqual(hsp.target.name, "BAB15343")
        self.assertEqual(
            hsp.target.description, "unnamed protein product [Homo sapiens]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+ K  + L+   K +  +K+  K +K+  +  Q +++   S R     +   P T   QKL E AL  YP  + +RW  IA  VP + KE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|104387       229 RRKPARLLEATAKPEPEEKSRAKRQKDFDIAEQNESSDEESLRKERARSAEEPWTQNQQK
                  0 ..|....|....|.....|...|..|......|......-|.|.........|.|...||
gi|134736         0 KAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATP-SERFXGPYTDFTPXTTEXQK

gi|104387       289 LLELALQQYPRGSSDRWDKIARCVPSKSKE 319
                 60 |.|.||..||.....||..||..||...||  90
gi|134736        59 LXEQALNTYPVNTXERWXXIAVAVPGRXKE  89
""",
        )
        hsp = hit[1]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.57476)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 26)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[119, 147, 147, 161],
                          [  0,  28,  36,  50]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 150)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 119)
        self.assertEqual(hsp.target.annotations["end"], 161)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 50))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQ')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({119: 'DLSQLTRSMVKFPGGTPGRWEKIAHELGRSVTDVTTKAKQLK'}, length=340)",
        )
        self.assertEqual(hsp.target.id, "gi|10438787|dbj|BAB15343.1|")
        self.assertEqual(hsp.target.name, "BAB15343")
        self.assertEqual(
            hsp.target.description, "unnamed protein product [Homo sapiens]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DL  L +++  FP GT  RWE IA+ +         R+  DV  KAK L+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|104387       119 DLSQLTRSMVKFPGGTPGRWEKIAHELG--------RSVTDVTTKAKQLK 161
                  0 ||..|......||.||..|||.||....--------|...||..|||.|.  50
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQ  50
""",
        )
        hit = hits[59]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|21361912|ref|NP_071760.2|")
        self.assertEqual(hit.target.name, "NP_071760")
        self.assertEqual(
            hit.target.description,
            "DnaJ (Hsp40) homolog, subfamily C, member 1 [Homo sapiens] >gi|55960003|emb|CAI13668.1| DnaJ (Hsp40) homolog, subfamily C, member 1 (DNAJC1)(DNAJL1) [Homo sapiens] >gi|55664633|emb|CAH73412.1| DnaJ (Hsp40) homolog, subfamily C, member 1 (DNAJC1)(DNAJL1) [Homo sapiens] >gi|37904711|gb|AAP50497.1| MTJ1-like protein [Homo sapiens] >gi|14041831|dbj|BAB55004.1| unnamed protein product [Homo sapiens] >gi|27805464|sp|Q96KC8|DNJC1_HUMAN DnaJ homolog subfamily C member 1",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=554)")
        self.assertEqual(len(hit), 2)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 92.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 40.0466)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0411235)
        self.assertEqual(hsp.annotations["identity"], 27)
        self.assertEqual(hsp.annotations["positive"], 43)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[443, 482, 483, 533],
                          [  0,  39,  39,  89]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 132)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 443)
        self.assertEqual(hsp.target.annotations["end"], 533)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 90))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('KAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXT...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({443: 'RRKPARLLEATAKPEPEEKSRAKRQKDFDIAEQNESSDEESLRKERARSAEEPW...SKE'}, length=554)",
        )
        self.assertEqual(hsp.target.id, "gi|21361912|ref|NP_071760.2|")
        self.assertEqual(hsp.target.name, "NP_071760")
        self.assertEqual(
            hsp.target.description,
            "DnaJ (Hsp40) homolog, subfamily C, member 1 [Homo sapiens] >gi|55960003|emb|CAI13668.1| DnaJ (Hsp40) homolog, subfamily C, member 1 (DNAJC1)(DNAJL1) [Homo sapiens] >gi|55664633|emb|CAH73412.1| DnaJ (Hsp40) homolog, subfamily C, member 1 (DNAJC1)(DNAJL1) [Homo sapiens] >gi|37904711|gb|AAP50497.1| MTJ1-like protein [Homo sapiens] >gi|14041831|dbj|BAB55004.1| unnamed protein product [Homo sapiens] >gi|27805464|sp|Q96KC8|DNJC1_HUMAN DnaJ homolog subfamily C member 1",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+ K  + L+   K +  +K+  K +K+  +  Q +++   S R     +   P T   QKL E AL  YP  + +RW  IA  VP + KE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|213619       443 RRKPARLLEATAKPEPEEKSRAKRQKDFDIAEQNESSDEESLRKERARSAEEPWTQNQQK
                  0 ..|....|....|.....|...|..|......|......-|.|.........|.|...||
gi|134736         0 KAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATP-SERFXGPYTDFTPXTTEXQK

gi|213619       503 LLELALQQYPRGSSDRWDKIARCVPSKSKE 533
                 60 |.|.||..||.....||..||..||...||  90
gi|134736        59 LXEQALNTYPVNTXERWXXIAVAVPGRXKE  89
""",
        )
        hsp = hit[1]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.57476)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 26)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[333, 361, 361, 375],
                          [  0,  28,  36,  50]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 150)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 333)
        self.assertEqual(hsp.target.annotations["end"], 375)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 50))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQ')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({333: 'DLSQLTRSMVKFPGGTPGRWEKIAHELGRSVTDVTTKAKQLK'}, length=554)",
        )
        self.assertEqual(hsp.target.id, "gi|21361912|ref|NP_071760.2|")
        self.assertEqual(hsp.target.name, "NP_071760")
        self.assertEqual(
            hsp.target.description,
            "DnaJ (Hsp40) homolog, subfamily C, member 1 [Homo sapiens] >gi|55960003|emb|CAI13668.1| DnaJ (Hsp40) homolog, subfamily C, member 1 (DNAJC1)(DNAJL1) [Homo sapiens] >gi|55664633|emb|CAH73412.1| DnaJ (Hsp40) homolog, subfamily C, member 1 (DNAJC1)(DNAJL1) [Homo sapiens] >gi|37904711|gb|AAP50497.1| MTJ1-like protein [Homo sapiens] >gi|14041831|dbj|BAB55004.1| unnamed protein product [Homo sapiens] >gi|27805464|sp|Q96KC8|DNJC1_HUMAN DnaJ homolog subfamily C member 1",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DL  L +++  FP GT  RWE IA+ +         R+  DV  KAK L+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|213619       333 DLSQLTRSMVKFPGGTPGRWEKIAHELG--------RSVTDVTTKAKQLK 375
                  0 ||..|......||.||..|||.||....--------|...||..|||.|.  50
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQ  50
""",
        )
        hit = hits[60]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|55633547|ref|XP_507688.1|")
        self.assertEqual(hit.target.name, "XP_507688")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 1 [Pan troglodytes]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=171)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 92.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 40.0466)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0411235)
        self.assertEqual(hsp.annotations["identity"], 27)
        self.assertEqual(hsp.annotations["positive"], 43)
        self.assertEqual(hsp.annotations["gaps"], 1)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 60,  99, 100, 150],
                          [  0,  39,  39,  89]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 132)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 60)
        self.assertEqual(hsp.target.annotations["end"], 150)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 90))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('KAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERFXGPYTDFTPXT...XKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({60: 'RRKPARLLEATAKPEPEEKSRAKRQKDFDIAEQNESSDEESLRKERARSAEEPW...SKE'}, length=171)",
        )
        self.assertEqual(hsp.target.id, "gi|55633547|ref|XP_507688.1|")
        self.assertEqual(hsp.target.name, "XP_507688")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 1 [Pan troglodytes]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+ K  + L+   K +  +K+  K +K+  +  Q +++   S R     +   P T   QKL E AL  YP  + +RW  IA  VP + KE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|556335        60 RRKPARLLEATAKPEPEEKSRAKRQKDFDIAEQNESSDEESLRKERARSAEEPWTQNQQK
                  0 ..|....|....|.....|...|..|......|......-|.|.........|.|...||
gi|134736         0 KAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATP-SERFXGPYTDFTPXTTEXQK

gi|556335       120 LLELALQQYPRGSSDRWDKIARCVPSKSKE 150
                 60 |.|.||..||.....||..||..||...||  90
gi|134736        59 LXEQALNTYPVNTXERWXXIAVAVPGRXKE  89
""",
        )
        hit = hits[61]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|34905190|ref|NP_913942.1|")
        self.assertEqual(hit.target.name, "NP_913942")
        self.assertEqual(
            hit.target.description,
            "myb-like protein [Oryza sativa (japonica cultivar-group)] >gi|51964708|ref|XP_507138.1| PREDICTED P0498E12.114 gene product [Oryza sativa (japonica cultivar-group)] >gi|28812079|dbj|BAC65017.1| myb-like protein [Oryza sativa (japonica cultivar-group)]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=325)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 91.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 39.6614)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0537089)
        self.assertEqual(hsp.annotations["identity"], 38)
        self.assertEqual(hsp.annotations["positive"], 60)
        self.assertEqual(hsp.annotations["gaps"], 18)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[176, 200, 200, 218, 218, 252, 257, 275, 275, 300],
                          [  0,  24,  30,  48,  54,  88,  88, 106, 107, 132]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 396)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 176)
        self.assertEqual(hsp.target.annotations["end"], 300)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 137))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...RXK')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({176: 'EMDILRRQMVKHPAGEPQRWEKIAAAFGGRRTPESVIRAAKSGGGAAAAGASFD...KTK'}, length=325)",
        )
        self.assertEqual(hsp.target.id, "gi|34905190|ref|NP_913942.1|")
        self.assertEqual(hsp.target.name, "NP_913942")
        self.assertEqual(
            hsp.target.description,
            "myb-like protein [Oryza sativa (japonica cultivar-group)] >gi|51964708|ref|XP_507138.1| PREDICTED P0498E12.114 gene product [Oryza sativa (japonica cultivar-group)] >gi|28812079|dbj|BAC65017.1| myb-like protein [Oryza sativa (japonica cultivar-group)]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++ +L + +   PAG   RWE IA      ++ G +RT + VI  AKS               +FD+F ++   +     AT +         G   D +    + + L   AL  +P +T  RW  +AVAVPG+ K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|349051       176 EMDILRRQMVKHPAGEPQRWEKIA------AAFGGRRTPESVIRAAKS------GGGAAA
                  0 ....|.......|||...|||.||------...|..||...||..|||------......
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|349051       224 AGASFDQFLRKRKPLDPRSEATDAGSGNAGGGGGESGDGSWSAGDDRALLN-ALKEFPKD
                 60 ....||.|............||......-----|...|..........|..-||...|..
gi|134736        60 NKKAFDKFKKEHGVVPQADNATPSERFX-----GPYTDFTPXTTEXQKLXEQALNTYPVN

gi|349051       283 TAMRWEKVAVAVPGKTK 300
                120 |..||...||||||..| 137
gi|134736       115 TXERWXXIAVAVPGRXK 132
""",
        )
        hit = hits[62]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|50732383|ref|XP_418609.1|")
        self.assertEqual(hit.target.name, "XP_418609")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to DnaJ homolog subfamily C member 1 (DnaJ protein homolog MTJ1) [Gallus gallus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=1580)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 91.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 39.6614)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0537089)
        self.assertEqual(hsp.annotations["identity"], 18)
        self.assertEqual(hsp.annotations["positive"], 20)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[1186, 1221],
                          [   0,   35]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 291)
        self.assertEqual(hsp.query.annotations["end"], 396)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 1186)
        self.assertEqual(hsp.target.annotations["end"], 1221)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 35))
        self.assertEqual(
            repr(hsp.query.seq), "Seq('TTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXK')"
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1186: 'TQNQQKLLEMALQQYPKGTSDRWDKIAKCVPGKSK'}, length=1580)",
        )
        self.assertEqual(hsp.target.id, "gi|50732383|ref|XP_418609.1|")
        self.assertEqual(hsp.target.name, "XP_418609")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to DnaJ homolog subfamily C member 1 (DnaJ protein homolog MTJ1) [Gallus gallus]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "T   QKL E AL  YP  T +RW  IA  VPG+ K"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|507323      1186 TQNQQKLLEMALQQYPKGTSDRWDKIAKCVPGKSK 1221
                  0 |...|||.|.||..||..|..||..||..|||..|   35
gi|134736         0 TTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXK   35
""",
        )
        hit = hits[63]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|76632251|ref|XP_587525.2|")
        self.assertEqual(hit.target.name, "XP_587525")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 1, partial [Bos taurus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=501)")
        self.assertEqual(len(hit), 2)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 90.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 39.2762)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.070146)
        self.assertEqual(hsp.annotations["identity"], 20)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[430, 480],
                          [  0,  50]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 249)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 430)
        self.assertEqual(hsp.target.annotations["end"], 480)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 50))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('SERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXKE')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({430: 'SQQRERPRASEEPWTQNQQKLLELALQQYPRGSSDRWDKIAKCVPSKSKE'}, length=501)",
        )
        self.assertEqual(hsp.target.id, "gi|76632251|ref|XP_587525.2|")
        self.assertEqual(hsp.target.name, "XP_587525")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 1, partial [Bos taurus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "S++   P     P T   QKL E AL  YP  + +RW  IA  VP + KE",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|766322       430 SQQRERPRASEEPWTQNQQKLLELALQQYPRGSSDRWDKIAKCVPSKSKE 480
                  0 |.....|.....|.|...|||.|.||..||.....||..||..||...||  50
gi|134736         0 SERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXKE  50
""",
        )
        hsp = hit[1]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.57476)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 26)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[287, 315, 315, 329],
                          [  0,  28,  36,  50]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 150)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 287)
        self.assertEqual(hsp.target.annotations["end"], 329)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 50))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQ')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({287: 'DLSQLTRSMVKFPGGTPGRWEKIAHELGRSVTDVTTKAKQLK'}, length=501)",
        )
        self.assertEqual(hsp.target.id, "gi|76632251|ref|XP_587525.2|")
        self.assertEqual(hsp.target.name, "XP_587525")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to DnaJ (Hsp40) homolog, subfamily C, member 1, partial [Bos taurus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DL  L +++  FP GT  RWE IA+ +         R+  DV  KAK L+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|766322       287 DLSQLTRSMVKFPGGTPGRWEKIAHELG--------RSVTDVTTKAKQLK 329
                  0 ||..|......||.||..|||.||....--------|...||..|||.|.  50
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQ  50
""",
        )
        hit = hits[64]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|33358308|gb|AAQ16626.1|")
        self.assertEqual(hit.target.name, "AAQ16626")
        self.assertEqual(
            hit.target.description, "GlsA-related protein [Chlamydomonas reinhardtii]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=760)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 86.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 37.7354)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.204094)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 27)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[490, 541],
                          [  0,  51]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 153)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 490)
        self.assertEqual(hsp.target.annotations["end"], 541)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 51))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQK')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({490: 'ELRLLDKACNKFPMGTPKRWEAVAGFVRTRTLEEVLLMVKDRQGASATRMK'}, length=760)",
        )
        self.assertEqual(hsp.target.id, "gi|33358308|gb|AAQ16626.1|")
        self.assertEqual(hsp.target.name, "AAQ16626")
        self.assertEqual(
            hsp.target.description, "GlsA-related protein [Chlamydomonas reinhardtii]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+L+LL KA N FP GT  RWE +A ++   +   V    KD  G + +  K",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|333583       490 ELRLLDKACNKFPMGTPKRWEAVAGFVRTRTLEEVLLMVKDRQGASATRMK 541
                  0 .|.||.||.|.||.||..|||..|..........|....||..|......|  51
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQK  51
""",
        )
        hit = hits[65]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|4633127|gb|AAD26632.1|")
        self.assertEqual(hit.target.name, "AAD26632")
        self.assertEqual(
            hit.target.description,
            "GlsA [Volvox carteri f. nagariensis] >gi|4633129|gb|AAD26633.1| GlsA [Volvox carteri f. nagariensis]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=748)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 86.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 37.7354)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.204094)
        self.assertEqual(hsp.annotations["identity"], 22)
        self.assertEqual(hsp.annotations["positive"], 30)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[484, 548],
                          [  0,  64]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 192)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 484)
        self.assertEqual(hsp.target.annotations["end"], 548)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 64))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDP...KKA')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({484: 'ELRLLDKACNKFPMGTPKRWEAVAAFVRTRTLDEVLLMVKDRQGASATRMKAQE...KPA'}, length=748)",
        )
        self.assertEqual(hsp.target.id, "gi|4633127|gb|AAD26632.1|")
        self.assertEqual(hsp.target.name, "AAD26632")
        self.assertEqual(
            hsp.target.description,
            "GlsA [Volvox carteri f. nagariensis] >gi|4633129|gb|AAD26633.1| GlsA [Volvox carteri f. nagariensis]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+L+LL KA N FP GT  RWE +A ++   +   V    KD  G + +  K     K    K A",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|463312       484 ELRLLDKACNKFPMGTPKRWEAVAAFVRTRTLDEVLLMVKDRQGASATRMKAQEDWKGAQ
                  0 .|.||.||.|.||.||..|||..|..........|....||..|......|.....|...
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDI

gi|463312       544 KKPA 548
                 60 .|.|  64
gi|134736        60 NKKA  64
""",
        )
        hit = hits[66]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|7106295|ref|NP_031895.1|")
        self.assertEqual(hit.target.name, "NP_031895")
        self.assertEqual(
            hit.target.description,
            "DnaJ (Hsp40) homolog, subfamily C, member 1 [Mus musculus] >gi|51330487|gb|AAH80300.1| Dnajc1 protein [Mus musculus] >gi|2494160|sp|Q61712|DNJC1_MOUSE DnaJ homolog subfamily C member 1 (DnaJ protein homolog MTJ1) >gi|473847|gb|AAA66349.1| dnaJ-like protein",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=552)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 83.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 36.5798)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.454673)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 19)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[495, 531],
                          [  0,  36]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 291)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 495)
        self.assertEqual(hsp.target.annotations["end"], 531)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 36))
        self.assertEqual(
            repr(hsp.query.seq), "Seq('TTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXKE')"
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({495: 'TQSQQKLLELALQQYPKGASDRWDKIAKCVPSKSKE'}, length=552)",
        )
        self.assertEqual(hsp.target.id, "gi|7106295|ref|NP_031895.1|")
        self.assertEqual(hsp.target.name, "NP_031895")
        self.assertEqual(
            hsp.target.description,
            "DnaJ (Hsp40) homolog, subfamily C, member 1 [Mus musculus] >gi|51330487|gb|AAH80300.1| Dnajc1 protein [Mus musculus] >gi|2494160|sp|Q61712|DNJC1_MOUSE DnaJ homolog subfamily C member 1 (DnaJ protein homolog MTJ1) >gi|473847|gb|AAA66349.1| dnaJ-like protein",
        )
        self.assertEqual(
            hsp.annotations["midline"], "T   QKL E AL  YP    +RW  IA  VP + KE"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|710629       495 TQSQQKLLELALQQYPKGASDRWDKIAKCVPSKSKE 531
                  0 |...|||.|.||..||.....||..||..||...||  36
gi|134736         0 TTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXKE  36
""",
        )
        hit = hits[67]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|62663943|ref|XP_214522.3|")
        self.assertEqual(hit.target.name, "XP_214522")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to dnaJ-like protein [Rattus norvegicus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=565)")
        self.assertEqual(len(hit), 2)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 83.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 36.5798)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.454673)
        self.assertEqual(hsp.annotations["identity"], 17)
        self.assertEqual(hsp.annotations["positive"], 19)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[508, 544],
                          [  0,  36]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 291)
        self.assertEqual(hsp.query.annotations["end"], 399)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 508)
        self.assertEqual(hsp.target.annotations["end"], 544)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 36))
        self.assertEqual(
            repr(hsp.query.seq), "Seq('TTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXKE')"
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({508: 'TQSQQKLLELALQQYPKGASDRWDKIAKCVPSKSKE'}, length=565)",
        )
        self.assertEqual(hsp.target.id, "gi|62663943|ref|XP_214522.3|")
        self.assertEqual(hsp.target.name, "XP_214522")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to dnaJ-like protein [Rattus norvegicus]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "T   QKL E AL  YP    +RW  IA  VP + KE"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|626639       508 TQSQQKLLELALQQYPKGASDRWDKIAKCVPSKSKE 544
                  0 |...|||.|.||..||.....||..||..||...||  36
gi|134736         0 TTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXKE  36
""",
        )
        hsp = hit[1]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.57476)
        self.assertEqual(hsp.annotations["identity"], 19)
        self.assertEqual(hsp.annotations["positive"], 26)
        self.assertEqual(hsp.annotations["gaps"], 8)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[342, 370, 370, 384],
                          [  0,  28,  36,  50]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 150)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 342)
        self.assertEqual(hsp.target.annotations["end"], 384)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 50))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQ')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({342: 'DLSQLTRSMVKFPGGTPGRWEKIAHELGRSVTDVTTKAKELK'}, length=565)",
        )
        self.assertEqual(hsp.target.id, "gi|62663943|ref|XP_214522.3|")
        self.assertEqual(hsp.target.name, "XP_214522")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to dnaJ-like protein [Rattus norvegicus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "DL  L +++  FP GT  RWE IA+ +         R+  DV  KAK L+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|626639       342 DLSQLTRSMVKFPGGTPGRWEKIAHELG--------RSVTDVTTKAKELK 384
                  0 ||..|......||.||..|||.||....--------|...||..|||.|.  50
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQ  50
""",
        )
        hit = hits[68]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|23487909|gb|EAA21175.1|")
        self.assertEqual(hit.target.name, "EAA21175")
        self.assertEqual(
            hit.target.description, "hypothetical protein [Plasmodium yoelii yoelii]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=2172)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 78.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 34.6538)
        self.assertAlmostEqual(hsp.annotations["evalue"], 1.72776)
        self.assertEqual(hsp.annotations["identity"], 27)
        self.assertEqual(hsp.annotations["positive"], 43)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 917,  983,  985, 1022],
                          [   0,   66,   66,  103]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 48)
        self.assertEqual(hsp.query.annotations["end"], 357)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 917)
        self.assertEqual(hsp.target.annotations["end"], 1022)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 105))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('NSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKK...XER')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({917: 'NSEVEAISTNGTKETEEDVELSLDDELVKNTKYLKLELESKEDIRNKIIEELIE...LGR'}, length=2172)",
        )
        self.assertEqual(hsp.target.id, "gi|23487909|gb|EAA21175.1|")
        self.assertEqual(hsp.target.name, "EAA21175")
        self.assertEqual(
            hsp.target.description, "hypothetical protein [Plasmodium yoelii yoelii]"
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "NS  E I+      +   V+ +  D + K     KL+   K+DI  K  ++  + +G +P  +     P++ F   Y DFTP         E  +NT    T  R",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|234879       917 NSEVEAISTNGTKETEEDVELSLDDELVKNTKYLKLELESKEDIRNKIIEELIETNGNLP
                  0 ||..|.|...........|.....|...|.....||....|.||..|.........|..|
gi|134736         0 NSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVP

gi|234879       977 NYEMYPNLPAQCFFLLYYDFTPFIQNNLMGIENVINTLKNTTLGR 1022
                 60 ......--|...|...|.||||.........|...||....|..|  105
gi|134736        60 QADNAT--PSERFXGPYTDFTPXTTEXQKLXEQALNTYPVNTXER  103
""",
        )
        hit = hits[69]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|6688529|emb|CAB65169.1|")
        self.assertEqual(hit.target.name, "CAB65169")
        self.assertEqual(
            hit.target.description, "I-box binding factor [Lycopersicon esculentum]"
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=191)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 77.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 34.2686)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.25652)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 21)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 7, 45],
                          [ 0, 38]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 291)
        self.assertEqual(hsp.query.annotations["end"], 405)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 7)
        self.assertEqual(hsp.target.annotations["end"], 45)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 38))
        self.assertEqual(
            repr(hsp.query.seq), "Seq('TTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXKEGL')"
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({7: 'TRDDDKLFEHGLVLYPENSADRWQLIADHVPGKTADDI'}, length=191)",
        )
        self.assertEqual(hsp.target.id, "gi|6688529|emb|CAB65169.1|")
        self.assertEqual(hsp.target.name, "CAB65169")
        self.assertEqual(
            hsp.target.description, "I-box binding factor [Lycopersicon esculentum]"
        )
        self.assertEqual(
            hsp.annotations["midline"], "T +  KL E  L  YP N+ +RW  IA  VPG+  + +"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|668852         7 TRDDDKLFEHGLVLYPENSADRWQLIADHVPGKTADDI 45
                  0 |....||.|..|..||.|...||..||..|||...... 38
gi|134736         0 TTEXQKLXEQALNTYPVNTXERWXXIAVAVPGRXKEGL 38
""",
        )
        hit = hits[70]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|53729175|ref|ZP_00134015.2|")
        self.assertEqual(hit.target.name, "ZP_00134015")
        self.assertEqual(
            hit.target.description,
            "COG0556: Helicase subunit of the DNA excision repair complex [Actinobacillus pleuropneumoniae serovar 1 str. 4074]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=673)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 75.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.4982)
        self.assertAlmostEqual(hsp.annotations["evalue"], 3.84904)
        self.assertEqual(hsp.annotations["identity"], 25)
        self.assertEqual(hsp.annotations["positive"], 39)
        self.assertEqual(hsp.annotations["gaps"], 10)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[541, 553, 561, 578, 578, 625],
                          [  0,  12,  12,  29,  31,  78]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 102)
        self.assertEqual(hsp.query.annotations["end"], 336)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 541)
        self.assertEqual(hsp.target.annotations["end"], 625)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 86))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('VKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERFX...NTY')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({541: 'IGRAARNLNGKAILYGDRITNSMQKAITETERRREKQQKYNEEHGITPQALNKK...NTY'}, length=673)",
        )
        self.assertEqual(hsp.target.id, "gi|53729175|ref|ZP_00134015.2|")
        self.assertEqual(hsp.target.name, "ZP_00134015")
        self.assertEqual(
            hsp.target.description,
            "COG0556: Helicase subunit of the DNA excision repair complex [Actinobacillus pleuropneumoniae serovar 1 str. 4074]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+ R A+++ GKA         S+QK     +    K+   K+ +EHG+ PQA N    E      TD      +  K+ E++ NTY",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|537291       541 IGRAARNLNGKAILYGDRITNSMQKAITETERRREKQ--QKYNEEHGITPQALNKKVGEL
                  0 ..|.|....|||--------.|.||..........|.--.|...|||..|||.|....|.
gi|134736         0 VKRTAKDVIGKA--------KSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSER

gi|537291       599 LDIGQTDKPKRGKQAVKVEEKSANTY 625
                 60 .....||.........|..|...|||  86
gi|134736        52 FXGPYTDFTPXTTEXQKLXEQALNTY  78
""",
        )
        hit = hits[71]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|56605378|emb|CAI30890.1|")
        self.assertEqual(hit.target.name, "CAI30890")
        self.assertEqual(
            hit.target.description,
            "putative MYB transcription factor [Cucumis sativus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=295)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 73.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.7278)
        self.assertAlmostEqual(hsp.annotations["evalue"], 6.56547)
        self.assertEqual(hsp.annotations["identity"], 14)
        self.assertEqual(hsp.annotations["positive"], 19)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[22, 58],
                          [ 0, 36]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 282)
        self.assertEqual(hsp.query.annotations["end"], 390)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 22)
        self.assertEqual(hsp.target.annotations["end"], 58)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 36))
        self.assertEqual(
            repr(hsp.query.seq), "Seq('TPXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGR')"
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({22: 'TKWTKEENKMFESALAIYDKETPDRWFKVAALIPGK'}, length=295)",
        )
        self.assertEqual(hsp.target.id, "gi|56605378|emb|CAI30890.1|")
        self.assertEqual(hsp.target.name, "CAI30890")
        self.assertEqual(
            hsp.target.description,
            "putative MYB transcription factor [Cucumis sativus]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "T  T E  K+ E AL  Y   T +RW  +A  +PG+"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|566053        22 TKWTKEENKMFESALAIYDKETPDRWFKVAALIPGK 58
                  0 |..|.|..|..|.||..|...|..||...|...||. 36
gi|134736         0 TPXTTEXQKLXEQALNTYPVNTXERWXXIAVAVPGR 36
""",
        )
        hit = hits[72]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|55621752|ref|XP_516961.1|")
        self.assertEqual(hit.target.name, "XP_516961")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to hypothetical protein FLJ35155 [Pan troglodytes]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=2330)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 73.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.7278)
        self.assertAlmostEqual(hsp.annotations["evalue"], 6.56547)
        self.assertEqual(hsp.annotations["identity"], 20)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[1983, 2045],
                          [   0,   62]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 344)
        self.assertEqual(hsp.query.annotations["end"], 530)
        self.assertEqual(hsp.query.annotations["frame"], -3)
        self.assertEqual(hsp.target.annotations["start"], 1983)
        self.assertEqual(hsp.target.annotations["end"], 2045)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 62))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('KKEHPNKKXXXPXPNLHPAXXPGTSFLWLYPXRQSPLXPXXCXPSFXLPGTATA...SXV')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({1983: 'RHENPQTRVGGPPPEGLPGFNSGVMLLNLEAMRQSPLYSRLLEPAQSCQGSAMA...RAV'}, length=2330)",
        )
        self.assertEqual(hsp.target.id, "gi|55621752|ref|XP_516961.1|")
        self.assertEqual(hsp.target.name, "XP_516961")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to hypothetical protein FLJ35155 [Pan troglodytes]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+ E+P  +   P P   P    G   L L   RQSPL      P+    G+A AI  H   V",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|556217      1983 RHENPQTRVGGPPPEGLPGFNSGVMLLNLEAMRQSPLYSRLLEPAQSCQGSAMAIRPHTR
                  0 ..|.|......|.|...|....|...|.|...|||||......|.....|.|.||..|..
gi|134736         0 KKEHPNKKXXXPXPNLHPAXXPGTSFLWLYPXRQSPLXPXXCXPSFXLPGTATAIXXHLS

gi|556217      2043 AV 2045
                 60 .|   62
gi|134736        60 XV   62
""",
        )
        hit = hits[73]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|62662768|ref|XP_214365.3|")
        self.assertEqual(hit.target.name, "XP_214365")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to testis protein TEX15 [Rattus norvegicus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=3081)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 73.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.7278)
        self.assertAlmostEqual(hsp.annotations["evalue"], 6.56547)
        self.assertEqual(hsp.annotations["identity"], 18)
        self.assertEqual(hsp.annotations["positive"], 29)
        self.assertEqual(hsp.annotations["gaps"], 5)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[2208, 2227, 2232, 2259],
                          [   0,   19,   19,   46]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 114)
        self.assertEqual(hsp.query.annotations["end"], 252)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 2208)
        self.assertEqual(hsp.target.annotations["end"], 2259)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 51))
        self.assertEqual(
            repr(hsp.query.seq), "Seq('AKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPS')"
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({2208: 'AKSLVWKEKSCSLLKAHSEKTREAEEINECAFSKLKKIYGVLSKGLNSEPT'}, length=3081)",
        )
        self.assertEqual(hsp.target.id, "gi|62662768|ref|XP_214365.3|")
        self.assertEqual(hsp.target.name, "XP_214365")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to testis protein TEX15 [Rattus norvegicus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "AK ++ K KS   L  H +     ++IN+ AF K KK +GV+ +  N+ P+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|626627      2208 AKSLVWKEKSCSLLKAHSEKTREAEEINECAFSKLKKIYGVLSKGLNSEPT 2259
                  0 ||....|.||...|..|..-----..||..||.|.||..||.....|..|.   51
gi|134736         0 AKDVIGKAKSLQKLDPHQK-----DDINKKAFDKFKKEHGVVPQADNATPS   46
""",
        )
        hit = hits[74]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|56560951|ref|YP_161369.1|")
        self.assertEqual(hit.target.name, "YP_161369")
        self.assertEqual(
            hit.target.description,
            "hypothetical protein BGP084 [Borrelia garinii PBi] >gi|52696592|gb|AAU85934.1| hypothetical protein BGP084 [Borrelia garinii PBi]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=188)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.57476)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 23)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 71, 113],
                          [  0,  42]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 60)
        self.assertEqual(hsp.query.annotations["end"], 186)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 71)
        self.assertEqual(hsp.target.annotations["end"], 113)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 42))
        self.assertEqual(
            repr(hsp.query.seq), "Seq('EVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINK')"
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({71: 'EALSNIKNWVNSAKTKDNINSIIQKISFIQKIDPNNVDDIKK'}, length=188)",
        )
        self.assertEqual(hsp.target.id, "gi|56560951|ref|YP_161369.1|")
        self.assertEqual(hsp.target.name, "YP_161369")
        self.assertEqual(
            hsp.target.description,
            "hypothetical protein BGP084 [Borrelia garinii PBi] >gi|52696592|gb|AAU85934.1| hypothetical protein BGP084 [Borrelia garinii PBi]",
        )
        self.assertEqual(
            hsp.annotations["midline"], "E ++N  N  +S+  K     +I K   +QK+DP+  DDI K"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|565609        71 EALSNIKNWVNSAKTKDNINSIIQKISFIQKIDPNNVDDIKK 113
                  0 |...|..|...|...|......|.|....||.||...|||.|  42
gi|134736         0 EVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINK  42
""",
        )
        hit = hits[75]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|65304064|emb|CAI76443.1|")
        self.assertEqual(hit.target.name, "CAI76443")
        self.assertEqual(
            hit.target.description,
            "DNA-binding chaperone, putative [Theileria annulata]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=655)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.57476)
        self.assertEqual(hsp.annotations["identity"], 14)
        self.assertEqual(hsp.annotations["positive"], 18)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[528, 555],
                          [  0,  27]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 0)
        self.assertEqual(hsp.query.annotations["end"], 81)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 528)
        self.assertEqual(hsp.target.annotations["end"], 555)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 27))
        self.assertEqual(repr(hsp.query.seq), "Seq('DLQLLIKAVNLFPAGTNSRWEVIANYM')")
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({528: 'DLKRLSKGVEINPAGTPGRWNLIAKYV'}, length=655)",
        )
        self.assertEqual(hsp.target.id, "gi|65304064|emb|CAI76443.1|")
        self.assertEqual(hsp.target.name, "CAI76443")
        self.assertEqual(
            hsp.target.description,
            "DNA-binding chaperone, putative [Theileria annulata]",
        )
        self.assertEqual(hsp.annotations["midline"], "DL+ L K V + PAGT  RW +IA Y+")
        self.assertEqual(
            str(hsp),
            """\
gi|653040       528 DLKRLSKGVEINPAGTPGRWNLIAKYV 555
                  0 ||..|.|.|...||||..||..||.|.  27
gi|134736         0 DLQLLIKAVNLFPAGTNSRWEVIANYM  27
""",
        )
        hit = hits[76]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|76657489|ref|XP_593354.2|")
        self.assertEqual(hit.target.name, "XP_593354")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: similar to Dr1 associated protein 1 (negative cofactor 2 alpha) isoform 1 [Bos taurus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=185)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.57476)
        self.assertEqual(hsp.annotations["identity"], 23)
        self.assertEqual(hsp.annotations["positive"], 29)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 95, 144, 144, 161],
                          [  0,  49,  51,  68]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 93)
        self.assertEqual(hsp.query.annotations["end"], 297)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 95)
        self.assertEqual(hsp.target.annotations["end"], 161)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 68))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('SSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSE...XTT')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({95: 'SSGRKNGGMGSKGKDKKLSGTDSEQEDESEDTDSDGEEETPQVPPQASHPPAHF...FTS'}, length=185)",
        )
        self.assertEqual(hsp.target.id, "gi|76657489|ref|XP_593354.2|")
        self.assertEqual(hsp.target.name, "XP_593354")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: similar to Dr1 associated protein 1 (negative cofactor 2 alpha) isoform 1 [Bos taurus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "SSG K       GK K L   D  Q+D+      D  ++   V PQA +  P   F  P T F P T+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|766574        95 SSGRKNGGMGSKGKDKKLSGTDSEQEDESEDTDSDGEEETPQVPPQASH--PPAHFQSPP
                  0 |||.|.......||.|.|...|..|.|.......|.......|.|||..--|...|..|.
gi|134736         0 SSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDKFKKEHGVVPQADNATPSERFXGPY

gi|766574       153 TPFMPFTS 161
                 60 |.|.|.|.  68
gi|134736        60 TDFTPXTT  68
""",
        )
        hit = hits[77]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|72081091|ref|XP_800619.1|")
        self.assertEqual(hit.target.name, "XP_800619")
        self.assertEqual(
            hit.target.description,
            "PREDICTED: hypothetical protein XP_795526 [Strongylocentrotus purpuratus]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=337)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 72.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 32.3426)
        self.assertAlmostEqual(hsp.annotations["evalue"], 8.57476)
        self.assertEqual(hsp.annotations["identity"], 21)
        self.assertEqual(hsp.annotations["positive"], 37)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[105, 121, 123, 132, 133, 172],
                          [  0,  16,  16,  25,  25,  64]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 39)
        self.assertEqual(hsp.query.annotations["end"], 231)
        self.assertEqual(hsp.query.annotations["frame"], 1)
        self.assertEqual(hsp.target.annotations["start"], 105)
        self.assertEqual(hsp.target.annotations["end"], 172)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 67))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq('AGTNSRWEVIANYMNIHSSSGVKRTAKDVIGKAKSLQKLDPHQKDDINKKAFDK...VPQ')",
        )
        self.assertEqual(hsp.query.id, "gi|1347369|gb|G25137.1|G25137")
        self.assertEqual(
            hsp.query.description, "human STS EST48004, sequence tagged site"
        )
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({105: 'SSSNSSSKASASSSNVGASSSSGTKKSDSKSSNESSKSKRDKEDHKEGSINRSK...VKE'}, length=337)",
        )
        self.assertEqual(hsp.target.id, "gi|72081091|ref|XP_800619.1|")
        self.assertEqual(hsp.target.name, "XP_800619")
        self.assertEqual(
            hsp.target.description,
            "PREDICTED: hypothetical protein XP_795526 [Strongylocentrotus purpuratus]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+ +NS  +  A+  N+   SSSG K++ +K     +KS +  + H++  IN+   +K  KEH VV +",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|720810       105 SSSNSSSKASASSSNVGASSSSGTKKSDSKSSNESSKSKRDKEDHKEGSINRSKDEKVSK
                  0 ...||.....|...|.--.||||.|..-.|......||......|....||.....|..|
gi|134736         0 AGTNSRWEVIANYMNI--HSSSGVKRT-AKDVIGKAKSLQKLDPHQKDDINKKAFDKFKK

gi|720810       165 EHRVVKE 172
                 60 ||.||..  67
gi|134736        57 EHGVVPQ  64
""",
        )

    def test_xml_2218_blastp_001(self):
        """Parsing BLASTP 2.2.18+ (xml_2218_blastp_001.xml)."""
        filename = "xml_2218_blastp_001.xml"
        datafile = os.path.join("Blast", filename)
        with open(datafile, "rb") as handle:
            records = Blast.parse(handle)
            self.assertEqual(records.program, "blastp")
            self.assertEqual(records.version, "BLASTP 2.2.18+")
            self.assertEqual(
                records.reference,
                'Altschul, Stephen F., Thomas L. Madden, Alejandro A. SchÃ¤ffer, Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), "Gapped BLAST and PSI-BLAST: a new generation of protein database search programs", Nucleic Acids Res. 25:3389-3402.',
            )
            self.assertEqual(records.db, "nr")
            self.assertIsInstance(records.query, SeqRecord)
            self.assertEqual(records.query.id, "31493")
            self.assertEqual(records.query.description, "unnamed protein product")
            self.assertEqual(repr(records.query.seq), "Seq(None, length=70)")
            self.assertEqual(len(records.param), 4)
            self.assertEqual(records.param["matrix"], "BLOSUM62")
            self.assertAlmostEqual(records.param["expect"], 10.0)
            self.assertEqual(records.param["gap-open"], 11)
            self.assertEqual(records.param["gap-extend"], 1)
            record = next(records)
            self.assertRaises(StopIteration, next, records)
        self.check_xml_2218_blastp_001(record)

        with open(datafile, "rb") as handle:
            record = Blast.read(handle)
            self.check_xml_2218_blastp_001(record)

    def check_xml_2218_blastp_001(self, record):
        self.assertEqual(record.num, 1)
        self.assertIsInstance(record.query, SeqRecord)
        self.assertEqual(record.query.id, "31493")
        self.assertEqual(record.query.description, "unnamed protein product")
        self.assertEqual(repr(record.query.seq), "Seq(None, length=70)")
        self.assertEqual(len(record.stat), 7)
        self.assertEqual(record.stat["db-num"], 15287)
        self.assertEqual(record.stat["db-len"], 7033566)
        self.assertEqual(record.stat["hsp-len"], 0)
        self.assertAlmostEqual(record.stat["eff-space"], 0)
        self.assertAlmostEqual(record.stat["kappa"], 0.041)
        self.assertAlmostEqual(record.stat["lambda"], 0.267)
        self.assertAlmostEqual(record.stat["entropy"], 0.14)
        hits = record.hits
        self.assertEqual(len(hits), 10)

        hit = hits[0]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|151942244|gb|EDN60600.1|")
        self.assertEqual(hit.target.name, "EDN60600")
        self.assertEqual(
            hit.target.description,
            "cytosolic iron-sulfur protein assembly protein [Saccharomyces cerevisiae YJM789]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=330)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0185319)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 27)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[113, 135, 137, 163],
                          [ 14,  36,  36,  62]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 14)
        self.assertEqual(hsp.query.annotations["end"], 62)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 113)
        self.assertEqual(hsp.target.annotations["end"], 163)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 50))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'AWNKDRTQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAP'}, length=70)",
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({113: 'AWSNDGYYLATCSRDKSVWIWETDESGEEYECISVLQEHSQDVKHVIWHP'}, length=330)",
        )
        self.assertEqual(hsp.target.id, "gi|151942244|gb|EDN60600.1|")
        self.assertEqual(hsp.target.name, "EDN60600")
        self.assertEqual(
            hsp.target.description,
            "cytosolic iron-sulfur protein assembly protein [Saccharomyces cerevisiae YJM789]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "AW+ D   +A C  +  V I+E  +SG ++  +  L+EH+  V  + W P",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|151942       113 AWSNDGYYLATCSRDKSVWIWETDESGEEYECISVLQEHSQDVKHVIWHP 163
                  0 ||..|....|.|.....|.|.|--.||........|.||...|....|.|  50
31493            14 AWNKDRTQIAICPNNHEVHIYE--KSGAKWNKVHELKEHNGQVTGIDWAP  62
""",
        )
        hit = hits[1]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|476059|emb|CAA55606.1|")
        self.assertEqual(hit.target.name, "CAA55606")
        self.assertEqual(hit.target.description, "YBR0832 [Saccharomyces cerevisiae]")
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=535)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0185319)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 27)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[222, 255, 255, 278],
                          [ 10,  43,  46,  69]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 10)
        self.assertEqual(hsp.query.annotations["end"], 69)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 222)
        self.assertEqual(hsp.target.annotations["end"], 278)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 59))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({10: 'ISCHAWNKDRTQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAPESNRIVT'}, length=70)",
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({222: 'VTCLAWSHDGNSIVTGVENGELRLWNKTGALLNVLNFHRAPIVSVKWNKDGTHIIS'}, length=535)",
        )
        self.assertEqual(hsp.target.id, "gi|476059|emb|CAA55606.1|")
        self.assertEqual(hsp.target.name, "CAA55606")
        self.assertEqual(hsp.target.description, "YBR0832 [Saccharomyces cerevisiae]")
        self.assertEqual(
            hsp.annotations["midline"],
            "++C AW+ D   I     N E+ ++ K+GA  N    L  H   +  + W  +   I++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|476059       222 VTCLAWSHDGNSIVTGVENGELRLWNKTGALLN---VLNFHRAPIVSVKWNKDGTHIIS
                  0 ..|.||..|...|.....|.|.....|.||..|---.|..|........|......|..
31493            10 ISCHAWNKDRTQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAPESNRIVT

gi|476059       278
                 59
31493            69
""",
        )
        hit = hits[2]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|6320473|ref|NP_010553.1|")
        self.assertEqual(hit.target.name, "NP_010553")
        self.assertEqual(
            hit.target.description,
            "Essential protein involved in assembly of cytosolic and nuclear iron-sulfur proteins; Cia1p [Saccharomyces cerevisiae] >gi|74676366|sp|Q05583|CIA1_YEAST Cytosolic iron-sulfur protein assembly protein 1 >gi|151567598|pdb|2HES|X Chain X, Cytosolic Iron-Sulphur Assembly Protein- 1 >gi|1230640|gb|AAB64456.1| Ydr267cp [Saccharomyces cerevisiae]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=330)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0185319)
        self.assertEqual(hsp.annotations["identity"], 16)
        self.assertEqual(hsp.annotations["positive"], 27)
        self.assertEqual(hsp.annotations["gaps"], 2)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[113, 135, 137, 163],
                          [ 14,  36,  36,  62]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 14)
        self.assertEqual(hsp.query.annotations["end"], 62)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 113)
        self.assertEqual(hsp.target.annotations["end"], 163)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 50))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({14: 'AWNKDRTQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAP'}, length=70)",
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({113: 'AWSNDGYYLATCSRDKSVWIWETDESGEEYECISVLQEHSQDVKHVIWHP'}, length=330)",
        )
        self.assertEqual(hsp.target.id, "gi|6320473|ref|NP_010553.1|")
        self.assertEqual(hsp.target.name, "NP_010553")
        self.assertEqual(
            hsp.target.description,
            "Essential protein involved in assembly of cytosolic and nuclear iron-sulfur proteins; Cia1p [Saccharomyces cerevisiae] >gi|74676366|sp|Q05583|CIA1_YEAST Cytosolic iron-sulfur protein assembly protein 1 >gi|151567598|pdb|2HES|X Chain X, Cytosolic Iron-Sulphur Assembly Protein- 1 >gi|1230640|gb|AAB64456.1| Ydr267cp [Saccharomyces cerevisiae]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "AW+ D   +A C  +  V I+E  +SG ++  +  L+EH+  V  + W P",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|632047       113 AWSNDGYYLATCSRDKSVWIWETDESGEEYECISVLQEHSQDVKHVIWHP 163
                  0 ||..|....|.|.....|.|.|--.||........|.||...|....|.|  50
31493            14 AWNKDRTQIAICPNNHEVHIYE--KSGAKWNKVHELKEHNGQVTGIDWAP  62
""",
        )
        hit = hits[3]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|61679798|pdb|1R5M|A")
        self.assertEqual(hit.target.name, "1R5M-A")
        self.assertEqual(
            hit.target.description,
            "Chain A, Crystal Structure Of The C-Terminal Wd40 Domain Of Sif2",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=425)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0185319)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 27)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[110, 143, 143, 166],
                          [ 10,  43,  46,  69]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 10)
        self.assertEqual(hsp.query.annotations["end"], 69)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 110)
        self.assertEqual(hsp.target.annotations["end"], 166)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 59))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({10: 'ISCHAWNKDRTQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAPESNRIVT'}, length=70)",
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({110: 'VTCLAWSHDGNSIVTGVENGELRLWNKTGALLNVLNFHRAPIVSVKWNKDGTHIIS'}, length=425)",
        )
        self.assertEqual(hsp.target.id, "gi|61679798|pdb|1R5M|A")
        self.assertEqual(hsp.target.name, "1R5M-A")
        self.assertEqual(
            hsp.target.description,
            "Chain A, Crystal Structure Of The C-Terminal Wd40 Domain Of Sif2",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++C AW+ D   I     N E+ ++ K+GA  N    L  H   +  + W  +   I++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|616797       110 VTCLAWSHDGNSIVTGVENGELRLWNKTGALLN---VLNFHRAPIVSVKWNKDGTHIIS
                  0 ..|.||..|...|.....|.|.....|.||..|---.|..|........|......|..
31493            10 ISCHAWNKDRTQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAPESNRIVT

gi|616797       166
                 59
31493            69
""",
        )
        hit = hits[4]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|6319579|ref|NP_009661.1|")
        self.assertEqual(hit.target.name, "NP_009661")
        self.assertEqual(
            hit.target.description,
            "WD40 repeat-containing subunit of the Set3C histone deacetylase complex, which represses early/middle sporulation genes; antagonizes telomeric silencing; binds specifically to the Sir4p N-terminus; Sif2p [Saccharomyces cerevisiae] >gi|57014129|sp|P38262|SIF2_YEAST SIR4-interacting protein SIF2 >gi|1870107|emb|CAA85058.1| unnamed protein product [Saccharomyces cerevisiae] >gi|51013557|gb|AAT93072.1| YBR103W [Saccharomyces cerevisiae]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=535)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 74.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 33.113)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0185319)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 27)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[222, 255, 255, 278],
                          [ 10,  43,  46,  69]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 10)
        self.assertEqual(hsp.query.annotations["end"], 69)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 222)
        self.assertEqual(hsp.target.annotations["end"], 278)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 59))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({10: 'ISCHAWNKDRTQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAPESNRIVT'}, length=70)",
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({222: 'VTCLAWSHDGNSIVTGVENGELRLWNKTGALLNVLNFHRAPIVSVKWNKDGTHIIS'}, length=535)",
        )
        self.assertEqual(hsp.target.id, "gi|6319579|ref|NP_009661.1|")
        self.assertEqual(hsp.target.name, "NP_009661")
        self.assertEqual(
            hsp.target.description,
            "WD40 repeat-containing subunit of the Set3C histone deacetylase complex, which represses early/middle sporulation genes; antagonizes telomeric silencing; binds specifically to the Sir4p N-terminus; Sif2p [Saccharomyces cerevisiae] >gi|57014129|sp|P38262|SIF2_YEAST SIR4-interacting protein SIF2 >gi|1870107|emb|CAA85058.1| unnamed protein product [Saccharomyces cerevisiae] >gi|51013557|gb|AAT93072.1| YBR103W [Saccharomyces cerevisiae]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++C AW+ D   I     N E+ ++ K+GA  N    L  H   +  + W  +   I++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|631957       222 VTCLAWSHDGNSIVTGVENGELRLWNKTGALLN---VLNFHRAPIVSVKWNKDGTHIIS
                  0 ..|.||..|...|.....|.|.....|.||..|---.|..|........|......|..
31493            10 ISCHAWNKDRTQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAPESNRIVT

gi|631957       278
                 59
31493            69
""",
        )
        hit = hits[5]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|151946495|gb|EDN64717.1|")
        self.assertEqual(hit.target.name, "EDN64717")
        self.assertEqual(
            hit.target.description,
            "Sir4p-interacting factor [Saccharomyces cerevisiae YJM789]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=535)")
        self.assertEqual(len(hit), 1)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 71.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.9574)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0412849)
        self.assertEqual(hsp.annotations["identity"], 15)
        self.assertEqual(hsp.annotations["positive"], 26)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[222, 255, 255, 278],
                          [ 10,  43,  46,  69]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 10)
        self.assertEqual(hsp.query.annotations["end"], 69)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 222)
        self.assertEqual(hsp.target.annotations["end"], 278)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 59))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({10: 'ISCHAWNKDRTQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAPESNRIVT'}, length=70)",
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({222: 'VTCLAWSHDGNSIVTGVENGELRLWNKTGALLNVLNFHRAPIVSFKWNKDGTHIIS'}, length=535)",
        )
        self.assertEqual(hsp.target.id, "gi|151946495|gb|EDN64717.1|")
        self.assertEqual(hsp.target.name, "EDN64717")
        self.assertEqual(
            hsp.target.description,
            "Sir4p-interacting factor [Saccharomyces cerevisiae YJM789]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "++C AW+ D   I     N E+ ++ K+GA  N    L  H   +    W  +   I++",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|151946       222 VTCLAWSHDGNSIVTGVENGELRLWNKTGALLN---VLNFHRAPIVSFKWNKDGTHIIS
                  0 ..|.||..|...|.....|.|.....|.||..|---.|..|........|......|..
31493            10 ISCHAWNKDRTQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAPESNRIVT

gi|151946       278
                 59
31493            69
""",
        )
        hit = hits[6]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|151943708|gb|EDN62018.1|")
        self.assertEqual(hit.target.name, "EDN62018")
        self.assertEqual(
            hit.target.description,
            "nuclear pore complex subunit [Saccharomyces cerevisiae YJM789]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=349)")
        self.assertEqual(len(hit), 2)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 69.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.187)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0704213)
        self.assertEqual(hsp.annotations["identity"], 13)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[23, 36, 38, 64, 65, 72],
                          [22, 35, 35, 61, 61, 68]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 22)
        self.assertEqual(hsp.query.annotations["end"], 68)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 23)
        self.assertEqual(hsp.target.annotations["end"], 72)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 49))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({22: 'IAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAPESNRIV'}, length=70)",
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({23: 'VATCSSDQHIKVFKLDKDTSNWELSDSWRAHDSSIVAIDWASPEYGRII'}, length=349)",
        )
        self.assertEqual(hsp.target.id, "gi|151943708|gb|EDN62018.1|")
        self.assertEqual(hsp.target.name, "EDN62018")
        self.assertEqual(
            hsp.target.description,
            "nuclear pore complex subunit [Saccharomyces cerevisiae YJM789]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+A C ++  + ++  +K  + W      + H+  +  IDWA PE  RI+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|151943        23 VATCSSDQHIKVFKLDKDTSNWELSDSWRAHDSSIVAIDWASPEYGRII 72
                  0 .|.|.........--.|....|........|......||||-||..||. 49
31493            22 IAICPNNHEVHIY--EKSGAKWNKVHELKEHNGQVTGIDWA-PESNRIV 68
""",
        )
        hsp = hit[1]
        self.assertAlmostEqual(hsp.score, 56.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 26.1794)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.26538)
        self.assertEqual(hsp.annotations["identity"], 10)
        self.assertEqual(hsp.annotations["positive"], 16)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 91, 118],
                          [ 35,  62]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 35)
        self.assertEqual(hsp.query.annotations["end"], 62)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 91)
        self.assertEqual(hsp.target.annotations["end"], 118)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 27))
        self.assertEqual(
            repr(hsp.query.seq), "Seq({35: 'EKSGAKWNKVHELKEHNGQVTGIDWAP'}, length=70)"
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq), "Seq({91: 'ECSGRRWNKLCTLNDSKGSLYSVKFAP'}, length=349)"
        )
        self.assertEqual(hsp.target.id, "gi|151943708|gb|EDN62018.1|")
        self.assertEqual(hsp.target.name, "EDN62018")
        self.assertEqual(
            hsp.target.description,
            "nuclear pore complex subunit [Saccharomyces cerevisiae YJM789]",
        )
        self.assertEqual(hsp.annotations["midline"], "E SG +WNK+  L +  G +  + +AP")
        self.assertEqual(
            str(hsp),
            """\
gi|151943        91 ECSGRRWNKLCTLNDSKGSLYSVKFAP 118
                  0 |.||..|||...|....|.......||  27
31493            35 EKSGAKWNKVHELKEHNGQVTGIDWAP  62
""",
        )
        hit = hits[7]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|151567866|pdb|2PM7|B")
        self.assertEqual(hit.target.name, "2PM7-B")
        self.assertEqual(
            hit.target.description,
            "Chain B, Crystal Structure Of Yeast Sec1331 EDGE ELEMENT OF THE Copii Vesicular Coat, Selenomethionine Version >gi|151567868|pdb|2PM7|D Chain D, Crystal Structure Of Yeast Sec1331 EDGE ELEMENT OF THE Copii Vesicular Coat, Selenomethionine Version",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=297)")
        self.assertEqual(len(hit), 2)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 69.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.187)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0704213)
        self.assertEqual(hsp.annotations["identity"], 11)
        self.assertEqual(hsp.annotations["positive"], 23)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 67, 109],
                          [ 20,  62]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 20)
        self.assertEqual(hsp.query.annotations["end"], 62)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 67)
        self.assertEqual(hsp.target.annotations["end"], 109)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 42))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({20: 'TQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAP'}, length=70)",
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({67: 'TILASCSYDGKVXIWKEENGRWSQIAVHAVHSASVNSVQWAP'}, length=297)",
        )
        self.assertEqual(hsp.target.id, "gi|151567866|pdb|2PM7|B")
        self.assertEqual(hsp.target.name, "2PM7-B")
        self.assertEqual(
            hsp.target.description,
            "Chain B, Crystal Structure Of Yeast Sec1331 EDGE ELEMENT OF THE Copii Vesicular Coat, Selenomethionine Version >gi|151567868|pdb|2PM7|D Chain D, Crystal Structure Of Yeast Sec1331 EDGE ELEMENT OF THE Copii Vesicular Coat, Selenomethionine Version",
        )
        self.assertEqual(
            hsp.annotations["midline"], "T +A C  + +V I+++   +W+++     H+  V  + WAP"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|151567        67 TILASCSYDGKVXIWKEENGRWSQIAVHAVHSASVNSVQWAP 109
                  0 |..|.|.....|.|.......|........|...|....|||  42
31493            20 TQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAP  62
""",
        )
        hsp = hit[1]
        self.assertAlmostEqual(hsp.score, 62.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 28.4906)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.456458)
        self.assertEqual(hsp.annotations["identity"], 12)
        self.assertEqual(hsp.annotations["positive"], 18)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[24, 62],
                          [23, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 23)
        self.assertEqual(hsp.query.annotations["end"], 61)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 24)
        self.assertEqual(hsp.target.annotations["end"], 62)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 38))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({23: 'AICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWA'}, length=70)",
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({24: 'ATCSSDKTIKIFEVEGETHKLIDTLTGHEGPVWRVDWA'}, length=297)",
        )
        self.assertEqual(hsp.target.id, "gi|151567866|pdb|2PM7|B")
        self.assertEqual(hsp.target.name, "2PM7-B")
        self.assertEqual(
            hsp.target.description,
            "Chain B, Crystal Structure Of Yeast Sec1331 EDGE ELEMENT OF THE Copii Vesicular Coat, Selenomethionine Version >gi|151567868|pdb|2PM7|D Chain D, Crystal Structure Of Yeast Sec1331 EDGE ELEMENT OF THE Copii Vesicular Coat, Selenomethionine Version",
        )
        self.assertEqual(
            hsp.annotations["midline"], "A C ++  + I+E  G     +  L  H G V  +DWA"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|151567        24 ATCSSDKTIKIFEVEGETHKLIDTLTGHEGPVWRVDWA 62
                  0 |.|.......|.|..|........|..|.|.|...||| 38
31493            23 AICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWA 61
""",
        )
        hit = hits[8]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|6321338|ref|NP_011415.1|")
        self.assertEqual(hit.target.name, "NP_011415")
        self.assertEqual(
            hit.target.description,
            "Nuclear pore protein that is part of the evolutionarily conserved Nup84p complex (Nup84p, Nup85p, Nup120p, Nup145p, and Seh1p); homologous to Sec13p; Seh1p [Saccharomyces cerevisiae] >gi|1711370|sp|P53011|SEH1_YEAST Nucleoporin SEH1 (Nuclear pore protein SEH1) (SEC13 homolog 1) >gi|1177640|emb|CAA62480.1| Sec13p-like protein [Saccharomyces cerevisiae] >gi|1322639|emb|CAA96806.1| SEH1 [Saccharomyces cerevisiae] >gi|45270884|gb|AAS56823.1| YGL100W [Saccharomyces cerevisiae]",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=349)")
        self.assertEqual(len(hit), 2)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 69.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 31.187)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0704213)
        self.assertEqual(hsp.annotations["identity"], 13)
        self.assertEqual(hsp.annotations["positive"], 25)
        self.assertEqual(hsp.annotations["gaps"], 3)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[23, 36, 38, 64, 65, 72],
                          [22, 35, 35, 61, 61, 68]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 22)
        self.assertEqual(hsp.query.annotations["end"], 68)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 23)
        self.assertEqual(hsp.target.annotations["end"], 72)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 49))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({22: 'IAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAPESNRIV'}, length=70)",
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({23: 'VATCSSDQHIKVFKLDKDTSNWELSDSWRAHDSSIVAIDWASPEYGRII'}, length=349)",
        )
        self.assertEqual(hsp.target.id, "gi|6321338|ref|NP_011415.1|")
        self.assertEqual(hsp.target.name, "NP_011415")
        self.assertEqual(
            hsp.target.description,
            "Nuclear pore protein that is part of the evolutionarily conserved Nup84p complex (Nup84p, Nup85p, Nup120p, Nup145p, and Seh1p); homologous to Sec13p; Seh1p [Saccharomyces cerevisiae] >gi|1711370|sp|P53011|SEH1_YEAST Nucleoporin SEH1 (Nuclear pore protein SEH1) (SEC13 homolog 1) >gi|1177640|emb|CAA62480.1| Sec13p-like protein [Saccharomyces cerevisiae] >gi|1322639|emb|CAA96806.1| SEH1 [Saccharomyces cerevisiae] >gi|45270884|gb|AAS56823.1| YGL100W [Saccharomyces cerevisiae]",
        )
        self.assertEqual(
            hsp.annotations["midline"],
            "+A C ++  + ++  +K  + W      + H+  +  IDWA PE  RI+",
        )
        self.assertEqual(
            str(hsp),
            """\
gi|632133        23 VATCSSDQHIKVFKLDKDTSNWELSDSWRAHDSSIVAIDWASPEYGRII 72
                  0 .|.|.........--.|....|........|......||||-||..||. 49
31493            22 IAICPNNHEVHIY--EKSGAKWNKVHELKEHNGQVTGIDWA-PESNRIV 68
""",
        )
        hsp = hit[1]
        self.assertAlmostEqual(hsp.score, 56.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 26.1794)
        self.assertAlmostEqual(hsp.annotations["evalue"], 2.26538)
        self.assertEqual(hsp.annotations["identity"], 10)
        self.assertEqual(hsp.annotations["positive"], 16)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 91, 118],
                          [ 35,  62]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 35)
        self.assertEqual(hsp.query.annotations["end"], 62)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 91)
        self.assertEqual(hsp.target.annotations["end"], 118)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 27))
        self.assertEqual(
            repr(hsp.query.seq), "Seq({35: 'EKSGAKWNKVHELKEHNGQVTGIDWAP'}, length=70)"
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq), "Seq({91: 'ECSGRRWNKLCTLNDSKGSLYSVKFAP'}, length=349)"
        )
        self.assertEqual(hsp.target.id, "gi|6321338|ref|NP_011415.1|")
        self.assertEqual(hsp.target.name, "NP_011415")
        self.assertEqual(
            hsp.target.description,
            "Nuclear pore protein that is part of the evolutionarily conserved Nup84p complex (Nup84p, Nup85p, Nup120p, Nup145p, and Seh1p); homologous to Sec13p; Seh1p [Saccharomyces cerevisiae] >gi|1711370|sp|P53011|SEH1_YEAST Nucleoporin SEH1 (Nuclear pore protein SEH1) (SEC13 homolog 1) >gi|1177640|emb|CAA62480.1| Sec13p-like protein [Saccharomyces cerevisiae] >gi|1322639|emb|CAA96806.1| SEH1 [Saccharomyces cerevisiae] >gi|45270884|gb|AAS56823.1| YGL100W [Saccharomyces cerevisiae]",
        )
        self.assertEqual(hsp.annotations["midline"], "E SG +WNK+  L +  G +  + +AP")
        self.assertEqual(
            str(hsp),
            """\
gi|632133        91 ECSGRRWNKLCTLNDSKGSLYSVKFAP 118
                  0 |.||..|||...|....|.......||  27
31493            35 EKSGAKWNKVHELKEHNGQVTGIDWAP  62
""",
        )
        hit = hits[9]
        self.assertIsInstance(hit.target, SeqRecord)
        self.assertEqual(hit.target.id, "gi|151567870|pdb|2PM9|B")
        self.assertEqual(hit.target.name, "2PM9-B")
        self.assertEqual(
            hit.target.description,
            "Chain B, Crystal Structure Of Yeast Sec1331 VERTEX ELEMENT OF THE Copii Vesicular Coat",
        )
        self.assertEqual(repr(hit.target.seq), "Seq(None, length=297)")
        self.assertEqual(len(hit), 2)
        hsp = hit[0]
        self.assertAlmostEqual(hsp.score, 68.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 30.8018)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.0919731)
        self.assertEqual(hsp.annotations["identity"], 11)
        self.assertEqual(hsp.annotations["positive"], 23)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[ 67, 109],
                          [ 20,  62]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 20)
        self.assertEqual(hsp.query.annotations["end"], 62)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 67)
        self.assertEqual(hsp.target.annotations["end"], 109)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 42))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({20: 'TQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAP'}, length=70)",
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({67: 'TILASCSYDGKVMIWKEENGRWSQIAVHAVHSASVNSVQWAP'}, length=297)",
        )
        self.assertEqual(hsp.target.id, "gi|151567870|pdb|2PM9|B")
        self.assertEqual(hsp.target.name, "2PM9-B")
        self.assertEqual(
            hsp.target.description,
            "Chain B, Crystal Structure Of Yeast Sec1331 VERTEX ELEMENT OF THE Copii Vesicular Coat",
        )
        self.assertEqual(
            hsp.annotations["midline"], "T +A C  + +V I+++   +W+++     H+  V  + WAP"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|151567        67 TILASCSYDGKVMIWKEENGRWSQIAVHAVHSASVNSVQWAP 109
                  0 |..|.|.....|.|.......|........|...|....|||  42
31493            20 TQIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWAP  62
""",
        )
        hsp = hit[1]
        self.assertAlmostEqual(hsp.score, 64.0)
        self.assertAlmostEqual(hsp.annotations["bit score"], 29.261)
        self.assertAlmostEqual(hsp.annotations["evalue"], 0.267601)
        self.assertEqual(hsp.annotations["identity"], 12)
        self.assertEqual(hsp.annotations["positive"], 20)
        self.assertEqual(hsp.annotations["gaps"], 0)
        self.assertTrue(
            np.array_equal(
                hsp.coordinates,
                # fmt: off
                np.array([[22, 62],
                          [21, 61]])
                # fmt: on
            )
        )
        self.assertEqual(hsp.query.annotations["start"], 21)
        self.assertEqual(hsp.query.annotations["end"], 61)
        self.assertEqual(hsp.query.annotations["frame"], 0)
        self.assertEqual(hsp.target.annotations["start"], 22)
        self.assertEqual(hsp.target.annotations["end"], 62)
        self.assertEqual(hsp.target.annotations["frame"], 0)
        self.assertEqual(hsp.shape, (2, 40))
        self.assertEqual(
            repr(hsp.query.seq),
            "Seq({21: 'QIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWA'}, length=70)",
        )
        self.assertEqual(hsp.query.id, "31493")
        self.assertEqual(hsp.query.description, "unnamed protein product")
        self.assertEqual(
            repr(hsp.target.seq),
            "Seq({22: 'RMATCSSDKTIKIFEVEGETHKLIDTLTGHEGPVWRVDWA'}, length=297)",
        )
        self.assertEqual(hsp.target.id, "gi|151567870|pdb|2PM9|B")
        self.assertEqual(hsp.target.name, "2PM9-B")
        self.assertEqual(
            hsp.target.description,
            "Chain B, Crystal Structure Of Yeast Sec1331 VERTEX ELEMENT OF THE Copii Vesicular Coat",
        )
        self.assertEqual(
            hsp.annotations["midline"], "++A C ++  + I+E  G     +  L  H G V  +DWA"
        )
        self.assertEqual(
            str(hsp),
            """\
gi|151567        22 RMATCSSDKTIKIFEVEGETHKLIDTLTGHEGPVWRVDWA 62
                  0 ..|.|.......|.|..|........|..|.|.|...||| 40
31493            21 QIAICPNNHEVHIYEKSGAKWNKVHELKEHNGQVTGIDWA 61
""",
        )

    def test_xml_2218_blastp_002(self):
        """Parsing BLASTP 2.2.18+ (xml_2218_blastp_002.xml)."""
        filename = "xml_2218_blastp_002.xml"
        datafile = os.path.join("Blast", filename)
        with open(datafile, "rb") as handle:
            records = Blast.parse(handle)
            self.assertEqual(records.program, "blastp")
            self.assertEqual(records.version, "BLASTP 2.2.18+")
            self.assertEqual(
                records.reference,
                'Altschul, Stephen F., Thomas L. Madden, Alejandro A. SchÃ¤ffer, Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), "Gapped BLAST and PSI-BLAST: a new generation of protein database search programs", Nucleic Acids Res. 25:3389-3402.',
            )
            self.assertEqual(records.db, "gpipe/9606/Previous/protein")
            self.assertIsInstance(records.query, SeqRecord)
            self.assertEqual(records.query.id, "gi|585505|sp|Q08386|MOPB_RHOCA")
            self.assertEqual(
                records.query.description,
                "Molybdenum-pterin-binding protein mopB >gi|310278|gb|AAA71913.1| molybdenum-pterin-binding protein",
            )
            self.assertEqual(repr(records.query.seq), "Seq(None, length=270)")
            self.assertEqual(len(records.param), 5)
            self.assertEqual(records.param["matrix"], "BLOSUM62")
            self.assertAlmostEqual(records.param["expect"], 0.01)
            self.assertEqual(records.param["gap-open"], 11)
            self.assertEqual(records.param["gap-extend"], 1)
            self.assertEqual(records.param["filter"], "m L; R -d repeat/repeat_9606;")
            record = next(records)
            self.assertEqual(record.num, 1)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "gi|585505|sp|Q08386|MOPB_RHOCA")
            self.assertEqual(
                record.query.description,
                "Molybdenum-pterin-binding protein mopB >gi|310278|gb|AAA71913.1| molybdenum-pterin-binding protein",
            )
            self.assertEqual(repr(record.query.seq), "Seq(None, length=270)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 27252)
            self.assertEqual(record.stat["db-len"], 13958303)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 0)

            record = next(records)
            self.assertEqual(record.num, 2)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "gi|129628|sp|P07175.1|PARA_AGRTU")
            self.assertEqual(record.query.description, "Protein parA")
            self.assertEqual(repr(record.query.seq), "Seq(None, length=222)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 27252)
            self.assertEqual(record.stat["db-len"], 13958303)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 0)

    def test_xml_2218L_blastp_001(self):
        """Parsing blastp 2.2.18 [Mar-02-2008] (xml_2218L_blastp_001.xml)."""
        filename = "xml_2218L_blastp_001.xml"
        datafile = os.path.join("Blast", filename)
        with open(datafile, "rb") as handle:
            records = Blast.parse(handle)
            self.assertEqual(records.program, "blastp")
            self.assertEqual(records.version, "blastp 2.2.18 [Mar-02-2008]")
            self.assertEqual(
                records.reference,
                '~Reference: Altschul, Stephen F., Thomas L. Madden, Alejandro A. Schaffer, ~Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), ~"Gapped BLAST and PSI-BLAST: a new generation of protein database search~programs",  Nucleic Acids Res. 25:3389-3402.',
            )
            self.assertEqual(
                records.db, "/Users/pjcock/Downloads/Software/blast-2.2.18/data/nr"
            )
            self.assertIsInstance(records.query, SeqRecord)
            self.assertEqual(records.query.id, "lcl|1_0")
            self.assertEqual(records.query.description, "Fake")
            self.assertEqual(repr(records.query.seq), "Seq(None, length=9)")
            self.assertEqual(len(records.param), 5)
            self.assertEqual(records.param["matrix"], "BLOSUM62")
            self.assertAlmostEqual(records.param["expect"], 1e-05)
            self.assertEqual(records.param["gap-open"], 11)
            self.assertEqual(records.param["gap-extend"], 1)
            self.assertEqual(records.param["filter"], "F")
            record = next(records)
            self.assertRaises(StopIteration, next, records)
        self.check_xml_2218L_blastp_001(record)

        with open(datafile, "rb") as handle:
            record = Blast.read(handle)
            self.check_xml_2218L_blastp_001(record)

    def check_xml_2218L_blastp_001(self, record):
        self.assertEqual(record.num, 1)
        self.assertIsNone(record.query)
        self.assertEqual(len(record.stat), 7)
        self.assertEqual(record.stat["db-num"], 6589360)
        self.assertEqual(record.stat["db-len"], 2253133281)
        self.assertEqual(record.stat["hsp-len"], 0)
        self.assertAlmostEqual(record.stat["eff-space"], 20278200000.0)
        self.assertAlmostEqual(record.stat["kappa"], 0.041)
        self.assertAlmostEqual(record.stat["lambda"], 0.267)
        self.assertAlmostEqual(record.stat["entropy"], 0.14)
        hits = record.hits
        self.assertEqual(len(hits), 0)

    def test_xml_2222_blastx_001(self):
        """Parsing BLASTX 2.2.22+ (xml_2222_blastx_001.xml)."""
        filename = "xml_2222_blastx_001.xml"
        datafile = os.path.join("Blast", filename)
        with open(datafile, "rb") as handle:
            records = Blast.parse(handle)
            self.assertEqual(records.program, "blastx")
            self.assertEqual(records.version, "BLASTX 2.2.22+")
            self.assertEqual(
                records.reference,
                'Stephen F. Altschul, Thomas L. Madden, Alejandro A. Sch&auml;ffer, Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), "Gapped BLAST and PSI-BLAST: a new generation of protein database search programs", Nucleic Acids Res. 25:3389-3402.',
            )
            self.assertEqual(records.db, "nr")
            self.assertIsInstance(records.query, SeqRecord)
            self.assertEqual(records.query.id, "1")
            self.assertEqual(
                records.query.description,
                "gi|4104054|gb|AH007193.1|SEG_CVIGS Centaurea vallesiaca 18S ribosomal RNA gene, partial sequence",
            )
            self.assertEqual(repr(records.query.seq), "Seq(None, length=1002)")
            self.assertEqual(len(records.param), 5)
            self.assertEqual(records.param["matrix"], "BLOSUM62")
            self.assertAlmostEqual(records.param["expect"], 0.0001)
            self.assertEqual(records.param["gap-open"], 11)
            self.assertEqual(records.param["gap-extend"], 1)
            self.assertEqual(records.param["filter"], "L;")
            record = next(records)
            self.assertEqual(record.num, 1)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "1")
            self.assertEqual(
                record.query.description,
                "gi|4104054|gb|AH007193.1|SEG_CVIGS Centaurea vallesiaca 18S ribosomal RNA gene, partial sequence",
            )
            self.assertEqual(repr(record.query.seq), "Seq(None, length=1002)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 8994603)
            self.assertEqual(record.stat["db-len"], -1216159329)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 367397307882.0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 1)
            hit = hits[0]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|149390769|gb|ABR25402.1|")
            self.assertEqual(hit.target.name, "ABR25402")
            self.assertEqual(
                hit.target.description, "unknown [Oryza sativa (indica cultivar-group)]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=26)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 129.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 54.2989775733826)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.83262460293058e-05)
            self.assertEqual(hsp.annotations["identity"], 24)
            self.assertEqual(hsp.annotations["positive"], 25)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 0, 26],
                          [ 0, 26]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 910)
            self.assertEqual(hsp.query.annotations["end"], 988)
            self.assertEqual(hsp.query.annotations["frame"], 2)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 26)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 26))
            self.assertEqual(repr(hsp.query.seq), "Seq('HMLVSKIKPCMCKYEQIQTVKLRMAH')")
            self.assertEqual(hsp.query.id, "1")
            self.assertEqual(
                hsp.query.description,
                "gi|4104054|gb|AH007193.1|SEG_CVIGS Centaurea vallesiaca 18S ribosomal RNA gene, partial sequence",
            )
            self.assertEqual(repr(hsp.target.seq), "Seq('HMLVSKIKPCMCKYELIRTVKLRMAH')")
            self.assertEqual(hsp.target.id, "gi|149390769|gb|ABR25402.1|")
            self.assertEqual(hsp.target.name, "ABR25402")
            self.assertEqual(
                hsp.target.description, "unknown [Oryza sativa (indica cultivar-group)]"
            )
            self.assertEqual(hsp.annotations["midline"], "HMLVSKIKPCMCKYE I+TVKLRMAH")
            self.assertEqual(
                str(hsp),
                """\
gi|149390         0 HMLVSKIKPCMCKYELIRTVKLRMAH 26
                  0 |||||||||||||||.|.|||||||| 26
1                 0 HMLVSKIKPCMCKYEQIQTVKLRMAH 26
""",
            )
            record = next(records)
            self.assertEqual(record.num, 2)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "2")
            self.assertEqual(
                record.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(repr(record.query.seq), "Seq(None, length=2050)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 8994603)
            self.assertEqual(record.stat["db-len"], -1216159329)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 967993058520.0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 10)
            hit = hits[0]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|4218936|gb|AAD12237.1|")
            self.assertEqual(hit.target.name, "AAD12237")
            self.assertEqual(
                hit.target.description, "hevein-like protein HLPf [Sambucus nigra]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=333)")
            self.assertEqual(len(hit), 2)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1053.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 410.223385721017)
            self.assertAlmostEqual(hsp.annotations["evalue"], 3.48406066731465e-112)
            self.assertEqual(hsp.annotations["identity"], 199)
            self.assertEqual(hsp.annotations["positive"], 200)
            self.assertEqual(hsp.annotations["gaps"], 33)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 148, 148, 205],
                          [  0, 148, 181, 238]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 714)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 205)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 238))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT'}, length=333)",
            )
            self.assertEqual(hsp.target.id, "gi|4218936|gb|AAD12237.1|")
            self.assertEqual(hsp.target.name, "AAD12237")
            self.assertEqual(
                hsp.target.description, "hevein-like protein HLPf [Sambucus nigra]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCEDGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSYEAFITAARSFPGFCTSGDVATRKREPAAFLS                                 +T     GGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNRRGPIQLT",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|421893         0 MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                 0 MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE

gi|421893        60 DGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSYEAF
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                60 DGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSYEAF

gi|421893       120 ITAARSFPGFCTSGDVATRKREPAAFLS--------------------------------
                120 |||||||||||||||||||||||||||.--------------------------------
2               120 ITAARSFPGFCTSGDVATRKREPAAFLXXXXXXXXXXXXNLNIYLC*EIISTIYICFEIN

gi|421893       148 -QTSQATTGGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNRRGPIQLT
                180 -.|.....||||||||||||||||||||||||||||||||||||||||||||||||||
2               180 LRTWMLGVGGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNRRGPIQLT

gi|421893       205
                238
2               238
""",
            )
            hsp = hit[1]
            self.assertAlmostEqual(hsp.score, 683.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 267.699542631596)
            self.assertAlmostEqual(hsp.annotations["evalue"], 2.79278546744412e-69)
            self.assertEqual(hsp.annotations["identity"], 127)
            self.assertEqual(hsp.annotations["positive"], 127)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[206, 333],
                          [  0, 127]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1668)
            self.assertEqual(hsp.query.annotations["end"], 2049)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 206)
            self.assertEqual(hsp.target.annotations["end"], 333)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 127))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...SVV')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({206: 'NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...SVV'}, length=333)",
            )
            self.assertEqual(hsp.target.id, "gi|4218936|gb|AAD12237.1|")
            self.assertEqual(hsp.target.name, "AAD12237")
            self.assertEqual(
                hsp.target.description, "hevein-like protein HLPf [Sambucus nigra]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASDQVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVAHIKMSVV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|421893       206 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                 0 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD

gi|421893       266 QVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVA
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                60 QVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVA

gi|421893       326 HIKMSVV 333
                120 ||||||| 127
2               120 HIKMSVV 127
""",
            )
            hit = hits[1]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|4206074|gb|AAD11408.1|")
            self.assertEqual(hit.target.name, "AAD11408")
            self.assertEqual(
                hit.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=333)")
            self.assertEqual(len(hit), 2)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1043.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 406.371389961843)
            self.assertAlmostEqual(hsp.annotations["evalue"], 5.03097287018806e-111)
            self.assertEqual(hsp.annotations["identity"], 198)
            self.assertEqual(hsp.annotations["positive"], 199)
            self.assertEqual(hsp.annotations["gaps"], 33)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 148, 148, 205],
                          [  0, 148, 181, 238]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 714)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 205)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 238))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT'}, length=333)",
            )
            self.assertEqual(hsp.target.id, "gi|4206074|gb|AAD11408.1|")
            self.assertEqual(hsp.target.name, "AAD11408")
            self.assertEqual(
                hsp.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCEDGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSYEAFITAARSFPGFCTSGDVATRKRE AAFLS                                 +T     GGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNRRGPIQLT",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|420607         0 MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                 0 MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE

gi|420607        60 DGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSYEAF
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                60 DGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSYEAF

gi|420607       120 ITAARSFPGFCTSGDVATRKRELAAFLS--------------------------------
                120 ||||||||||||||||||||||.||||.--------------------------------
2               120 ITAARSFPGFCTSGDVATRKREPAAFLXXXXXXXXXXXXNLNIYLC*EIISTIYICFEIN

gi|420607       148 -QTSQATTGGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNRRGPIQLT
                180 -.|.....||||||||||||||||||||||||||||||||||||||||||||||||||
2               180 LRTWMLGVGGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNRRGPIQLT

gi|420607       205
                238
2               238
""",
            )
            hsp = hit[1]
            self.assertAlmostEqual(hsp.score, 672.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 263.462347296505)
            self.assertAlmostEqual(hsp.annotations["evalue"], 5.26696544712228e-68)
            self.assertEqual(hsp.annotations["identity"], 125)
            self.assertEqual(hsp.annotations["positive"], 126)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[206, 333],
                          [  0, 127]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1668)
            self.assertEqual(hsp.query.annotations["end"], 2049)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 206)
            self.assertEqual(hsp.target.annotations["end"], 333)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 127))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...SVV')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({206: 'NYYYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...SLV'}, length=333)",
            )
            self.assertEqual(hsp.target.id, "gi|4206074|gb|AAD11408.1|")
            self.assertEqual(hsp.target.name, "AAD11408")
            self.assertEqual(
                hsp.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "NY YGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASDQVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVAHIKMS+V",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|420607       206 NYYYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD
                  0 ||.|||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                 0 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD

gi|420607       266 QVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVA
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                60 QVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVA

gi|420607       326 HIKMSLV 333
                120 |||||.| 127
2               120 HIKMSVV 127
""",
            )
            hit = hits[2]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|4206070|gb|AAD11406.1|")
            self.assertEqual(hit.target.name, "AAD11406")
            self.assertEqual(
                hit.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=333)")
            self.assertEqual(len(hit), 2)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1043.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 406.371389961843)
            self.assertAlmostEqual(hsp.annotations["evalue"], 5.03097287018806e-111)
            self.assertEqual(hsp.annotations["identity"], 198)
            self.assertEqual(hsp.annotations["positive"], 199)
            self.assertEqual(hsp.annotations["gaps"], 33)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 148, 148, 205],
                          [  0, 148, 181, 238]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 714)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 205)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 238))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT'}, length=333)",
            )
            self.assertEqual(hsp.target.id, "gi|4206070|gb|AAD11406.1|")
            self.assertEqual(hsp.target.name, "AAD11406")
            self.assertEqual(
                hsp.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCEDGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSYEAFITAARSFPGFCTSGDVATRKRE AAFLS                                 +T     GGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNRRGPIQLT",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|420607         0 MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                 0 MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE

gi|420607        60 DGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSYEAF
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                60 DGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSYEAF

gi|420607       120 ITAARSFPGFCTSGDVATRKRELAAFLS--------------------------------
                120 ||||||||||||||||||||||.||||.--------------------------------
2               120 ITAARSFPGFCTSGDVATRKREPAAFLXXXXXXXXXXXXNLNIYLC*EIISTIYICFEIN

gi|420607       148 -QTSQATTGGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNRRGPIQLT
                180 -.|.....||||||||||||||||||||||||||||||||||||||||||||||||||
2               180 LRTWMLGVGGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNRRGPIQLT

gi|420607       205
                238
2               238
""",
            )
            hsp = hit[1]
            self.assertAlmostEqual(hsp.score, 680.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 266.543943903844)
            self.assertAlmostEqual(hsp.annotations["evalue"], 6.22167692942359e-69)
            self.assertEqual(hsp.annotations["identity"], 126)
            self.assertEqual(hsp.annotations["positive"], 127)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[206, 333],
                          [  0, 127]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1668)
            self.assertEqual(hsp.query.annotations["end"], 2049)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 206)
            self.assertEqual(hsp.target.annotations["end"], 333)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 127))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...SVV')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({206: 'NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...SLV'}, length=333)",
            )
            self.assertEqual(hsp.target.id, "gi|4206070|gb|AAD11406.1|")
            self.assertEqual(hsp.target.name, "AAD11406")
            self.assertEqual(
                hsp.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASDQVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVAHIKMS+V",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|420607       206 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                 0 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD

gi|420607       266 QVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVA
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                60 QVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVA

gi|420607       326 HIKMSLV 333
                120 |||||.| 127
2               120 HIKMSVV 127
""",
            )
            hit = hits[3]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|4206072|gb|AAD11407.1|")
            self.assertEqual(hit.target.name, "AAD11407")
            self.assertEqual(
                hit.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=333)")
            self.assertEqual(len(hit), 2)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1016.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 395.971001412075)
            self.assertAlmostEqual(hsp.annotations["evalue"], 6.7995613312017e-108)
            self.assertEqual(hsp.annotations["identity"], 193)
            self.assertEqual(hsp.annotations["positive"], 195)
            self.assertEqual(hsp.annotations["gaps"], 33)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 148, 148, 205],
                          [  0, 148, 181, 238]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 714)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 205)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 238))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT'}, length=333)",
            )
            self.assertEqual(hsp.target.id, "gi|4206072|gb|AAD11407.1|")
            self.assertEqual(hsp.target.name, "AAD11407")
            self.assertEqual(
                hsp.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCEDGCQSQCRDT+RLTDLPRALLRPTNNRNAISKMISKSLFNEMFKH  DCPSRGFYSYEAFITAA SFPGFCTSGDVATRKRE AAFLS                                 +T     GGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYN RGPIQLT",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|420607         0 MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                 0 MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE

gi|420607        60 DGCQSQCRDTARLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHRNDCPSRGFYSYEAF
                 60 ||||||||||.||||||||||||||||||||||||||||||||||..|||||||||||||
2                60 DGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSYEAF

gi|420607       120 ITAAGSFPGFCTSGDVATRKRELAAFLS--------------------------------
                120 ||||.|||||||||||||||||.||||.--------------------------------
2               120 ITAARSFPGFCTSGDVATRKREPAAFLXXXXXXXXXXXXNLNIYLC*EIISTIYICFEIN

gi|420607       148 -QTSQATTGGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNSRGPIQLT
                180 -.|.....||||||||||||||||||||||||||||||||||||||||||.|||||||
2               180 LRTWMLGVGGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNRRGPIQLT

gi|420607       205
                238
2               238
""",
            )
            hsp = hit[1]
            self.assertAlmostEqual(hsp.score, 646.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 253.447158322654)
            self.assertAlmostEqual(hsp.annotations["evalue"], 5.45045505347399e-65)
            self.assertEqual(hsp.annotations["identity"], 120)
            self.assertEqual(hsp.annotations["positive"], 124)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[206, 333],
                          [  0, 127]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1668)
            self.assertEqual(hsp.query.annotations["end"], 2049)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 206)
            self.assertEqual(hsp.target.annotations["end"], 333)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 127))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...SVV')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({206: 'NYYYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...SVV'}, length=333)",
            )
            self.assertEqual(hsp.target.id, "gi|4206072|gb|AAD11407.1|")
            self.assertEqual(hsp.target.name, "AAD11407")
            self.assertEqual(
                hsp.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "NY YGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASDQVPSYGVIS+II+SN GHQS LDTITTSIGYYKRYCDMLEVSYGDNL+NWFDETPF+KVAHIKMSVV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|420607       206 NYYYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD
                  0 ||.|||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                 0 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD

gi|420607       266 QVPSYGVISEIIDSNIGHQSSLDTITTSIGYYKRYCDMLEVSYGDNLKNWFDETPFSKVA
                 60 |||||||||.||.||.||||.||||||||||||||||||||||||||.||||||||.|||
2                60 QVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVA

gi|420607       326 HIKMSVV 333
                120 ||||||| 127
2               120 HIKMSVV 127
""",
            )
            hit = hits[4]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|16903131|gb|AAL30421.1|AF434174_1")
            self.assertEqual(hit.target.name, "AAL30421")
            self.assertEqual(
                hit.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=330)")
            self.assertEqual(len(hit), 2)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 986.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 384.415014134554)
            self.assertAlmostEqual(hsp.annotations["evalue"], 2.04729155722083e-104)
            self.assertEqual(hsp.annotations["identity"], 190)
            self.assertEqual(hsp.annotations["positive"], 191)
            self.assertEqual(hsp.annotations["gaps"], 36)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0,  22,  22, 145, 145, 202],
                          [  0,  22,  25, 148, 181, 238]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 714)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 202)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 238))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MKLSTLLILSFPFLLGTIVFADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQ...QLT'}, length=330)",
            )
            self.assertEqual(hsp.target.id, "gi|16903131|gb|AAL30421.1|AF434174_1")
            self.assertEqual(hsp.target.name, "AAL30421")
            self.assertEqual(
                hsp.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKLSTLLILSFPFLLGTIVFAD   NGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCEDGCQSQCRDT RLTDLPRALLRPTNNRNAISKMISKSLFNEMFKH  DCPSRGFYSYEAFITAARSFP FCTSGDVATRKRE AAFLS                                 +T     GGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYN RGPIQLT",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|169031         0 MKLSTLLILSFPFLLGTIVFAD---NGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE
                  0 ||||||||||||||||||||||---|||||||||||||||||||||||||||||||||||
2                 0 MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE

gi|169031        57 DGCQSQCRDTGRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHRNDCPSRGFYSYEAF
                 60 ||||||||||.||||||||||||||||||||||||||||||||||..|||||||||||||
2                60 DGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSYEAF

gi|169031       117 ITAARSFPSFCTSGDVATRKRELAAFLS--------------------------------
                120 ||||||||.|||||||||||||.||||.--------------------------------
2               120 ITAARSFPGFCTSGDVATRKREPAAFLXXXXXXXXXXXXNLNIYLC*EIISTIYICFEIN

gi|169031       145 -QTSQATTGGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNSRGPIQLT
                180 -.|.....||||||||||||||||||||||||||||||||||||||||||.|||||||
2               180 LRTWMLGVGGRLDSAVVDPHAWGYCYVNGTTDEQYCTSSNWPCASGKQYNRRGPIQLT

gi|169031       202
                238
2               238
""",
            )
            hsp = hit[1]
            self.assertAlmostEqual(hsp.score, 679.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 266.158744327927)
            self.assertAlmostEqual(hsp.annotations["evalue"], 8.12576171382949e-69)
            self.assertEqual(hsp.annotations["identity"], 126)
            self.assertEqual(hsp.annotations["positive"], 126)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[203, 330],
                          [  0, 127]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1668)
            self.assertEqual(hsp.query.annotations["end"], 2049)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 203)
            self.assertEqual(hsp.target.annotations["end"], 330)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 127))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...SVV')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({203: 'NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...SVV'}, length=330)",
            )
            self.assertEqual(hsp.target.id, "gi|16903131|gb|AAL30421.1|AF434174_1")
            self.assertEqual(hsp.target.name, "AAL30421")
            self.assertEqual(
                hsp.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASDQVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKV HIKMSVV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|169031       203 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                 0 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD

gi|169031       263 QVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVV
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||.
2                60 QVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVA

gi|169031       323 HIKMSVV 330
                120 ||||||| 127
2               120 HIKMSVV 127
""",
            )
            hit = hits[5]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|16903133|gb|AAL30422.1|AF434175_1")
            self.assertEqual(hit.target.name, "AAL30422")
            self.assertEqual(
                hit.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=336)")
            self.assertEqual(len(hit), 2)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 713.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 279.255529909117)
            self.assertAlmostEqual(hsp.annotations["evalue"], 9.27553088557319e-73)
            self.assertEqual(hsp.annotations["identity"], 148)
            self.assertEqual(hsp.annotations["positive"], 162)
            self.assertEqual(hsp.annotations["gaps"], 40)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0,  27,  27,  58,  59, 147, 147, 177, 181, 208],
                          [  0,  27,  29,  60,  60, 148, 181, 211, 211, 238]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 714)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 208)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 243))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MKLSTLLIFSFPFLLGTIVIADERPDHRCGSSVGNPPCAPGRCCSIFGWCGGGP...QLT'}, length=336)",
            )
            self.assertEqual(hsp.target.id, "gi|16903133|gb|AAL30422.1|AF434175_1")
            self.assertEqual(hsp.target.name, "AAL30422")
            self.assertEqual(
                hsp.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKLSTLLI SFPFLLGTIV AD+  +   +CG   G   C    CCS +G+CG    YC    CQ  C + +R TDLPRALLRPTNN N ISKMIS+SLFNEMFKH KDCPSRGFYSYEAFITAARSFPGFCTSGDVATRKRE AAFLS                                 +T     G R DS VVDPHAWGYC++NGTT    +E+YCTSSNWPCASGK+YN RGPIQLT",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|169031         0 MKLSTLLIFSFPFLLGTIVIADERPDH--RCGSSVGNPPCAPGRCCSIFGWCGGGPSYCS
                  0 ||||||||.||||||||||.||.....--.||...|...|....|||..|.||....||.
2                 0 MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE

gi|169031        58 GSNCQYSCSNGARSTDLPRALLRPTNNLNDISKMISESLFNEMFKHRKDCPSRGFYSYEA
                 60 -..||..|....|.|||||||||||||.|.||||||.|||||||||.|||||||||||||
2                60 -DGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSYEA

gi|169031       118 FITAARSFPGFCTSGDVATRKRELAAFLS-------------------------------
                120 |||||||||||||||||||||||.||||.-------------------------------
2               119 FITAARSFPGFCTSGDVATRKREPAAFLXXXXXXXXXXXXNLNIYLC*EIISTIYICFEI

gi|169031       147 --QTSQATTGQRFDSVVVDPHAWGYCHINGTTNGNENERYCTSSNWPCASGKKYNSRGPI
                180 --.|.....|.|.||.||||||||||..||||----.|.|||||||||||||.||.||||
2               179 NLRTWMLGVGGRLDSAVVDPHAWGYCYVNGTT----DEQYCTSSNWPCASGKQYNRRGPI

gi|169031       205 QLT 208
                240 ||| 243
2               235 QLT 238
""",
            )
            hsp = hit[1]
            self.assertAlmostEqual(hsp.score, 620.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 243.431969348803)
            self.assertAlmostEqual(hsp.annotations["evalue"], 5.64033703812707e-62)
            self.assertEqual(hsp.annotations["identity"], 115)
            self.assertEqual(hsp.annotations["positive"], 120)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[209, 336],
                          [  0, 127]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1668)
            self.assertEqual(hsp.query.annotations["end"], 2049)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 209)
            self.assertEqual(hsp.target.annotations["end"], 336)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 127))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...SVV')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({209: 'NYNYGLAGEAIGIDLVNDPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...HVV'}, length=336)",
            )
            self.assertEqual(hsp.target.id, "gi|16903133|gb|AAL30422.1|AF434175_1")
            self.assertEqual(hsp.target.name, "AAL30422")
            self.assertEqual(
                hsp.target.description, "hevein-like protein [Sambucus nigra]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "NYNYGLAGEA+GIDLVN PDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINAN EASDQVPSYGV+S IINSN GH+SGLD ITTSIGYYKRYCDMLEVSYGDNL+NWFDETPF+KVA IKM VV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|169031       209 NYNYGLAGEAIGIDLVNDPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANYEASD
                  0 ||||||||||.||||||.|||||||||||||||||||||||||||||||||||||.||||
2                 0 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD

gi|169031       269 QVPSYGVLSNIINSNSGHKSGLDIITTSIGYYKRYCDMLEVSYGDNLKNWFDETPFSKVA
                 60 |||||||.|.|||||.||.||||.|||||||||||||||||||||||.||||||||.|||
2                60 QVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETPFTKVA

gi|169031       329 RIKMHVV 336
                120 .|||.|| 127
2               120 HIKMSVV 127
""",
            )
            hit = hits[6]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|30691147|gb|AAO17294.1|")
            self.assertEqual(hit.target.name, "AAO17294")
            self.assertEqual(hit.target.description, "chitinase [Ficus carica]")
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=321)")
            self.assertEqual(len(hit), 2)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 481.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 189.889228296291)
            self.assertAlmostEqual(hsp.annotations["evalue"], 7.40075731140555e-46)
            self.assertEqual(hsp.annotations["identity"], 113)
            self.assertEqual(hsp.annotations["positive"], 138)
            self.assertEqual(hsp.annotations["gaps"], 49)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0,  18,  19,  27,  27,  60,  61,  66,  66,  73,  74, 142, 142,
                           157, 157, 170, 173, 201],
                          [  0,  18,  18,  26,  29,  62,  62,  67,  72,  79,  79, 147, 180,
                           195, 197, 210, 210, 238]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 714)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 201)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 244))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MKLITLTILSLGFLFGIISVYCERSDHRCGPNYGNPGCSEGRCCSVHGWCGGGA...QLT'}, length=321)",
            )
            self.assertEqual(hsp.target.id, "gi|30691147|gb|AAO17294.1|")
            self.assertEqual(hsp.target.name, "AAO17294")
            self.assertEqual(hsp.target.description, "chitinase [Ficus carica]")
            self.assertEqual(
                hsp.annotations["midline"],
                "MKL TL ILS  FL G I V+ + +D+   +CG + G   C +  CCS  G+CG    YC  G C  QC        L R+ LL   NN  ++  ++S+SLFNEMFKH KDCPS+GFYSY+AFITAA SFPGFC++GDVATRKRE AAFL                                  +T     G R DS   D +AWGYC++N T    +  YCTS +WPCA GK+YN RGPIQLT",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|306911         0 MKLITLTILSLGFLFGIISVYCERSDH---RCGPNYGNPGCSEGRCCSVHGWCGGGANYC
                  0 |||.||.|||..||.|.|-|.....|.---.||...|...|....|||..|.||....||
2                 0 MKLSTLLILSFPFLLGTI-VFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYC

gi|306911        57 SGGNCDYQC-----WVYLSRSPLLNNNNNVASVRNIVSESLFNEMFKHRKDCPSQGFYSY
                 60 ..|-|..||-----...|.|.-||...||........|.|||||||||.|||||.|||||
2                59 EDG-CQSQCRDTSRLTDLPRA-LLRPTNNRNAISKMISKSLFNEMFKHMKDCPSRGFYSY

gi|306911       112 DAFITAATSFPGFCSTGDVATRKRELAAFL------------------------------
                120 .||||||.||||||..|||||||||.||||------------------------------
2               117 EAFITAARSFPGFCTSGDVATRKREPAAFLXXXXXXXXXXXXNLNIYLC*EIISTIYICF

gi|306911       142 ---AQTSQATTGQRSDSE--DVYAWGYCHINTTIVGDENDYCTSPDWPCAWGKKYNSRGP
                180 ---..|.....|.|.||.--|..|||||..|.|---....||||..||||.||.||.|||
2               177 EINLRTWMLGVGGRLDSAVVDPHAWGYCYVNGT---TDEQYCTSSNWPCASGKQYNRRGP

gi|306911       197 IQLT 201
                240 |||| 244
2               234 IQLT 238
""",
            )
            hsp = hit[1]
            self.assertAlmostEqual(hsp.score, 426.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 168.703251620836)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.76559312729927e-39)
            self.assertEqual(hsp.annotations["identity"], 81)
            self.assertEqual(hsp.annotations["positive"], 99)
            self.assertEqual(hsp.annotations["gaps"], 10)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[202, 261, 261, 266, 266, 308, 309, 320],
                          [  0,  59,  60,  65,  73, 115, 115, 126]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1668)
            self.assertEqual(hsp.query.annotations["end"], 2046)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 202)
            self.assertEqual(hsp.target.annotations["end"], 320)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 127))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...MSV')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({202: 'NHNYGLVGEALGIDLINNPDLVATDPVVSFKTAIWFWMTRHQNKPSFHGVIINA...MPV'}, length=321)",
            )
            self.assertEqual(hsp.target.id, "gi|30691147|gb|AAO17294.1|")
            self.assertEqual(hsp.target.name, "AAO17294")
            self.assertEqual(hsp.target.description, "chitinase [Ficus carica]")
            self.assertEqual(
                hsp.annotations["midline"],
                "N+NYGL GEALGIDL+N+PDLVATDP+VSFKTAIWFWMT+H N PS H ++INANSE S  +P++        SNFG +S LD +  SIGYYKRYCDML+VS+GDNL+ W+D TP F+ V+ I M V",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|306911       202 NHNYGLVGEALGIDLINNPDLVATDPVVSFKTAIWFWMTRHQNKPSFHGVIINANSEPS-
                  0 |.||||.||||||||.|.||||||||.||||||||||||.|.|.||.|...||||||.|-
2                 0 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD

gi|306911       261 HIPNH--------SNFGQESVLDVVNRSIGYYKRYCDMLKVSFGDNLKYWYDGTPNFSDV
                 60 ..|..--------||||..|.||....||||||||||||.||.||||..|.|.||-|..|
2                60 QVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNLENWFDETP-FTKV

gi|306911       313 SRIGMPV 320
                120 ..|.|.| 127
2               119 AHIKMSV 126
""",
            )
            hit = hits[7]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|222139388|gb|ACM45713.1|")
            self.assertEqual(hit.target.name, "ACM45713")
            self.assertEqual(
                hit.target.description, "class I chitinase [Pyrus pyrifolia]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=317)")
            self.assertEqual(len(hit), 2)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 469.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 185.266833385283)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.82286993845418e-44)
            self.assertEqual(hsp.annotations["identity"], 111)
            self.assertEqual(hsp.annotations["positive"], 137)
            self.assertEqual(hsp.annotations["gaps"], 50)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0,  16,  16,  20,  20,  68,  68,  95,  97, 142, 142, 172, 173,
                           194],
                          [  0,  16,  18,  22,  29,  77,  81, 108, 108, 153, 187, 217, 217,
                           238]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 714)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 194)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 241))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MKLQTLIILSLSLLLGISAEQCGRQAGGAVCPNGLCCSQFGWCGTTSDYCTTGC...QLT'}, length=317)",
            )
            self.assertEqual(hsp.target.id, "gi|222139388|gb|ACM45713.1|")
            self.assertEqual(hsp.target.name, "ACM45713")
            self.assertEqual(
                hsp.target.description, "class I chitinase [Pyrus pyrifolia]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKL TL+ILS   LLG  + A+       QCGR AGGA+C + LCCS +G+CG+T  YC  GCQSQC  T + T  P     P+     +S +IS S+F++M K+  D  CPS GFY Y+AFITAARSF GF T+GDVATRK+E  AFL+QTS                                      G   SA   P+AWGYC+VN    + YCT SS +PCA+GK+Y  RGPIQLT",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|222139         0 MKLQTLIILSLSLLLG--ISAE-------QCGRQAGGAVCPNGLCCSQFGWCGTTSDYCT
                  0 |||.||.|||...|||--..|.-------||||.||||.|...||||..|.||.|..||.
2                 0 MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE

gi|222139        51 TGCQSQCSSTPKPTPTP----TPSGGGGDVSSLISSSVFDQMLKYRNDGRCPSNGFYKYD
                 60 .||||||..|...|..|----.|.......|..||.|.|..|.|...|--|||.|||.|.
2                60 DGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKD--CPSRGFYSYE

gi|222139       107 AFITAARSFNGFGTTGDVATRKKELVAFLAQTSHE-------------------------
                120 |||||||||.||.|.|||||||.|..|||......-------------------------
2               118 AFITAARSFPGFCTSGDVATRKREPAAFLXXXXXXXXXXXXNLNIYLC*EIISTIYICFE

gi|222139       142 ---------TTGGWASAPDGPYAWGYCFVNERNQDVYCTPSSQYPCAAGKKYYGRGPIQL
                180 ---------..|...||...|.|||||.||......|||-||..|||.||.|..||||||
2               178 INLRTWMLGVGGRLDSAVVDPHAWGYCYVNGTTDEQYCT-SSNWPCASGKQYNRRGPIQL

gi|222139       193 T 194
                240 | 241
2               237 T 238
""",
            )
            hsp = hit[1]
            self.assertAlmostEqual(hsp.score, 318.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 127.101697421762)
            self.assertAlmostEqual(hsp.annotations["evalue"], 5.89123449548921e-27)
            self.assertEqual(hsp.annotations["identity"], 62)
            self.assertEqual(hsp.annotations["positive"], 84)
            self.assertEqual(hsp.annotations["gaps"], 7)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[195, 247, 252, 284, 285, 309, 309, 316],
                          [  0,  52,  52,  84,  84, 108, 109, 116]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1668)
            self.assertEqual(hsp.query.annotations["end"], 2016)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 195)
            self.assertEqual(hsp.target.annotations["end"], 316)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 122))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...TPF')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({195: 'NYNYGQAGKAIGKDLINNPDLVATDPVVSFKTAIWFWMTPQGNKPSSHDVITGR...RPF'}, length=317)",
            )
            self.assertEqual(hsp.target.id, "gi|222139388|gb|ACM45713.1|")
            self.assertEqual(hsp.target.name, "ACM45713")
            self.assertEqual(
                hsp.target.description, "class I chitinase [Pyrus pyrifolia]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "NYNYG AG+A+G DL+N+PDLVATDP+VSFKTAIWFWMT   N PS HD++      +    ++ +VP YGVI+ IIN       G D  + + IG+Y+RYC +L V+ GDNL+  +++ PF",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|222139       195 NYNYGQAGKAIGKDLINNPDLVATDPVVSFKTAIWFWMTPQGNKPSSHDVITGRWSPSTA
                  0 |||||.||.|.|.||.|.||||||||.||||||||||||...|.||.||...-----...
2                 0 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILI-----NAN

gi|222139       255 DRSAGRVPGYGVITNIINGGVECGKGQDARVASRIGFYRRYCQILGVNPGDNLD-CYNQR
                 60 ......||.||||..|||.......|.|.-....||.|.|||..|.|..||||.-.....
2                55 SEASDQVPSYGVISKIINSNFGHQSGLDT-ITTSIGYYKRYCDMLEVSYGDNLENWFDET

gi|222139       314 PF 316
                120 || 122
2               114 PF 116
""",
            )
            hit = hits[8]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|23496435|dbj|BAB40817.2|")
            self.assertEqual(hit.target.name, "BAB40817")
            self.assertEqual(
                hit.target.description, "endochitinase MCHT-2 [Cucumis melo]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=311)")
            self.assertEqual(len(hit), 2)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 460.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 181.800037202027)
            self.assertAlmostEqual(hsp.annotations["evalue"], 2.01541888137674e-43)
            self.assertEqual(hsp.annotations["identity"], 109)
            self.assertEqual(hsp.annotations["positive"], 132)
            self.assertEqual(hsp.annotations["gaps"], 54)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0,  16,  16,  21,  21,  63,  63,  91,  93, 138, 138, 168, 169,
                           190],
                          [  0,  16,  20,  25,  29,  71,  80, 108, 108, 153, 187, 217, 217,
                           238]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 714)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 190)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 241))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MKTYSLIILSFAFLLGAASAEQCGRQANGALCPNNLCCSQFGFCGDTDDYCKNG...QLT'}, length=311)",
            )
            self.assertEqual(hsp.target.id, "gi|23496435|dbj|BAB40817.2|")
            self.assertEqual(hsp.target.name, "BAB40817")
            self.assertEqual(
                hsp.target.description, "endochitinase MCHT-2 [Cucumis melo]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MK  +L+ILSF FLLG    A  A+    QCGR A GALC +NLCCS +GFCG T  YC++GCQSQCR +S           P +    +  +IS+SL+N+M K+ +D  CPS GFY+Y AFITAARSFP F T+GD  TRKRE AAF  QTS                                      G   +A   P+AWGY Y+     + YCT S  WPCA G+QY  RGPIQLT",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|234964         0 MKTYSLIILSFAFLLG----AASAE----QCGRQANGALCPNNLCCSQFGFCGDTDDYCK
                  0 ||...|.||||.||||----|..|.----||||.|.||||..|||||..||||.|..||.
2                 0 MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYCE

gi|234964        52 NGCQSQCRGSS---------TPPPSGGRGVGSIISESLYNQMLKYSRDPRCPSNGFYTYN
                 60 .|||||||..|---------..|..........||.||.|.|.|...|--|||.|||.|.
2                60 DGCQSQCRDTSRLTDLPRALLRPTNNRNAISKMISKSLFNEMFKHMKD--CPSRGFYSYE

gi|234964       103 AFITAARSFPTFGTTGDATTRKREIAAFFGQTSHE-------------------------
                120 ||||||||||.|.|.||..|||||.|||.......-------------------------
2               118 AFITAARSFPGFCTSGDVATRKREPAAFLXXXXXXXXXXXXNLNIYLC*EIISTIYICFE

gi|234964       138 ---------TTGGWSTAPDGPYAWGYWYIRERNQQTYCTPSQQWPCAPGQQYYGRGPIQL
                180 ---------..|....|...|.||||.|........|||-|..||||.|.||..||||||
2               178 INLRTWMLGVGGRLDSAVVDPHAWGYCYVNGTTDEQYCT-SSNWPCASGKQYNRRGPIQL

gi|234964       189 T 190
                240 | 241
2               237 T 238
""",
            )
            hsp = hit[1]
            self.assertAlmostEqual(hsp.score, 285.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 114.39011141649)
            self.assertAlmostEqual(hsp.annotations["evalue"], 3.95161831690075e-23)
            self.assertEqual(hsp.annotations["identity"], 56)
            self.assertEqual(hsp.annotations["positive"], 75)
            self.assertEqual(hsp.annotations["gaps"], 7)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[191, 211, 211, 242, 247, 277, 278, 304],
                          [  0,  20,  21,  52,  52,  82,  82, 108]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1668)
            self.assertEqual(hsp.query.annotations["end"], 1992)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 191)
            self.assertEqual(hsp.target.annotations["end"], 304)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 114))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...NLE')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({191: 'NYNYGPAGKAIGAPLLTNPDTATDPVTSFKTALWFWMTAQGNKPSCHNVITGNW...NLD'}, length=311)",
            )
            self.assertEqual(hsp.target.id, "gi|23496435|dbj|BAB40817.2|")
            self.assertEqual(hsp.target.name, "BAB40817")
            self.assertEqual(
                hsp.target.description, "endochitinase MCHT-2 [Cucumis melo]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "NYNYG AG+A+G  L+ +PD  ATDP+ SFKTA+WFWMT   N PS H+++      ++   A+ +VP YGVI+ IIN       G  D +   IG+YKRYCDML + YG+NL+",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|234964       191 NYNYGPAGKAIGAPLLTNPD-TATDPVTSFKTALWFWMTAQGNKPSCHNVITGNWQPSSA
                  0 |||||.||.|.|..|...||-.||||..|||||.|||||...|.||.|....-----...
2                 0 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILI-----NAN

gi|234964       250 DNAAGRVPGYGVITNIINGGLECGRGPDDRVKDRIGFYKRYCDMLGIGYGNNLD 304
                 60 ..|...||.||||..|||.......|.-|.....||.||||||||...||.||. 114
2                55 SEASDQVPSYGVISKIINSNFGHQSGL-DTITTSIGYYKRYCDMLEVSYGDNLE 108
""",
            )
            hit = hits[9]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|82621253|gb|ABB86300.1|")
            self.assertEqual(hit.target.name, "ABB86300")
            self.assertEqual(hit.target.description, "chitinase [Ficus awkeotsang]")
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=301)")
            self.assertEqual(len(hit), 2)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 459.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 181.414837626109)
            self.assertAlmostEqual(hsp.annotations["evalue"], 2.6322185753765e-43)
            self.assertEqual(hsp.annotations["identity"], 114)
            self.assertEqual(hsp.annotations["positive"], 134)
            self.assertEqual(hsp.annotations["gaps"], 50)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0,  18,  19,  27,  27,  60,  61,  66,  66,  85,  87, 143, 143,
                           158, 158, 171, 174, 202],
                          [  0,  18,  18,  26,  29,  62,  62,  67,  72,  91,  91, 147, 180,
                           195, 197, 210, 210, 238]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 714)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 202)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 245))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKLSTLLILSFPFLLGTIVFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGS...QLT')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MKLITLTILSPGFLFGIISVYCERPDHRCGPNYGNPGCSEGRCCSIHGWCGGDA...QLT'}, length=301)",
            )
            self.assertEqual(hsp.target.id, "gi|82621253|gb|ABB86300.1|")
            self.assertEqual(hsp.target.name, "ABB86300")
            self.assertEqual(hsp.target.description, "chitinase [Ficus awkeotsang]")
            self.assertEqual(
                hsp.annotations["midline"],
                "MKL TL ILS  FL G I V+ +  D+   +CG + G   C +  CCS  G+CG    YC  G C  QC        L R+ L  TNN N  S  K++ +SLFNEM KH KDCPS+GFYSY+AFITAA SFPGFC++GDVATRKRE AAFL                                  +T     G R DS   D +A GYC++N T       YCTS + PCASGK YNRRGPIQLT",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|826212         0 MKLITLTILSPGFLFGIISVYCERPDH---RCGPNYGNPGCSEGRCCSIHGWCGGDANYC
                  0 |||.||.|||..||.|.|-|.....|.---.||...|...|....|||..|.||....||
2                 0 MKLSTLLILSFPFLLGTI-VFADDADNGPWQCGRDAGGALCHDNLCCSFWGFCGSTYQYC

gi|826212        57 SGGNCDYQC-----WVYLSRSPLPNTNNNNVASVRKIVGESLFNEMLKHRKDCPSQGFYS
                 60 ..|-|..||-----...|.|..|..|||.|..|--|....||||||.||.|||||.||||
2                59 EDG-CQSQCRDTSRLTDLPRALLRPTNNRNAIS--KMISKSLFNEMFKHMKDCPSRGFYS

gi|826212       112 YDAFITAAASFPGFCSTGDVATRKRELAAFL-----------------------------
                120 |.||||||.||||||..|||||||||.||||-----------------------------
2               116 YEAFITAARSFPGFCTSGDVATRKREPAAFLXXXXXXXXXXXXNLNIYLC*EIISTIYIC

gi|826212       143 ----AQTSQATTGQRSDSE--DVYARGYCHINTTIVGDKNDYCTSPDSPCASGKNYNRRG
                180 ----..|.....|.|.||.--|..|.|||..|.|---....||||...||||||.|||||
2               176 FEINLRTWMLGVGGRLDSAVVDPHAWGYCYVNGT---TDEQYCTSSNWPCASGKQYNRRG

gi|826212       197 PIQLT 202
                240 ||||| 245
2               233 PIQLT 238
""",
            )
            hsp = hit[1]
            self.assertAlmostEqual(hsp.score, 359.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 142.894880034374)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.03749166509001e-31)
            self.assertEqual(hsp.annotations["identity"], 67)
            self.assertEqual(hsp.annotations["positive"], 83)
            self.assertEqual(hsp.annotations["gaps"], 9)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[203, 263, 263, 268, 268, 301],
                          [  0,  60,  61,  66,  74, 107]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1668)
            self.assertEqual(hsp.query.annotations["end"], 1989)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 203)
            self.assertEqual(hsp.target.annotations["end"], 301)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 107))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINA...DNL')",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|4218935|gb|AF074388.1|AF074388 Sambucus nigra hevein-like protein HLPf gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({203: 'NHNYGLVGEALGIDLINNPELVATDPVISFKTAIWFWMARYEDKPSFHDVIINA...DNL'}, length=301)",
            )
            self.assertEqual(hsp.target.id, "gi|82621253|gb|ABB86300.1|")
            self.assertEqual(hsp.target.name, "ABB86300")
            self.assertEqual(hsp.target.description, "chitinase [Ficus awkeotsang]")
            self.assertEqual(
                hsp.annotations["midline"],
                "N+NYGL GEALGIDL+N+P+LVATDP++SFKTAIWFWM ++++ PS HD++INAN EASD +P +G        N G +S LD +  SIGYYKRYCDML VS  DNL",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|826212       203 NHNYGLVGEALGIDLINNPELVATDPVISFKTAIWFWMARYEDKPSFHDVIINANFEASD
                  0 |.||||.||||||||.|.|.||||||..||||||||||......||.||..||||.||||
2                 0 NYNYGLAGEALGIDLVNHPDLVATDPIVSFKTAIWFWMTQHDNNPSLHDILINANSEASD

gi|826212       263 -IPYHG--------NSGQESSLDVVNRSIGYYKRYCDMLGVSCEDNL 301
                 60 -.|..|--------|.|..|.||....||||||||||||.||..||| 107
2                60 QVPSYGVISKIINSNFGHQSGLDTITTSIGYYKRYCDMLEVSYGDNL 107
""",
            )
            record = next(records)
            self.assertEqual(record.num, 3)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "3")
            self.assertEqual(
                record.query.description,
                "gi|5690369|gb|AF158246.1|AF158246 Cricetulus griseus glucose phosphate isomerase (GPI) gene, partial intron sequence",
            )
            self.assertEqual(repr(record.query.seq), "Seq(None, length=550)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 8994603)
            self.assertEqual(record.stat["db-len"], -1216159329)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 108443629616.0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 0)
            self.assertEqual(record.message, "No hits found")
            record = next(records)
            self.assertEqual(record.num, 4)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "4")
            self.assertEqual(
                record.query.description,
                "gi|5049839|gb|AI730987.1|AI730987 BNLGHi8354 Six-day Cotton fiber Gossypium hirsutum cDNA 5' similar to TUBULIN BETA-1 CHAIN gi|486734|pir|S35142 tubulin beta chain - white lupine gi|402636 (X70184) Beta tubulin 1 [Lupinus albus], mRNA sequence",
            )
            self.assertEqual(repr(record.query.seq), "Seq(None, length=655)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 8994603)
            self.assertEqual(record.stat["db-len"], -1216159329)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 165344802738.0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 10)
            hit = hits[0]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|166343825|gb|ABY86655.1|")
            self.assertEqual(hit.target.name, "ABY86655")
            self.assertEqual(
                hit.target.description, "beta-tubulin 4 [Gossypium hirsutum]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=448)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1048.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 408.29738784143)
            self.assertAlmostEqual(hsp.annotations["evalue"], 2.26145081918239e-112)
            self.assertEqual(hsp.annotations["identity"], 196)
            self.assertEqual(hsp.annotations["positive"], 197)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 201],
                          [  0, 201]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 49)
            self.assertEqual(hsp.query.annotations["end"], 652)
            self.assertEqual(hsp.query.annotations["frame"], 2)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 201)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 201))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEA...CMV')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description,
                "gi|5049839|gb|AI730987.1|AI730987 BNLGHi8354 Six-day Cotton fiber Gossypium hirsutum cDNA 5' similar to TUBULIN BETA-1 CHAIN gi|486734|pir|S35142 tubulin beta chain - white lupine gi|402636 (X70184) Beta tubulin 1 [Lupinus albus], mRNA sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MREILHIQAGQCGNQIGAKFWEVVCAEHGIDSTGRYQGDNDLQLERVNVYYNEA...CMV'}, length=448)",
            )
            self.assertEqual(hsp.target.id, "gi|166343825|gb|ABY86655.1|")
            self.assertEqual(hsp.target.name, "ABY86655")
            self.assertEqual(
                hsp.target.description, "beta-tubulin 4 [Gossypium hirsutum]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MREILHIQAGQCGNQIGA FWEVVCAEHGI+STGRYQGDNDLQLERVNVYYNEASCGRFVPRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDS LDVVRKEAENCDCLQGFQVCHSLG GTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVVEPYNATLSVH LVENADECMV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|166343         0 MREILHIQAGQCGNQIGAKFWEVVCAEHGIDSTGRYQGDNDLQLERVNVYYNEASCGRFV
                  0 ||||||||||||||||||.|||||||||||.|||||||||||||||||||||||||||||
4                 0 MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEASCGRFV

gi|166343        60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSVLDVV
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||||.||||
4                60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSXLDVV

gi|166343       120 RKEAENCDCLQGFQVCHSLGGGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV
                120 ||||||||||||||||||||.|||||||||||||||||||||||||||||||||||||||
4               120 RKEAENCDCLQGFQVCHSLGRGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV

gi|166343       180 EPYNATLSVHQLVENADECMV 201
                180 ||||||||||.|||||||||| 201
4               180 EPYNATLSVHXLVENADECMV 201
""",
            )
            hit = hits[1]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|223549899|gb|EEF51386.1|")
            self.assertEqual(hit.target.name, "EEF51386")
            self.assertEqual(
                hit.target.description,
                "tubulin beta chain, putative [Ricinus communis]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=448)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1044.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 406.756589537761)
            self.assertAlmostEqual(hsp.annotations["evalue"], 6.57981456092236e-112)
            self.assertEqual(hsp.annotations["identity"], 195)
            self.assertEqual(hsp.annotations["positive"], 196)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 201],
                          [  0, 201]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 49)
            self.assertEqual(hsp.query.annotations["end"], 652)
            self.assertEqual(hsp.query.annotations["frame"], 2)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 201)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 201))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEA...CMV')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description,
                "gi|5049839|gb|AI730987.1|AI730987 BNLGHi8354 Six-day Cotton fiber Gossypium hirsutum cDNA 5' similar to TUBULIN BETA-1 CHAIN gi|486734|pir|S35142 tubulin beta chain - white lupine gi|402636 (X70184) Beta tubulin 1 [Lupinus albus], mRNA sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYQGDNDLQLERVNVYYNEA...CMV'}, length=448)",
            )
            self.assertEqual(hsp.target.id, "gi|223549899|gb|EEF51386.1|")
            self.assertEqual(hsp.target.name, "EEF51386")
            self.assertEqual(
                hsp.target.description,
                "tubulin beta chain, putative [Ricinus communis]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MREILHIQ GQCGNQIGA FWEVVCAEHGI+STGRYQGDNDLQLERVNVYYNEASCGRFVPRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDS LDVVRKEAENCDCLQGFQVCHSLG GTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVVEPYNATLSVH LVENADECMV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|223549         0 MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYQGDNDLQLERVNVYYNEASCGRFV
                  0 ||||||||.|||||||||.|||||||||||.|||||||||||||||||||||||||||||
4                 0 MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEASCGRFV

gi|223549        60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSVLDVV
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||||.||||
4                60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSXLDVV

gi|223549       120 RKEAENCDCLQGFQVCHSLGGGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV
                120 ||||||||||||||||||||.|||||||||||||||||||||||||||||||||||||||
4               120 RKEAENCDCLQGFQVCHSLGRGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV

gi|223549       180 EPYNATLSVHQLVENADECMV 201
                180 ||||||||||.|||||||||| 201
4               180 EPYNATLSVHXLVENADECMV 201
""",
            )
            hit = hits[2]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|18420724|ref|NP_568437.1|")
            self.assertEqual(hit.target.name, "NP_568437")
            self.assertEqual(
                hit.target.description,
                "TUB8 (tubulin beta-8) [Arabidopsis thaliana] >gi|27735261|sp|P29516.2|TBB8_ARATH RecName: Full=Tubulin beta-8 chain; AltName: Full=Beta-8-tubulin >gi|10176853|dbj|BAB10059.1| beta tubulin [Arabidopsis thaliana]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=449)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1040.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 405.215791234091)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.91443295113426e-111)
            self.assertEqual(hsp.annotations["identity"], 194)
            self.assertEqual(hsp.annotations["positive"], 196)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 201],
                          [  0, 201]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 49)
            self.assertEqual(hsp.query.annotations["end"], 652)
            self.assertEqual(hsp.query.annotations["frame"], 2)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 201)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 201))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEA...CMV')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description,
                "gi|5049839|gb|AI730987.1|AI730987 BNLGHi8354 Six-day Cotton fiber Gossypium hirsutum cDNA 5' similar to TUBULIN BETA-1 CHAIN gi|486734|pir|S35142 tubulin beta chain - white lupine gi|402636 (X70184) Beta tubulin 1 [Lupinus albus], mRNA sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYQGENDLQLERVNVYYNEA...CMV'}, length=449)",
            )
            self.assertEqual(hsp.target.id, "gi|18420724|ref|NP_568437.1|")
            self.assertEqual(hsp.target.name, "NP_568437")
            self.assertEqual(
                hsp.target.description,
                "TUB8 (tubulin beta-8) [Arabidopsis thaliana] >gi|27735261|sp|P29516.2|TBB8_ARATH RecName: Full=Tubulin beta-8 chain; AltName: Full=Beta-8-tubulin >gi|10176853|dbj|BAB10059.1| beta tubulin [Arabidopsis thaliana]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MREILHIQ GQCGNQIGA FWEVVCAEHGI+STGRYQG+NDLQLERVNVYYNEASCGRFVPRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDS LDVVRKEAENCDCLQGFQVCHSLG GTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVVEPYNATLSVH LVENADECMV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|184207         0 MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYQGENDLQLERVNVYYNEASCGRFV
                  0 ||||||||.|||||||||.|||||||||||.|||||||.|||||||||||||||||||||
4                 0 MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEASCGRFV

gi|184207        60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSVLDVV
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||||.||||
4                60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSXLDVV

gi|184207       120 RKEAENCDCLQGFQVCHSLGGGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV
                120 ||||||||||||||||||||.|||||||||||||||||||||||||||||||||||||||
4               120 RKEAENCDCLQGFQVCHSLGRGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV

gi|184207       180 EPYNATLSVHQLVENADECMV 201
                180 ||||||||||.|||||||||| 201
4               180 EPYNATLSVHXLVENADECMV 201
""",
            )
            hit = hits[3]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|225426385|ref|XP_002271992.1|")
            self.assertEqual(hit.target.name, "XP_002271992")
            self.assertEqual(
                hit.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera] >gi|157356601|emb|CAO62796.1| unnamed protein product [Vitis vinifera]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=447)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1034.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 402.904593778587)
            self.assertAlmostEqual(hsp.annotations["evalue"], 9.50123195540709e-111)
            self.assertEqual(hsp.annotations["identity"], 193)
            self.assertEqual(hsp.annotations["positive"], 195)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 201],
                          [  0, 201]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 49)
            self.assertEqual(hsp.query.annotations["end"], 652)
            self.assertEqual(hsp.query.annotations["frame"], 2)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 201)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 201))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEA...CMV')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description,
                "gi|5049839|gb|AI730987.1|AI730987 BNLGHi8354 Six-day Cotton fiber Gossypium hirsutum cDNA 5' similar to TUBULIN BETA-1 CHAIN gi|486734|pir|S35142 tubulin beta chain - white lupine gi|402636 (X70184) Beta tubulin 1 [Lupinus albus], mRNA sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYHGDSDLQLERVNVYYNEA...CMV'}, length=447)",
            )
            self.assertEqual(hsp.target.id, "gi|225426385|ref|XP_002271992.1|")
            self.assertEqual(hsp.target.name, "XP_002271992")
            self.assertEqual(
                hsp.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera] >gi|157356601|emb|CAO62796.1| unnamed protein product [Vitis vinifera]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MREILHIQ GQCGNQIGA FWEVVCAEHGI+STGRY GD+DLQLERVNVYYNEASCGRFVPRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDS LDVVRKEAENCDCLQGFQVCHSLG GTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVVEPYNATLSVH LVENADECMV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|225426         0 MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYHGDSDLQLERVNVYYNEASCGRFV
                  0 ||||||||.|||||||||.|||||||||||.|||||.||.||||||||||||||||||||
4                 0 MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEASCGRFV

gi|225426        60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSVLDVV
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||||.||||
4                60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSXLDVV

gi|225426       120 RKEAENCDCLQGFQVCHSLGGGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV
                120 ||||||||||||||||||||.|||||||||||||||||||||||||||||||||||||||
4               120 RKEAENCDCLQGFQVCHSLGRGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV

gi|225426       180 EPYNATLSVHQLVENADECMV 201
                180 ||||||||||.|||||||||| 201
4               180 EPYNATLSVHXLVENADECMV 201
""",
            )
            hit = hits[4]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|15451226|gb|AAK96884.1|")
            self.assertEqual(hit.target.name, "AAK96884")
            self.assertEqual(
                hit.target.description,
                "beta tubulin [Arabidopsis thaliana] >gi|20148289|gb|AAM10035.1| beta tubulin [Arabidopsis thaliana]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=449)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1034.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 402.904593778587)
            self.assertAlmostEqual(hsp.annotations["evalue"], 9.50123195540709e-111)
            self.assertEqual(hsp.annotations["identity"], 193)
            self.assertEqual(hsp.annotations["positive"], 195)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 201],
                          [  0, 201]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 49)
            self.assertEqual(hsp.query.annotations["end"], 652)
            self.assertEqual(hsp.query.annotations["frame"], 2)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 201)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 201))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEA...CMV')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description,
                "gi|5049839|gb|AI730987.1|AI730987 BNLGHi8354 Six-day Cotton fiber Gossypium hirsutum cDNA 5' similar to TUBULIN BETA-1 CHAIN gi|486734|pir|S35142 tubulin beta chain - white lupine gi|402636 (X70184) Beta tubulin 1 [Lupinus albus], mRNA sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYQGEKDLQLERVNVYYNEA...CMV'}, length=449)",
            )
            self.assertEqual(hsp.target.id, "gi|15451226|gb|AAK96884.1|")
            self.assertEqual(hsp.target.name, "AAK96884")
            self.assertEqual(
                hsp.target.description,
                "beta tubulin [Arabidopsis thaliana] >gi|20148289|gb|AAM10035.1| beta tubulin [Arabidopsis thaliana]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MREILHIQ GQCGNQIGA FWEVVCAEHGI+STGRYQG+ DLQLERVNVYYNEASCGRFVPRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDS LDVVRKEAENCDCLQGFQVCHSLG GTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVVEPYNATLSVH LVENADECMV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|154512         0 MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYQGEKDLQLERVNVYYNEASCGRFV
                  0 ||||||||.|||||||||.|||||||||||.|||||||..||||||||||||||||||||
4                 0 MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEASCGRFV

gi|154512        60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSVLDVV
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||||.||||
4                60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSXLDVV

gi|154512       120 RKEAENCDCLQGFQVCHSLGGGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV
                120 ||||||||||||||||||||.|||||||||||||||||||||||||||||||||||||||
4               120 RKEAENCDCLQGFQVCHSLGRGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV

gi|154512       180 EPYNATLSVHQLVENADECMV 201
                180 ||||||||||.|||||||||| 201
4               180 EPYNATLSVHXLVENADECMV 201
""",
            )
            hit = hits[5]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|225470745|ref|XP_002267380.1|")
            self.assertEqual(hit.target.name, "XP_002267380")
            self.assertEqual(
                hit.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera] >gi|157327486|emb|CAO15467.1| unnamed protein product [Vitis vinifera]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=449)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1033.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 402.51939420267)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.24089932237309e-110)
            self.assertEqual(hsp.annotations["identity"], 192)
            self.assertEqual(hsp.annotations["positive"], 195)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 201],
                          [  0, 201]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 49)
            self.assertEqual(hsp.query.annotations["end"], 652)
            self.assertEqual(hsp.query.annotations["frame"], 2)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 201)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 201))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEA...CMV')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description,
                "gi|5049839|gb|AI730987.1|AI730987 BNLGHi8354 Six-day Cotton fiber Gossypium hirsutum cDNA 5' similar to TUBULIN BETA-1 CHAIN gi|486734|pir|S35142 tubulin beta chain - white lupine gi|402636 (X70184) Beta tubulin 1 [Lupinus albus], mRNA sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MREILHVQGGQCGNQIGAKFWEVVCAEHGIDSTGRYQGDTELQLERVNVYYNEA...CMV'}, length=449)",
            )
            self.assertEqual(hsp.target.id, "gi|225470745|ref|XP_002267380.1|")
            self.assertEqual(hsp.target.name, "XP_002267380")
            self.assertEqual(
                hsp.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera] >gi|157327486|emb|CAO15467.1| unnamed protein product [Vitis vinifera]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MREILH+Q GQCGNQIGA FWEVVCAEHGI+STGRYQGD +LQLERVNVYYNEASCGRFVPRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDS LDVVRKEAENCDCLQGFQVCHSLG GTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVVEPYNATLSVH LVENADECMV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|225470         0 MREILHVQGGQCGNQIGAKFWEVVCAEHGIDSTGRYQGDTELQLERVNVYYNEASCGRFV
                  0 ||||||.|.|||||||||.|||||||||||.||||||||..|||||||||||||||||||
4                 0 MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEASCGRFV

gi|225470        60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSVLDVV
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||||.||||
4                60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSXLDVV

gi|225470       120 RKEAENCDCLQGFQVCHSLGGGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV
                120 ||||||||||||||||||||.|||||||||||||||||||||||||||||||||||||||
4               120 RKEAENCDCLQGFQVCHSLGRGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV

gi|225470       180 EPYNATLSVHQLVENADECMV 201
                180 ||||||||||.|||||||||| 201
4               180 EPYNATLSVHXLVENADECMV 201
""",
            )
            hit = hits[6]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|586076|sp|P37392.1|TBB1_LUPAL")
            self.assertEqual(hit.target.name, "P37392")
            self.assertEqual(
                hit.target.description,
                "RecName: Full=Tubulin beta-1 chain; AltName: Full=Beta-1-tubulin >gi|402636|emb|CAA49736.1| Beta tubulin 1 [Lupinus albus]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=447)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1033.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 402.51939420267)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.24089932237309e-110)
            self.assertEqual(hsp.annotations["identity"], 193)
            self.assertEqual(hsp.annotations["positive"], 195)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 201],
                          [  0, 201]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 49)
            self.assertEqual(hsp.query.annotations["end"], 652)
            self.assertEqual(hsp.query.annotations["frame"], 2)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 201)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 201))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEA...CMV')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description,
                "gi|5049839|gb|AI730987.1|AI730987 BNLGHi8354 Six-day Cotton fiber Gossypium hirsutum cDNA 5' similar to TUBULIN BETA-1 CHAIN gi|486734|pir|S35142 tubulin beta chain - white lupine gi|402636 (X70184) Beta tubulin 1 [Lupinus albus], mRNA sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYGGDNELQLERVNVYYNEA...CMV'}, length=447)",
            )
            self.assertEqual(hsp.target.id, "gi|586076|sp|P37392.1|TBB1_LUPAL")
            self.assertEqual(hsp.target.name, "P37392")
            self.assertEqual(
                hsp.target.description,
                "RecName: Full=Tubulin beta-1 chain; AltName: Full=Beta-1-tubulin >gi|402636|emb|CAA49736.1| Beta tubulin 1 [Lupinus albus]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MREILHIQ GQCGNQIGA FWEVVCAEHGI+STGRY GDN+LQLERVNVYYNEASCGRFVPRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDS LDVVRKEAENCDCLQGFQVCHSLG GTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVVEPYNATLSVH LVENADECMV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|586076         0 MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYGGDNELQLERVNVYYNEASCGRFV
                  0 ||||||||.|||||||||.|||||||||||.|||||.|||.|||||||||||||||||||
4                 0 MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEASCGRFV

gi|586076        60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSVLDVV
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||||.||||
4                60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSXLDVV

gi|586076       120 RKEAENCDCLQGFQVCHSLGGGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV
                120 ||||||||||||||||||||.|||||||||||||||||||||||||||||||||||||||
4               120 RKEAENCDCLQGFQVCHSLGRGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV

gi|586076       180 EPYNATLSVHQLVENADECMV 201
                180 ||||||||||.|||||||||| 201
4               180 EPYNATLSVHXLVENADECMV 201
""",
            )
            hit = hits[7]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|224104341|ref|XP_002313404.1|")
            self.assertEqual(hit.target.name, "XP_002313404")
            self.assertEqual(
                hit.target.description,
                "tubulin, beta chain [Populus trichocarpa] >gi|222849812|gb|EEE87359.1| tubulin, beta chain [Populus trichocarpa]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=451)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1031.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 401.748995050835)
            self.assertAlmostEqual(hsp.annotations["evalue"], 2.1166536544662e-110)
            self.assertEqual(hsp.annotations["identity"], 192)
            self.assertEqual(hsp.annotations["positive"], 195)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 201],
                          [  0, 201]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 49)
            self.assertEqual(hsp.query.annotations["end"], 652)
            self.assertEqual(hsp.query.annotations["frame"], 2)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 201)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 201))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEA...CMV')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description,
                "gi|5049839|gb|AI730987.1|AI730987 BNLGHi8354 Six-day Cotton fiber Gossypium hirsutum cDNA 5' similar to TUBULIN BETA-1 CHAIN gi|486734|pir|S35142 tubulin beta chain - white lupine gi|402636 (X70184) Beta tubulin 1 [Lupinus albus], mRNA sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYQGDSPLQLERINVYYNEA...CMV'}, length=451)",
            )
            self.assertEqual(hsp.target.id, "gi|224104341|ref|XP_002313404.1|")
            self.assertEqual(hsp.target.name, "XP_002313404")
            self.assertEqual(
                hsp.target.description,
                "tubulin, beta chain [Populus trichocarpa] >gi|222849812|gb|EEE87359.1| tubulin, beta chain [Populus trichocarpa]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MREILHIQ GQCGNQIGA FWEVVCAEHGI+STGRYQGD+ LQLER+NVYYNEASCGRFVPRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDS LDVVRKEAENCDCLQGFQVCHSLG GTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVVEPYNATLSVH LVENADECMV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|224104         0 MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYQGDSPLQLERINVYYNEASCGRFV
                  0 ||||||||.|||||||||.|||||||||||.||||||||..|||||.|||||||||||||
4                 0 MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEASCGRFV

gi|224104        60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSVLDVV
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||||.||||
4                60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSXLDVV

gi|224104       120 RKEAENCDCLQGFQVCHSLGGGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV
                120 ||||||||||||||||||||.|||||||||||||||||||||||||||||||||||||||
4               120 RKEAENCDCLQGFQVCHSLGRGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV

gi|224104       180 EPYNATLSVHQLVENADECMV 201
                180 ||||||||||.|||||||||| 201
4               180 EPYNATLSVHXLVENADECMV 201
""",
            )
            hit = hits[8]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|223549679|gb|EEF51167.1|")
            self.assertEqual(hit.target.name, "EEF51167")
            self.assertEqual(
                hit.target.description,
                "tubulin beta chain, putative [Ricinus communis]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=446)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1029.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 400.978595899)
            self.assertAlmostEqual(hsp.annotations["evalue"], 3.61046429165375e-110)
            self.assertEqual(hsp.annotations["identity"], 191)
            self.assertEqual(hsp.annotations["positive"], 194)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 201],
                          [  0, 201]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 49)
            self.assertEqual(hsp.query.annotations["end"], 652)
            self.assertEqual(hsp.query.annotations["frame"], 2)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 201)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 201))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEA...CMV')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description,
                "gi|5049839|gb|AI730987.1|AI730987 BNLGHi8354 Six-day Cotton fiber Gossypium hirsutum cDNA 5' similar to TUBULIN BETA-1 CHAIN gi|486734|pir|S35142 tubulin beta chain - white lupine gi|402636 (X70184) Beta tubulin 1 [Lupinus albus], mRNA sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MREILHVQGGQCGNQIGAKFWEVVCAEHGIDSTGRYHGDTDLQLERVNVYYNEA...CMV'}, length=446)",
            )
            self.assertEqual(hsp.target.id, "gi|223549679|gb|EEF51167.1|")
            self.assertEqual(hsp.target.name, "EEF51167")
            self.assertEqual(
                hsp.target.description,
                "tubulin beta chain, putative [Ricinus communis]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MREILH+Q GQCGNQIGA FWEVVCAEHGI+STGRY GD DLQLERVNVYYNEASCGRFVPRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDS LDVVRKEAENCDCLQGFQVCHSLG GTGSGMGTLLISK+REEYPDRMMLTFSVFPSPKVSDTVVEPYNATLSVH LVENADECMV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|223549         0 MREILHVQGGQCGNQIGAKFWEVVCAEHGIDSTGRYHGDTDLQLERVNVYYNEASCGRFV
                  0 ||||||.|.|||||||||.|||||||||||.|||||.||.||||||||||||||||||||
4                 0 MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEASCGRFV

gi|223549        60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSVLDVV
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||||.||||
4                60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSXLDVV

gi|223549       120 RKEAENCDCLQGFQVCHSLGGGTGSGMGTLLISKMREEYPDRMMLTFSVFPSPKVSDTVV
                120 ||||||||||||||||||||.|||||||||||||.|||||||||||||||||||||||||
4               120 RKEAENCDCLQGFQVCHSLGRGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV

gi|223549       180 EPYNATLSVHQLVENADECMV 201
                180 ||||||||||.|||||||||| 201
4               180 EPYNATLSVHXLVENADECMV 201
""",
            )
            hit = hits[9]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|224058553|ref|XP_002299541.1|")
            self.assertEqual(hit.target.name, "XP_002299541")
            self.assertEqual(
                hit.target.description,
                "tubulin, beta chain [Populus trichocarpa] >gi|222846799|gb|EEE84346.1| tubulin, beta chain [Populus trichocarpa]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=447)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1029.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 400.978595899)
            self.assertAlmostEqual(hsp.annotations["evalue"], 3.61046429165375e-110)
            self.assertEqual(hsp.annotations["identity"], 192)
            self.assertEqual(hsp.annotations["positive"], 195)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 201],
                          [  0, 201]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 49)
            self.assertEqual(hsp.query.annotations["end"], 652)
            self.assertEqual(hsp.query.annotations["frame"], 2)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 201)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 201))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEA...CMV')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description,
                "gi|5049839|gb|AI730987.1|AI730987 BNLGHi8354 Six-day Cotton fiber Gossypium hirsutum cDNA 5' similar to TUBULIN BETA-1 CHAIN gi|486734|pir|S35142 tubulin beta chain - white lupine gi|402636 (X70184) Beta tubulin 1 [Lupinus albus], mRNA sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYQGDSALQIERVNVYYNEA...CMV'}, length=447)",
            )
            self.assertEqual(hsp.target.id, "gi|224058553|ref|XP_002299541.1|")
            self.assertEqual(hsp.target.name, "XP_002299541")
            self.assertEqual(
                hsp.target.description,
                "tubulin, beta chain [Populus trichocarpa] >gi|222846799|gb|EEE84346.1| tubulin, beta chain [Populus trichocarpa]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MREILHIQ GQCGNQIGA FWEVVCAEHGI+STGRYQGD+ LQ+ERVNVYYNEASCGRFVPRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDS LDVVRKEAENCDCLQGFQVCHSLG GTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVVEPYNATLSVH LVENADECMV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|224058         0 MREILHIQGGQCGNQIGAKFWEVVCAEHGIDSTGRYQGDSALQIERVNVYYNEASCGRFV
                  0 ||||||||.|||||||||.|||||||||||.||||||||..||.||||||||||||||||
4                 0 MREILHIQAGQCGNQIGANFWEVVCAEHGINSTGRYQGDNDLQLERVNVYYNEASCGRFV

gi|224058        60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSVLDVV
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||||.||||
4                60 PRAVLMDLEPGTMDSVRSGPYGQIFRPDNFVFGQSGAGNNWAKGHYTEGAELIDSXLDVV

gi|224058       120 RKEAENCDCLQGFQVCHSLGGGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV
                120 ||||||||||||||||||||.|||||||||||||||||||||||||||||||||||||||
4               120 RKEAENCDCLQGFQVCHSLGRGTGSGMGTLLISKIREEYPDRMMLTFSVFPSPKVSDTVV

gi|224058       180 EPYNATLSVHQLVENADECMV 201
                180 ||||||||||.|||||||||| 201
4               180 EPYNATLSVHXLVENADECMV 201
""",
            )
            record = next(records)
            self.assertEqual(record.num, 5)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "5")
            self.assertEqual(
                record.query.description,
                "gi|5052071|gb|AF067555.1|AF067555 Phlox stansburyi internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence",
            )
            self.assertEqual(repr(record.query.seq), "Seq(None, length=623)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 8994603)
            self.assertEqual(record.stat["db-len"], -1216159329)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 147032237429.0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 10)
            hit = hits[0]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|110740644|dbj|BAE98425.1|")
            self.assertEqual(hit.target.name, "BAE98425")
            self.assertEqual(
                hit.target.description, "hypothetical protein [Arabidopsis thaliana]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=80)")
            self.assertEqual(len(hit), 2)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 231.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 93.5893343169526)
            self.assertAlmostEqual(hsp.annotations["evalue"], 5.57283114448317e-19)
            self.assertEqual(hsp.annotations["identity"], 42)
            self.assertEqual(hsp.annotations["positive"], 45)
            self.assertEqual(hsp.annotations["gaps"], 1)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 0, 43, 43, 47],
                          [ 0, 43, 44, 48]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 282)
            self.assertEqual(hsp.query.annotations["end"], 426)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 47)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 48))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKNVAKCDTWCELQNPVNHRVFERKLRPKPLGRGHVCLGVSHRVAPNP')",
            )
            self.assertEqual(hsp.query.id, "5")
            self.assertEqual(
                hsp.query.description,
                "gi|5052071|gb|AF067555.1|AF067555 Phlox stansburyi internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MKNVAKCDTWCELQNPVNHRVFERKLRPKPSGRGHVCLGVTNRRPSP'}, length=80)",
            )
            self.assertEqual(hsp.target.id, "gi|110740644|dbj|BAE98425.1|")
            self.assertEqual(hsp.target.name, "BAE98425")
            self.assertEqual(
                hsp.target.description, "hypothetical protein [Arabidopsis thaliana]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKNVAKCDTWCELQNPVNHRVFERKLRPKP GRGHVCLGV++R  P+P",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|110740         0 MKNVAKCDTWCELQNPVNHRVFERKLRPKPSGRGHVCLGVTNR-RPSP 47
                  0 ||||||||||||||||||||||||||||||.|||||||||..|-.|.| 48
5                 0 MKNVAKCDTWCELQNPVNHRVFERKLRPKPLGRGHVCLGVSHRVAPNP 48
""",
            )
            hsp = hit[1]
            self.assertAlmostEqual(hsp.score, 53.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 25.0238098036637)
            self.assertAlmostEqual(hsp.annotations["evalue"], 5.57283114448317e-19)
            self.assertEqual(hsp.annotations["identity"], 13)
            self.assertEqual(hsp.annotations["positive"], 13)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[53, 70],
                          [ 0, 17]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 454)
            self.assertEqual(hsp.query.annotations["end"], 505)
            self.assertEqual(hsp.query.annotations["frame"], 2)
            self.assertEqual(hsp.target.annotations["start"], 53)
            self.assertEqual(hsp.target.annotations["end"], 70)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 17))
            self.assertEqual(repr(hsp.query.seq), "Seq('RKLVSRALRCAVGLNKS')")
            self.assertEqual(hsp.query.id, "5")
            self.assertEqual(
                hsp.query.description,
                "gi|5052071|gb|AF067555.1|AF067555 Phlox stansburyi internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq), "Seq({53: 'RKLVSRVLPHAVGLNPS'}, length=80)"
            )
            self.assertEqual(hsp.target.id, "gi|110740644|dbj|BAE98425.1|")
            self.assertEqual(hsp.target.name, "BAE98425")
            self.assertEqual(
                hsp.target.description, "hypothetical protein [Arabidopsis thaliana]"
            )
            self.assertEqual(hsp.annotations["midline"], "RKLVSR L  AVGLN S")
            self.assertEqual(
                str(hsp),
                """\
gi|110740        53 RKLVSRVLPHAVGLNPS 70
                  0 ||||||.|..|||||.| 17
5                 0 RKLVSRALRCAVGLNKS 17
""",
            )
            hit = hits[1]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|226453533|gb|EEH50844.1|")
            self.assertEqual(hit.target.name, "EEH50844")
            self.assertEqual(
                hit.target.description,
                "predicted protein [Micromonas pusilla CCMP1545]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=81)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 238.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 96.2857313483741)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.69151855577931e-18)
            self.assertEqual(hsp.annotations["identity"], 42)
            self.assertEqual(hsp.annotations["positive"], 45)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 0, 49],
                          [ 0, 49]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 282)
            self.assertEqual(hsp.query.annotations["end"], 429)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 49)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 49))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKNVAKCDTWCELQNPVNHRVFERKLRPKPLGRGHVCLGVSHRVAPNPF')",
            )
            self.assertEqual(hsp.query.id, "5")
            self.assertEqual(
                hsp.query.description,
                "gi|5052071|gb|AF067555.1|AF067555 Phlox stansburyi internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'MKNVAKCDTWCELQNPVNHRVFERKLRPKPSGRGHVCLGVTNRRPPSSF'}, length=81)",
            )
            self.assertEqual(hsp.target.id, "gi|226453533|gb|EEH50844.1|")
            self.assertEqual(hsp.target.name, "EEH50844")
            self.assertEqual(
                hsp.target.description,
                "predicted protein [Micromonas pusilla CCMP1545]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKNVAKCDTWCELQNPVNHRVFERKLRPKP GRGHVCLGV++R  P+ F",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|226453         0 MKNVAKCDTWCELQNPVNHRVFERKLRPKPSGRGHVCLGVTNRRPPSSF 49
                  0 ||||||||||||||||||||||||||||||.|||||||||..|..|..| 49
5                 0 MKNVAKCDTWCELQNPVNHRVFERKLRPKPLGRGHVCLGVSHRVAPNPF 49
""",
            )
            hit = hits[2]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|168069582|ref|XP_001786502.1|")
            self.assertEqual(hit.target.name, "XP_001786502")
            self.assertEqual(
                hit.target.description,
                "predicted protein [Physcomitrella patens subsp. patens] >gi|162661153|gb|EDQ48685.1| predicted protein [Physcomitrella patens subsp. patens]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=88)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 183.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 75.0997546729196)
            self.assertAlmostEqual(hsp.annotations["evalue"], 4.03544314604194e-12)
            self.assertEqual(hsp.annotations["identity"], 37)
            self.assertEqual(hsp.annotations["positive"], 39)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 2, 44],
                          [ 0, 42]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 244)
            self.assertEqual(hsp.query.annotations["end"], 370)
            self.assertEqual(hsp.query.annotations["frame"], -2)
            self.assertEqual(hsp.target.annotations["start"], 2)
            self.assertEqual(hsp.target.annotations["end"], 44)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 42))
            self.assertEqual(
                repr(hsp.query.seq), "Seq('ASGATCVQKLDGSRDSAIHTKYRISLRSSSMREPRYPLPRVV')"
            )
            self.assertEqual(hsp.query.id, "5")
            self.assertEqual(
                hsp.query.description,
                "gi|5052071|gb|AF067555.1|AF067555 Phlox stansburyi internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({2: 'ASGATCVQKLDDSRDSAIHTTYRISLRSSSLQEPRYPLLRVV'}, length=88)",
            )
            self.assertEqual(hsp.target.id, "gi|168069582|ref|XP_001786502.1|")
            self.assertEqual(hsp.target.name, "XP_001786502")
            self.assertEqual(
                hsp.target.description,
                "predicted protein [Physcomitrella patens subsp. patens] >gi|162661153|gb|EDQ48685.1| predicted protein [Physcomitrella patens subsp. patens]",
            )
            self.assertEqual(
                hsp.annotations["midline"], "ASGATCVQKLD SRDSAIHT YRISLRSSS++EPRYPL RVV"
            )
            self.assertEqual(
                str(hsp),
                """\
gi|168069         2 ASGATCVQKLDDSRDSAIHTTYRISLRSSSLQEPRYPLLRVV 44
                  0 |||||||||||.||||||||.|||||||||..||||||.||| 42
5                 0 ASGATCVQKLDGSRDSAIHTKYRISLRSSSMREPRYPLPRVV 42
""",
            )
            hit = hits[3]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|168068558|ref|XP_001786120.1|")
            self.assertEqual(hit.target.name, "XP_001786120")
            self.assertEqual(
                hit.target.description,
                "predicted protein [Physcomitrella patens subsp. patens] >gi|162662102|gb|EDQ49068.1| predicted protein [Physcomitrella patens subsp. patens]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=130)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 178.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 73.1737567933329)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.53346675969648e-11)
            self.assertEqual(hsp.annotations["identity"], 36)
            self.assertEqual(hsp.annotations["positive"], 39)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 2, 44],
                          [ 0, 42]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 244)
            self.assertEqual(hsp.query.annotations["end"], 370)
            self.assertEqual(hsp.query.annotations["frame"], -2)
            self.assertEqual(hsp.target.annotations["start"], 2)
            self.assertEqual(hsp.target.annotations["end"], 44)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 42))
            self.assertEqual(
                repr(hsp.query.seq), "Seq('ASGATCVQKLDGSRDSAIHTKYRISLRSSSMREPRYPLPRVV')"
            )
            self.assertEqual(hsp.query.id, "5")
            self.assertEqual(
                hsp.query.description,
                "gi|5052071|gb|AF067555.1|AF067555 Phlox stansburyi internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({2: 'ASGATCVQKLDDSRNSAIHTTYRISLRSSSLQEPRYPLLRVV'}, length=130)",
            )
            self.assertEqual(hsp.target.id, "gi|168068558|ref|XP_001786120.1|")
            self.assertEqual(hsp.target.name, "XP_001786120")
            self.assertEqual(
                hsp.target.description,
                "predicted protein [Physcomitrella patens subsp. patens] >gi|162662102|gb|EDQ49068.1| predicted protein [Physcomitrella patens subsp. patens]",
            )
            self.assertEqual(
                hsp.annotations["midline"], "ASGATCVQKLD SR+SAIHT YRISLRSSS++EPRYPL RVV"
            )
            self.assertEqual(
                str(hsp),
                """\
gi|168068         2 ASGATCVQKLDDSRNSAIHTTYRISLRSSSLQEPRYPLLRVV 44
                  0 |||||||||||.||.|||||.|||||||||..||||||.||| 42
5                 0 ASGATCVQKLDGSRDSAIHTKYRISLRSSSMREPRYPLPRVV 42
""",
            )
            hit = hits[4]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|168068926|ref|XP_001786259.1|")
            self.assertEqual(hit.target.name, "XP_001786259")
            self.assertEqual(
                hit.target.description,
                "predicted protein [Physcomitrella patens subsp. patens] >gi|168069965|ref|XP_001786641.1| predicted protein [Physcomitrella patens subsp. patens] >gi|162660807|gb|EDQ48545.1| predicted protein [Physcomitrella patens subsp. patens] >gi|162661808|gb|EDQ48929.1| predicted protein [Physcomitrella patens subsp. patens]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=148)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 178.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 73.1737567933329)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.53346675969648e-11)
            self.assertEqual(hsp.annotations["identity"], 36)
            self.assertEqual(hsp.annotations["positive"], 39)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 2, 44],
                          [ 0, 42]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 244)
            self.assertEqual(hsp.query.annotations["end"], 370)
            self.assertEqual(hsp.query.annotations["frame"], -2)
            self.assertEqual(hsp.target.annotations["start"], 2)
            self.assertEqual(hsp.target.annotations["end"], 44)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 42))
            self.assertEqual(
                repr(hsp.query.seq), "Seq('ASGATCVQKLDGSRDSAIHTKYRISLRSSSMREPRYPLPRVV')"
            )
            self.assertEqual(hsp.query.id, "5")
            self.assertEqual(
                hsp.query.description,
                "gi|5052071|gb|AF067555.1|AF067555 Phlox stansburyi internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({2: 'ASGATCVQKLDDSRNSAIHTTYRISLRSSSLQEPRYPLLRVV'}, length=148)",
            )
            self.assertEqual(hsp.target.id, "gi|168068926|ref|XP_001786259.1|")
            self.assertEqual(hsp.target.name, "XP_001786259")
            self.assertEqual(
                hsp.target.description,
                "predicted protein [Physcomitrella patens subsp. patens] >gi|168069965|ref|XP_001786641.1| predicted protein [Physcomitrella patens subsp. patens] >gi|162660807|gb|EDQ48545.1| predicted protein [Physcomitrella patens subsp. patens] >gi|162661808|gb|EDQ48929.1| predicted protein [Physcomitrella patens subsp. patens]",
            )
            self.assertEqual(
                hsp.annotations["midline"], "ASGATCVQKLD SR+SAIHT YRISLRSSS++EPRYPL RVV"
            )
            self.assertEqual(
                str(hsp),
                """\
gi|168068         2 ASGATCVQKLDDSRNSAIHTTYRISLRSSSLQEPRYPLLRVV 44
                  0 |||||||||||.||.|||||.|||||||||..||||||.||| 42
5                 0 ASGATCVQKLDGSRDSAIHTKYRISLRSSSMREPRYPLPRVV 42
""",
            )
            hit = hits[5]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|168070288|ref|XP_001786759.1|")
            self.assertEqual(hit.target.name, "XP_001786759")
            self.assertEqual(
                hit.target.description,
                "predicted protein [Physcomitrella patens subsp. patens] >gi|162660550|gb|EDQ48427.1| predicted protein [Physcomitrella patens subsp. patens]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=148)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 178.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 73.1737567933329)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.53346675969648e-11)
            self.assertEqual(hsp.annotations["identity"], 36)
            self.assertEqual(hsp.annotations["positive"], 39)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 2, 44],
                          [ 0, 42]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 244)
            self.assertEqual(hsp.query.annotations["end"], 370)
            self.assertEqual(hsp.query.annotations["frame"], -2)
            self.assertEqual(hsp.target.annotations["start"], 2)
            self.assertEqual(hsp.target.annotations["end"], 44)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 42))
            self.assertEqual(
                repr(hsp.query.seq), "Seq('ASGATCVQKLDGSRDSAIHTKYRISLRSSSMREPRYPLPRVV')"
            )
            self.assertEqual(hsp.query.id, "5")
            self.assertEqual(
                hsp.query.description,
                "gi|5052071|gb|AF067555.1|AF067555 Phlox stansburyi internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({2: 'ASGATCVQKLDDSRNSAIHTTYRISLRSSSLQEPRYPLLRVV'}, length=148)",
            )
            self.assertEqual(hsp.target.id, "gi|168070288|ref|XP_001786759.1|")
            self.assertEqual(hsp.target.name, "XP_001786759")
            self.assertEqual(
                hsp.target.description,
                "predicted protein [Physcomitrella patens subsp. patens] >gi|162660550|gb|EDQ48427.1| predicted protein [Physcomitrella patens subsp. patens]",
            )
            self.assertEqual(
                hsp.annotations["midline"], "ASGATCVQKLD SR+SAIHT YRISLRSSS++EPRYPL RVV"
            )
            self.assertEqual(
                str(hsp),
                """\
gi|168070         2 ASGATCVQKLDDSRNSAIHTTYRISLRSSSLQEPRYPLLRVV 44
                  0 |||||||||||.||.|||||.|||||||||..||||||.||| 42
5                 0 ASGATCVQKLDGSRDSAIHTKYRISLRSSSMREPRYPLPRVV 42
""",
            )
            hit = hits[6]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|168068591|ref|XP_001786133.1|")
            self.assertEqual(hit.target.name, "XP_001786133")
            self.assertEqual(
                hit.target.description,
                "predicted protein [Physcomitrella patens subsp. patens] >gi|162662081|gb|EDQ49057.1| predicted protein [Physcomitrella patens subsp. patens]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=220)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 172.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 70.8625593378288)
            self.assertAlmostEqual(hsp.annotations["evalue"], 7.61051640442713e-11)
            self.assertEqual(hsp.annotations["identity"], 42)
            self.assertEqual(hsp.annotations["positive"], 50)
            self.assertEqual(hsp.annotations["gaps"], 8)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[142, 169, 172, 183, 183, 220],
                          [  0,  27,  27,  38,  43,  80]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 255)
            self.assertEqual(hsp.query.annotations["end"], 495)
            self.assertEqual(hsp.query.annotations["frame"], -3)
            self.assertEqual(hsp.target.annotations["start"], 142)
            self.assertEqual(hsp.target.annotations["end"], 220)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 83))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('RPTAHRSARETNFRSQTVESRRKWVGGDAM*DAQADVPSA*WLRAQLAFKNSMV...IRC')",
            )
            self.assertEqual(hsp.query.id, "5")
            self.assertEqual(
                hsp.query.description,
                "gi|5052071|gb|AF067555.1|AF067555 Phlox stansburyi internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({142: 'RGLCHHADSDGQFHSTLPIKDIKRIGGCRDDALAGMPSDEPRAQLAFKNSMIHG...IRC'}, length=220)",
            )
            self.assertEqual(hsp.target.id, "gi|168068591|ref|XP_001786133.1|")
            self.assertEqual(hsp.target.name, "XP_001786133")
            self.assertEqual(
                hsp.target.description,
                "predicted protein [Physcomitrella patens subsp. patens] >gi|162662081|gb|EDQ49057.1| predicted protein [Physcomitrella patens subsp. patens]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "R   H +  +  F S       K +GG   DA+    +D P     RAQLAFKNSM+HGILQFT  IAFR VLHRC+S+DIRC",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|168068       142 RGLCHHADSDGQFHSTLPIKDIKRIGGCRDDALAGMPSDEP-----RAQLAFKNSMIHGI
                  0 |...|.......|.|.......|..||---||......|.|-----||||||||||.|||
5                 0 RPTAHRSARETNFRSQTVESRRKWVGG---DAM*DAQADVPSA*WLRAQLAFKNSMVHGI

gi|168068       197 LQFTLRIAFRCVLHRCKSQDIRC 220
                 60 ||||..||||.|||||.|.||||  83
5                57 LQFTPSIAFRYVLHRCESRDIRC  80
""",
            )
            hit = hits[7]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|74622391|sp|Q8TGM5|ART3_YEAST")
            self.assertEqual(hit.target.name, "Q8TGM5")
            self.assertEqual(
                hit.target.description,
                "Uncharacterized protein ART3 (Antisense to ribosomal RNA transcript protein 3) >gi|18767126|gb|AAL79278.1| unknown [Saccharomyces cerevisiae]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=67)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 141.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 58.9213724843908)
            self.assertAlmostEqual(hsp.annotations["evalue"], 2.99274389212967e-07)
            self.assertEqual(hsp.annotations["identity"], 29)
            self.assertEqual(hsp.annotations["positive"], 32)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 7, 46],
                          [ 0, 39]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 247)
            self.assertEqual(hsp.query.annotations["end"], 364)
            self.assertEqual(hsp.query.annotations["frame"], -2)
            self.assertEqual(hsp.target.annotations["start"], 7)
            self.assertEqual(hsp.target.annotations["end"], 46)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 39))
            self.assertEqual(
                repr(hsp.query.seq), "Seq('GATCVQKLDGSRDSAIHTKYRISLRSSSMREPRYPLPRV')"
            )
            self.assertEqual(hsp.query.id, "5")
            self.assertEqual(
                hsp.query.description,
                "gi|5052071|gb|AF067555.1|AF067555 Phlox stansburyi internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({7: 'GAMCVQRFDDSRNSAIHITYRISLRSSSMREPRDPLLKV'}, length=67)",
            )
            self.assertEqual(hsp.target.id, "gi|74622391|sp|Q8TGM5|ART3_YEAST")
            self.assertEqual(hsp.target.name, "Q8TGM5")
            self.assertEqual(
                hsp.target.description,
                "Uncharacterized protein ART3 (Antisense to ribosomal RNA transcript protein 3) >gi|18767126|gb|AAL79278.1| unknown [Saccharomyces cerevisiae]",
            )
            self.assertEqual(
                hsp.annotations["midline"], "GA CVQ+ D SR+SAIH  YRISLRSSSMREPR PL +V"
            )
            self.assertEqual(
                str(hsp),
                """\
gi|746223         7 GAMCVQRFDDSRNSAIHITYRISLRSSSMREPRDPLLKV 46
                  0 ||.|||..|.||.||||..||||||||||||||.||..| 39
5                 0 GATCVQKLDGSRDSAIHTKYRISLRSSSMREPRYPLPRV 39
""",
            )
            hit = hits[8]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|168069944|ref|XP_001786634.1|")
            self.assertEqual(hit.target.name, "XP_001786634")
            self.assertEqual(
                hit.target.description,
                "predicted protein [Physcomitrella patens subsp. patens] >gi|162660825|gb|EDQ48552.1| predicted protein [Physcomitrella patens subsp. patens]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=138)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 137.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 57.3805741807214)
            self.assertAlmostEqual(hsp.annotations["evalue"], 8.70755166175354e-07)
            self.assertEqual(hsp.annotations["identity"], 28)
            self.assertEqual(hsp.annotations["positive"], 31)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 0, 34],
                          [ 0, 34]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 244)
            self.assertEqual(hsp.query.annotations["end"], 346)
            self.assertEqual(hsp.query.annotations["frame"], -2)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 34)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 34))
            self.assertEqual(
                repr(hsp.query.seq), "Seq('KLDGSRDSAIHTKYRISLRSSSMREPRYPLPRVV')"
            )
            self.assertEqual(hsp.query.id, "5")
            self.assertEqual(
                hsp.query.description,
                "gi|5052071|gb|AF067555.1|AF067555 Phlox stansburyi internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({0: 'KLDDSRNSAIHTTYRISLRSSSLQEPRYPLLRVV'}, length=138)",
            )
            self.assertEqual(hsp.target.id, "gi|168069944|ref|XP_001786634.1|")
            self.assertEqual(hsp.target.name, "XP_001786634")
            self.assertEqual(
                hsp.target.description,
                "predicted protein [Physcomitrella patens subsp. patens] >gi|162660825|gb|EDQ48552.1| predicted protein [Physcomitrella patens subsp. patens]",
            )
            self.assertEqual(
                hsp.annotations["midline"], "KLD SR+SAIHT YRISLRSSS++EPRYPL RVV"
            )
            self.assertEqual(
                str(hsp),
                """\
gi|168069         0 KLDDSRNSAIHTTYRISLRSSSLQEPRYPLLRVV 34
                  0 |||.||.|||||.|||||||||..||||||.||| 34
5                 0 KLDGSRDSAIHTKYRISLRSSSMREPRYPLPRVV 34
""",
            )
            hit = hits[9]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|50307717|ref|XP_453851.1|")
            self.assertEqual(hit.target.name, "XP_453851")
            self.assertEqual(
                hit.target.description, "unnamed protein product [Kluyveromyces lactis]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=54)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 134.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 56.2249754529693)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.93984013155423e-06)
            self.assertEqual(hsp.annotations["identity"], 28)
            self.assertEqual(hsp.annotations["positive"], 31)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 7, 47],
                          [ 0, 40]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 244)
            self.assertEqual(hsp.query.annotations["end"], 364)
            self.assertEqual(hsp.query.annotations["frame"], -2)
            self.assertEqual(hsp.target.annotations["start"], 7)
            self.assertEqual(hsp.target.annotations["end"], 47)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 40))
            self.assertEqual(
                repr(hsp.query.seq), "Seq('GATCVQKLDGSRDSAIHTKYRISLRSSSMREPRYPLPRVV')"
            )
            self.assertEqual(hsp.query.id, "5")
            self.assertEqual(
                hsp.query.description,
                "gi|5052071|gb|AF067555.1|AF067555 Phlox stansburyi internal transcribed spacer 1, 5.8S ribosomal RNA gene, and internal transcribed spacer 2, complete sequence",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({7: 'GAMCVQRFDDSRKSAIHNTYRNSLRSSSMREPRDPLLKVL'}, length=54)",
            )
            self.assertEqual(hsp.target.id, "gi|50307717|ref|XP_453851.1|")
            self.assertEqual(hsp.target.name, "XP_453851")
            self.assertEqual(
                hsp.target.description, "unnamed protein product [Kluyveromyces lactis]"
            )
            self.assertEqual(
                hsp.annotations["midline"], "GA CVQ+ D SR SAIH  YR SLRSSSMREPR PL +V+"
            )
            self.assertEqual(
                str(hsp),
                """\
gi|503077         7 GAMCVQRFDDSRKSAIHNTYRNSLRSSSMREPRDPLLKVL 47
                  0 ||.|||..|.||.||||..||.|||||||||||.||..|. 40
5                 0 GATCVQKLDGSRDSAIHTKYRISLRSSSMREPRYPLPRVV 40
""",
            )
            record = next(records)
            self.assertEqual(record.num, 6)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "6")
            self.assertEqual(
                record.query.description,
                "gi|3176602|gb|U78617.1|LOU78617 Lathyrus odoratus phytochrome A (PHYA) gene, partial cds",
            )
            self.assertEqual(repr(record.query.seq), "Seq(None, length=309)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 8994603)
            self.assertEqual(record.stat["db-len"], -1216159329)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 75367093081.0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 10)
            hit = hits[0]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|3176603|gb|AAC18749.1|")
            self.assertEqual(hit.target.name, "AAC18749")
            self.assertEqual(
                hit.target.description, "phytochrome A [Lathyrus odoratus]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=103)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 543.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 213.771602003167)
            self.assertAlmostEqual(hsp.annotations["evalue"], 3.7262743863676e-54)
            self.assertEqual(hsp.annotations["identity"], 103)
            self.assertEqual(hsp.annotations["positive"], 103)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 103],
                          [  0, 103]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 309)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 103)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 103))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.query.id, "6")
            self.assertEqual(
                hsp.query.description,
                "gi|3176602|gb|U78617.1|LOU78617 Lathyrus odoratus phytochrome A (PHYA) gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.target.id, "gi|3176603|gb|AAC18749.1|")
            self.assertEqual(hsp.target.name, "AAC18749")
            self.assertEqual(
                hsp.target.description, "phytochrome A [Lathyrus odoratus]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIASLVMAVVVNDSDEDGDSRDAVLPQKKKRLWGLVVCHNTTPRFV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|317660         0 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
6                 0 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA

gi|317660        60 SLVMAVVVNDSDEDGDSRDAVLPQKKKRLWGLVVCHNTTPRFV 103
                 60 ||||||||||||||||||||||||||||||||||||||||||| 103
6                60 SLVMAVVVNDSDEDGDSRDAVLPQKKKRLWGLVVCHNTTPRFV 103
""",
            )
            hit = hits[1]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|130188|sp|P15001.1|PHYA_PEA")
            self.assertEqual(hit.target.name, "P15001")
            self.assertEqual(
                hit.target.description,
                "RecName: Full=Phytochrome A >gi|169132|gb|AAA33682.1| phytochrome [Pisum sativum] >gi|295830|emb|CAA32242.1| phytochrome apoprotein [Pisum sativum] >gi|51173514|gb|AAT97643.1| phytochrome A apoprotein [Pisum sativum] >gi|226757|prf||1604466A phytochrome",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=1124)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 530.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 208.764007516241)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.1987013044853e-52)
            self.assertEqual(hsp.annotations["identity"], 101)
            self.assertEqual(hsp.annotations["positive"], 102)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[275, 378],
                          [  0, 103]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 309)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 275)
            self.assertEqual(hsp.target.annotations["end"], 378)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 103))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.query.id, "6")
            self.assertEqual(
                hsp.query.description,
                "gi|3176602|gb|U78617.1|LOU78617 Lathyrus odoratus phytochrome A (PHYA) gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({275: 'QAARFLFMKNKVRMIVDCNAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV'}, length=1124)",
            )
            self.assertEqual(hsp.target.id, "gi|130188|sp|P15001.1|PHYA_PEA")
            self.assertEqual(hsp.target.name, "P15001")
            self.assertEqual(
                hsp.target.description,
                "RecName: Full=Phytochrome A >gi|169132|gb|AAA33682.1| phytochrome [Pisum sativum] >gi|295830|emb|CAA32242.1| phytochrome apoprotein [Pisum sativum] >gi|51173514|gb|AAT97643.1| phytochrome A apoprotein [Pisum sativum] >gi|226757|prf||1604466A phytochrome",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "QAARFLFMKNKVRMIVDC+AKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIASLVMAVVVNDSDEDGDS DAVLPQKKKRLWGLVVCHNTTPRFV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|130188       275 QAARFLFMKNKVRMIVDCNAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA
                  0 ||||||||||||||||||.|||||||||||||||||||||||||||||||||||||||||
6                 0 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA

gi|130188       335 SLVMAVVVNDSDEDGDSADAVLPQKKKRLWGLVVCHNTTPRFV 378
                 60 |||||||||||||||||.||||||||||||||||||||||||| 103
6                60 SLVMAVVVNDSDEDGDSRDAVLPQKKKRLWGLVVCHNTTPRFV 103
""",
            )
            hit = hits[2]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|2499555|sp|P93673.1|PHYA_LATSA")
            self.assertEqual(hit.target.name, "P93673")
            self.assertEqual(
                hit.target.description,
                "RecName: Full=Phytochrome type A >gi|1848273|gb|AAB47994.1| phytochrome type A [Lathyrus sativus]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=1124)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 530.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 208.764007516241)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.1987013044853e-52)
            self.assertEqual(hsp.annotations["identity"], 101)
            self.assertEqual(hsp.annotations["positive"], 102)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[275, 378],
                          [  0, 103]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 309)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 275)
            self.assertEqual(hsp.target.annotations["end"], 378)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 103))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.query.id, "6")
            self.assertEqual(
                hsp.query.description,
                "gi|3176602|gb|U78617.1|LOU78617 Lathyrus odoratus phytochrome A (PHYA) gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({275: 'QAARFLFMKNKVRMIVDCNAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV'}, length=1124)",
            )
            self.assertEqual(hsp.target.id, "gi|2499555|sp|P93673.1|PHYA_LATSA")
            self.assertEqual(hsp.target.name, "P93673")
            self.assertEqual(
                hsp.target.description,
                "RecName: Full=Phytochrome type A >gi|1848273|gb|AAB47994.1| phytochrome type A [Lathyrus sativus]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "QAARFLFMKNKVRMIVDC+AKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIASLVMAVVVNDSDEDGDS DAVLPQKKKRLWGLVVCHNTTPRFV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|249955       275 QAARFLFMKNKVRMIVDCNAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA
                  0 ||||||||||||||||||.|||||||||||||||||||||||||||||||||||||||||
6                 0 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA

gi|249955       335 SLVMAVVVNDSDEDGDSADAVLPQKKKRLWGLVVCHNTTPRFV 378
                 60 |||||||||||||||||.||||||||||||||||||||||||| 103
6                60 SLVMAVVVNDSDEDGDSRDAVLPQKKKRLWGLVVCHNTTPRFV 103
""",
            )
            hit = hits[3]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|3176595|gb|AAC18745.1|")
            self.assertEqual(hit.target.name, "AAC18745")
            self.assertEqual(
                hit.target.description,
                "phytochrome A [Lennea melanocarpa] >gi|3176597|gb|AAC18746.1| phytochrome A [Hebestigma cubense] >gi|3176609|gb|AAC18752.1| phytochrome A [Sesbania cochichinensis] >gi|3176611|gb|AAC18753.1| phytochrome A [Sesbania emerus]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=103)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 528.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 207.993608364407)
            self.assertAlmostEqual(hsp.annotations["evalue"], 2.04467473791515e-52)
            self.assertEqual(hsp.annotations["identity"], 100)
            self.assertEqual(hsp.annotations["positive"], 101)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 103],
                          [  0, 103]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 309)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 103)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 103))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.query.id, "6")
            self.assertEqual(
                hsp.query.description,
                "gi|3176602|gb|U78617.1|LOU78617 Lathyrus odoratus phytochrome A (PHYA) gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.target.id, "gi|3176595|gb|AAC18745.1|")
            self.assertEqual(hsp.target.name, "AAC18745")
            self.assertEqual(
                hsp.target.description,
                "phytochrome A [Lennea melanocarpa] >gi|3176597|gb|AAC18746.1| phytochrome A [Hebestigma cubense] >gi|3176609|gb|AAC18752.1| phytochrome A [Sesbania cochichinensis] >gi|3176611|gb|AAC18753.1| phytochrome A [Sesbania emerus]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIASLVMAVVVNDSDEDGDS DAV PQK+KRLWGLVVCHNTTPRFV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|317659         0 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
6                 0 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA

gi|317659        60 SLVMAVVVNDSDEDGDSSDAVQPQKRKRLWGLVVCHNTTPRFV 103
                 60 |||||||||||||||||.|||.|||.||||||||||||||||| 103
6                60 SLVMAVVVNDSDEDGDSRDAVLPQKKKRLWGLVVCHNTTPRFV 103
""",
            )
            hit = hits[4]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|1711106|gb|AAC18675.1|")
            self.assertEqual(hit.target.name, "AAC18675")
            self.assertEqual(hit.target.description, "phytochrome A [Sophora affinis]")
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=210)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 528.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 207.993608364407)
            self.assertAlmostEqual(hsp.annotations["evalue"], 2.04467473791515e-52)
            self.assertEqual(hsp.annotations["identity"], 100)
            self.assertEqual(hsp.annotations["positive"], 101)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 40, 143],
                          [  0, 103]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 309)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 40)
            self.assertEqual(hsp.target.annotations["end"], 143)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 103))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.query.id, "6")
            self.assertEqual(
                hsp.query.description,
                "gi|3176602|gb|U78617.1|LOU78617 Lathyrus odoratus phytochrome A (PHYA) gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({40: 'QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV'}, length=210)",
            )
            self.assertEqual(hsp.target.id, "gi|1711106|gb|AAC18675.1|")
            self.assertEqual(hsp.target.name, "AAC18675")
            self.assertEqual(hsp.target.description, "phytochrome A [Sophora affinis]")
            self.assertEqual(
                hsp.annotations["midline"],
                "QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIASLVMAVVVNDSDEDGDS DAV PQK+KRLWGLVVCHNTTPRFV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|171110        40 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
6                 0 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA

gi|171110       100 SLVMAVVVNDSDEDGDSSDAVQPQKRKRLWGLVVCHNTTPRFV 143
                 60 |||||||||||||||||.|||.|||.||||||||||||||||| 103
6                60 SLVMAVVVNDSDEDGDSRDAVLPQKKKRLWGLVVCHNTTPRFV 103
""",
            )
            hit = hits[5]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|1711090|gb|AAC18670.1|")
            self.assertEqual(hit.target.name, "AAC18670")
            self.assertEqual(
                hit.target.description, "phytochrome A [Myrospermum sousanum]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=210)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 525.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 206.838009636654)
            self.assertAlmostEqual(hsp.annotations["evalue"], 4.55506009801166e-52)
            self.assertEqual(hsp.annotations["identity"], 99)
            self.assertEqual(hsp.annotations["positive"], 101)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 40, 143],
                          [  0, 103]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 309)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 40)
            self.assertEqual(hsp.target.annotations["end"], 143)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 103))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.query.id, "6")
            self.assertEqual(
                hsp.query.description,
                "gi|3176602|gb|U78617.1|LOU78617 Lathyrus odoratus phytochrome A (PHYA) gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({40: 'QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV'}, length=210)",
            )
            self.assertEqual(hsp.target.id, "gi|1711090|gb|AAC18670.1|")
            self.assertEqual(hsp.target.name, "AAC18670")
            self.assertEqual(
                hsp.target.description, "phytochrome A [Myrospermum sousanum]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIASLV+AVVVNDSDEDGDS DAV PQK+KRLWGLVVCHNTTPRFV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|171109        40 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
6                 0 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA

gi|171109       100 SLVLAVVVNDSDEDGDSSDAVQPQKRKRLWGLVVCHNTTPRFV 143
                 60 |||.|||||||||||||.|||.|||.||||||||||||||||| 103
6                60 SLVMAVVVNDSDEDGDSRDAVLPQKKKRLWGLVVCHNTTPRFV 103
""",
            )
            hit = hits[6]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|3176605|gb|AAC18750.1|")
            self.assertEqual(hit.target.name, "AAC18750")
            self.assertEqual(
                hit.target.description, "phytochrome A [Hybosema robustum]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=103)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 524.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 206.452810060737)
            self.assertAlmostEqual(hsp.annotations["evalue"], 5.94909272347008e-52)
            self.assertEqual(hsp.annotations["identity"], 99)
            self.assertEqual(hsp.annotations["positive"], 100)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 103],
                          [  0, 103]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 309)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 103)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 103))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.query.id, "6")
            self.assertEqual(
                hsp.query.description,
                "gi|3176602|gb|U78617.1|LOU78617 Lathyrus odoratus phytochrome A (PHYA) gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('QATRFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.target.id, "gi|3176605|gb|AAC18750.1|")
            self.assertEqual(hsp.target.name, "AAC18750")
            self.assertEqual(
                hsp.target.description, "phytochrome A [Hybosema robustum]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "QA RFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIASLVMAVVVNDSDEDGDS DAV PQK+KRLWGLVVCHNTTPRFV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|317660         0 QATRFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA
                  0 ||.|||||||||||||||||||||||||||||||||||||||||||||||||||||||||
6                 0 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA

gi|317660        60 SLVMAVVVNDSDEDGDSSDAVQPQKRKRLWGLVVCHNTTPRFV 103
                 60 |||||||||||||||||.|||.|||.||||||||||||||||| 103
6                60 SLVMAVVVNDSDEDGDSRDAVLPQKKKRLWGLVVCHNTTPRFV 103
""",
            )
            hit = hits[7]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|3176454|gb|AAC18668.1|")
            self.assertEqual(hit.target.name, "AAC18668")
            self.assertEqual(
                hit.target.description, "phytochrome A [Cyclolobium nutans]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=207)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 523.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 206.06761048482)
            self.assertAlmostEqual(hsp.annotations["evalue"], 7.76975571582328e-52)
            self.assertEqual(hsp.annotations["identity"], 99)
            self.assertEqual(hsp.annotations["positive"], 101)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 37, 140],
                          [  0, 103]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 309)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 37)
            self.assertEqual(hsp.target.annotations["end"], 140)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 103))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.query.id, "6")
            self.assertEqual(
                hsp.query.description,
                "gi|3176602|gb|U78617.1|LOU78617 Lathyrus odoratus phytochrome A (PHYA) gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({37: 'QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV'}, length=207)",
            )
            self.assertEqual(hsp.target.id, "gi|3176454|gb|AAC18668.1|")
            self.assertEqual(hsp.target.name, "AAC18668")
            self.assertEqual(
                hsp.target.description, "phytochrome A [Cyclolobium nutans]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIASLVMAVVVNDSDEDG+S DAV PQK+KRLWGLVVCHNTTPRFV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|317645        37 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
6                 0 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA

gi|317645        97 SLVMAVVVNDSDEDGNSSDAVQPQKRKRLWGLVVCHNTTPRFV 140
                 60 |||||||||||||||.|.|||.|||.||||||||||||||||| 103
6                60 SLVMAVVVNDSDEDGDSRDAVLPQKKKRLWGLVVCHNTTPRFV 103
""",
            )
            hit = hits[8]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|3176523|gb|AAC18709.1|")
            self.assertEqual(hit.target.name, "AAC18709")
            self.assertEqual(
                hit.target.description, "phytochrome A [Millettia richardiana]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=139)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 521.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 205.297211332985)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.3253195915005e-51)
            self.assertEqual(hsp.annotations["identity"], 98)
            self.assertEqual(hsp.annotations["positive"], 101)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 36, 139],
                          [  0, 103]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 309)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 36)
            self.assertEqual(hsp.target.annotations["end"], 139)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 103))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.query.id, "6")
            self.assertEqual(
                hsp.query.description,
                "gi|3176602|gb|U78617.1|LOU78617 Lathyrus odoratus phytochrome A (PHYA) gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({36: 'QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV'}, length=139)",
            )
            self.assertEqual(hsp.target.id, "gi|3176523|gb|AAC18709.1|")
            self.assertEqual(hsp.target.name, "AAC18709")
            self.assertEqual(
                hsp.target.description, "phytochrome A [Millettia richardiana]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIASLVMAVVVND++EDGDS DAV PQK+KRLWGLVVCHNTTPRFV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|317652        36 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
6                 0 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA

gi|317652        96 SLVMAVVVNDNEEDGDSSDAVQPQKRKRLWGLVVCHNTTPRFV 139
                 60 ||||||||||..|||||.|||.|||.||||||||||||||||| 103
6                60 SLVMAVVVNDSDEDGDSRDAVLPQKKKRLWGLVVCHNTTPRFV 103
""",
            )
            hit = hits[9]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|3176494|gb|AAC18693.1|")
            self.assertEqual(hit.target.name, "AAC18693")
            self.assertEqual(
                hit.target.description, "phytochrome A [Callerya atropurpurea]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=177)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 520.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 204.912011757068)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.73092099081406e-51)
            self.assertEqual(hsp.annotations["identity"], 98)
            self.assertEqual(hsp.annotations["positive"], 101)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  7, 110],
                          [  0, 103]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 309)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 7)
            self.assertEqual(hsp.target.annotations["end"], 110)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 103))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV')",
            )
            self.assertEqual(hsp.query.id, "6")
            self.assertEqual(
                hsp.query.description,
                "gi|3176602|gb|U78617.1|LOU78617 Lathyrus odoratus phytochrome A (PHYA) gene, partial cds",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({7: 'QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMA...RFV'}, length=177)",
            )
            self.assertEqual(hsp.target.id, "gi|3176494|gb|AAC18693.1|")
            self.assertEqual(hsp.target.name, "AAC18693")
            self.assertEqual(
                hsp.target.description, "phytochrome A [Callerya atropurpurea]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIASLVMAVVVNDS+EDGDS +AV PQK+KRLWGLVVCHNTTPRFV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|317649         7 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
6                 0 QAARFLFMKNKVRMIVDCHAKHVKVLQDEKLPFDLTLCGSTLRAPHSCHLQYMANMDSIA

gi|317649        67 SLVMAVVVNDSEEDGDSSEAVQPQKRKRLWGLVVCHNTTPRFV 110
                 60 |||||||||||.|||||..||.|||.||||||||||||||||| 103
6                60 SLVMAVVVNDSDEDGDSRDAVLPQKKKRLWGLVVCHNTTPRFV 103
""",
            )
            record = next(records)
            self.assertEqual(record.num, 7)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "7")
            self.assertEqual(
                record.query.description,
                "gi|5817701|gb|AF142731.1|AF142731 Wisteria frutescens maturase-like protein (matK) gene, complete cds; chloroplast gene for chloroplast product",
            )
            self.assertEqual(repr(record.query.seq), "Seq(None, length=2551)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 8994603)
            self.assertEqual(record.stat["db-len"], -1216159329)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 1251086325060.0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 10)
            hit = hits[0]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|27805603|sp|Q9TKP6.1|MATK_WISFR")
            self.assertEqual(hit.target.name, "Q9TKP6")
            self.assertEqual(
                hit.target.description,
                "RecName: Full=Maturase K; AltName: Full=Intron maturase >gi|5817759|gb|AAD52902.1|AF142731_1 maturase-like protein [Wisteria frutescens]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=506)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2451.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 948.732392853477)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 506)
            self.assertEqual(hsp.annotations["positive"], 506)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 506],
                          [  0, 506]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 726)
            self.assertEqual(hsp.query.annotations["end"], 2244)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 506)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 506))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.query.id, "7")
            self.assertEqual(
                hsp.query.description,
                "gi|5817701|gb|AF142731.1|AF142731 Wisteria frutescens maturase-like protein (matK) gene, complete cds; chloroplast gene for chloroplast product",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.target.id, "gi|27805603|sp|Q9TKP6.1|MATK_WISFR")
            self.assertEqual(hsp.target.name, "Q9TKP6")
            self.assertEqual(
                hsp.target.description,
                "RecName: Full=Maturase K; AltName: Full=Intron maturase >gi|5817759|gb|AAD52902.1|AF142731_1 maturase-like protein [Wisteria frutescens]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRLITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIVKSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASFFHLLRFFLYHFSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSVFFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHYFIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIKKLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSSKKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPRTSSTLQRLHRNRIWYLDILFSNDLVNHE",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|278056         0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7                 0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL

gi|278056        60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7                60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV

gi|278056       120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASFFHLLRFF
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||........
7               120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASXXXXXXXX

gi|278056       180 LYHFSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV
                180 ....||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               180 XXXXSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV

gi|278056       240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY

gi|278056       300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK

gi|278056       360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS

gi|278056       420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPRTS
                420 ||||||||||||||||||||||||||||||||||||....................||||
7               420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGXXXXXXXXXXXXXXXXXXXXPRTS

gi|278056       480 STLQRLHRNRIWYLDILFSNDLVNHE 506
                480 |||||||||||||||||||||||||| 506
7               480 STLQRLHRNRIWYLDILFSNDLVNHE 506
""",
            )
            hit = hits[1]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|171909144|gb|ACB58148.1|")
            self.assertEqual(hit.target.name, "ACB58148")
            self.assertEqual(hit.target.description, "maturase K [Wisteria frutescens]")
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=506)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2445.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 946.421195397973)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 505)
            self.assertEqual(hsp.annotations["positive"], 505)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 506],
                          [  0, 506]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 726)
            self.assertEqual(hsp.query.annotations["end"], 2244)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 506)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 506))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.query.id, "7")
            self.assertEqual(
                hsp.query.description,
                "gi|5817701|gb|AF142731.1|AF142731 Wisteria frutescens maturase-like protein (matK) gene, complete cds; chloroplast gene for chloroplast product",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKYSL...NHE')",
            )
            self.assertEqual(hsp.target.id, "gi|171909144|gb|ACB58148.1|")
            self.assertEqual(hsp.target.name, "ACB58148")
            self.assertEqual(hsp.target.description, "maturase K [Wisteria frutescens]")
            self.assertEqual(
                hsp.annotations["midline"],
                "MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNK SLLIVKRLITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIVKSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASFFHLLRFFLYHFSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSVFFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHYFIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIKKLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSSKKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPRTSSTLQRLHRNRIWYLDILFSNDLVNHE",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|171909         0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKYSLLIVKRL
                  0 |||||||||||||||||||||||||||||||||||||||||||||||||||.||||||||
7                 0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL

gi|171909        60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7                60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV

gi|171909       120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASFFHLLRFF
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||........
7               120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASXXXXXXXX

gi|171909       180 LYHFSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV
                180 ....||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               180 XXXXSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV

gi|171909       240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY

gi|171909       300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK

gi|171909       360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS

gi|171909       420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPRTS
                420 ||||||||||||||||||||||||||||||||||||....................||||
7               420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGXXXXXXXXXXXXXXXXXXXXPRTS

gi|171909       480 STLQRLHRNRIWYLDILFSNDLVNHE 506
                480 |||||||||||||||||||||||||| 506
7               480 STLQRLHRNRIWYLDILFSNDLVNHE 506
""",
            )
            hit = hits[2]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|171909146|gb|ACB58149.1|")
            self.assertEqual(hit.target.name, "ACB58149")
            self.assertEqual(
                hit.target.description,
                "maturase K [Wisteria frutescens] >gi|171909148|gb|ACB58150.1| maturase K [Wisteria frutescens var. macrostachya]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=506)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2443.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 945.650796246138)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 505)
            self.assertEqual(hsp.annotations["positive"], 505)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 506],
                          [  0, 506]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 726)
            self.assertEqual(hsp.query.annotations["end"], 2244)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 506)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 506))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.query.id, "7")
            self.assertEqual(
                hsp.query.description,
                "gi|5817701|gb|AF142731.1|AF142731 Wisteria frutescens maturase-like protein (matK) gene, complete cds; chloroplast gene for chloroplast product",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.target.id, "gi|171909146|gb|ACB58149.1|")
            self.assertEqual(hsp.target.name, "ACB58149")
            self.assertEqual(
                hsp.target.description,
                "maturase K [Wisteria frutescens] >gi|171909148|gb|ACB58150.1| maturase K [Wisteria frutescens var. macrostachya]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRLITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIVKSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASFFHLLRFFLYHFSNRNSLITP KSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSVFFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHYFIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIKKLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSSKKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPRTSSTLQRLHRNRIWYLDILFSNDLVNHE",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|171909         0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7                 0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL

gi|171909        60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7                60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV

gi|171909       120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASFFHLLRFF
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||........
7               120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASXXXXXXXX

gi|171909       180 LYHFSNRNSLITPIKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV
                180 ....|||||||||.||||||||||||||||||||||||||||||||||||||||||||||
7               180 XXXXSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV

gi|171909       240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY

gi|171909       300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK

gi|171909       360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS

gi|171909       420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPRTS
                420 ||||||||||||||||||||||||||||||||||||....................||||
7               420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGXXXXXXXXXXXXXXXXXXXXPRTS

gi|171909       480 STLQRLHRNRIWYLDILFSNDLVNHE 506
                480 |||||||||||||||||||||||||| 506
7               480 STLQRLHRNRIWYLDILFSNDLVNHE 506
""",
            )
            hit = hits[3]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|171909132|gb|ACB58142.1|")
            self.assertEqual(hit.target.name, "ACB58142")
            self.assertEqual(hit.target.description, "maturase K [Callerya megasperma]")
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=506)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2439.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 944.109997942469)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 501)
            self.assertEqual(hsp.annotations["positive"], 504)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 506],
                          [  0, 506]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 726)
            self.assertEqual(hsp.query.annotations["end"], 2244)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 506)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 506))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.query.id, "7")
            self.assertEqual(
                hsp.query.description,
                "gi|5817701|gb|AF142731.1|AF142731 Wisteria frutescens maturase-like protein (matK) gene, complete cds; chloroplast gene for chloroplast product",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.target.id, "gi|171909132|gb|ACB58142.1|")
            self.assertEqual(hsp.target.name, "ACB58142")
            self.assertEqual(hsp.target.description, "maturase K [Callerya megasperma]")
            self.assertEqual(
                hsp.annotations["midline"],
                "MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRLITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIVKSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASFFHLLRFFLY++ NRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSVFFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHYFIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIKKLDIIVPIIPLIRSLAKAKFCNVLGHP+SKSVWADSSDFDIIDRFLRICRNLSHYYNGSSKKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPR SSTLQRLHRNRIWYLDILFSNDLVNHE",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|171909         0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7                 0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL

gi|171909        60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7                60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV

gi|171909       120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASFFHLLRFF
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||........
7               120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASXXXXXXXX

gi|171909       180 LYNYCNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV
                180 .....|||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               180 XXXXSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV

gi|171909       240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY

gi|171909       300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK

gi|171909       360 KLDIIVPIIPLIRSLAKAKFCNVLGHPISKSVWADSSDFDIIDRFLRICRNLSHYYNGSS
                360 |||||||||||||||||||||||||||.||||||||||||||||||||||||||||||||
7               360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS

gi|171909       420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPRAS
                420 ||||||||||||||||||||||||||||||||||||....................||.|
7               420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGXXXXXXXXXXXXXXXXXXXXPRTS

gi|171909       480 STLQRLHRNRIWYLDILFSNDLVNHE 506
                480 |||||||||||||||||||||||||| 506
7               480 STLQRLHRNRIWYLDILFSNDLVNHE 506
""",
            )
            hit = hits[4]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|5817760|gb|AAD52903.1|AF142732_1")
            self.assertEqual(hit.target.name, "AAD52903")
            self.assertEqual(
                hit.target.description,
                "maturase-like protein [Wisteria sinensis] >gi|171909136|gb|ACB58144.1| maturase K [Wisteria brachybotrys] >gi|171909138|gb|ACB58145.1| maturase K [Wisteria floribunda] >gi|171909140|gb|ACB58146.1| maturase K [Wisteria floribunda] >gi|171909142|gb|ACB58147.1| maturase K [Wisteria floribunda] >gi|171909150|gb|ACB58151.1| maturase K [Wisteria sinensis] >gi|171909152|gb|ACB58152.1| maturase K [Wisteria sinensis] >gi|171909154|gb|ACB58153.1| maturase K [Wisteria sinensis] >gi|171909156|gb|ACB58154.1| maturase K [Wisteria villosa] >gi|171909158|gb|ACB58155.1| maturase K [Wisteria villosa] >gi|171909160|gb|ACB58156.1| maturase K [Wisteria villosa]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=506)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2418.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 936.020806848204)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 498)
            self.assertEqual(hsp.annotations["positive"], 500)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 506],
                          [  0, 506]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 726)
            self.assertEqual(hsp.query.annotations["end"], 2244)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 506)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 506))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.query.id, "7")
            self.assertEqual(
                hsp.query.description,
                "gi|5817701|gb|AF142731.1|AF142731 Wisteria frutescens maturase-like protein (matK) gene, complete cds; chloroplast gene for chloroplast product",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDKKSSL...NHE')",
            )
            self.assertEqual(hsp.target.id, "gi|5817760|gb|AAD52903.1|AF142732_1")
            self.assertEqual(hsp.target.name, "AAD52903")
            self.assertEqual(
                hsp.target.description,
                "maturase-like protein [Wisteria sinensis] >gi|171909136|gb|ACB58144.1| maturase K [Wisteria brachybotrys] >gi|171909138|gb|ACB58145.1| maturase K [Wisteria floribunda] >gi|171909140|gb|ACB58146.1| maturase K [Wisteria floribunda] >gi|171909142|gb|ACB58147.1| maturase K [Wisteria floribunda] >gi|171909150|gb|ACB58151.1| maturase K [Wisteria sinensis] >gi|171909152|gb|ACB58152.1| maturase K [Wisteria sinensis] >gi|171909154|gb|ACB58153.1| maturase K [Wisteria sinensis] >gi|171909156|gb|ACB58154.1| maturase K [Wisteria villosa] >gi|171909158|gb|ACB58155.1| maturase K [Wisteria villosa] >gi|171909160|gb|ACB58156.1| maturase K [Wisteria villosa]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYD KSSLLIVKRLITRMYQQNHLIISANDSNKNPFLGYN NFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIVKSYHNLRSIHSIFPFLEDK TY NYVSDIRIPYPIHLEILVQILRYWVKDASFFHLLRFFLY+F NRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSVFFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHYFIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIKKLDIIVPIIPLIRSLAKAKFCNVLGHP+SKSVWADSSDFDIIDRFLRICRNLSHYYNGSSKKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPR SSTLQRLHRNRIWYLDILFSNDLVNHE",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|581776         0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDKKSSLLIVKRL
                  0 |||||||||||||||||||||||||||||||||||||||||||||||||.||||||||||
7                 0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL

gi|581776        60 ITRMYQQNHLIISANDSNKNPFLGYNNNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV
                 60 ||||||||||||||||||||||||||.|||||||||||||||||||||||||||||||||
7                60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV

gi|581776       120 KSYHNLRSIHSIFPFLEDKLTYFNYVSDIRIPYPIHLEILVQILRYWVKDASFFHLLRFF
                120 |||||||||||||||||||.||.|||||||||||||||||||||||||||||........
7               120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASXXXXXXXX

gi|581776       180 LYNFCNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV
                180 .....|||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               180 XXXXSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV

gi|581776       240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY

gi|581776       300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK

gi|581776       360 KLDIIVPIIPLIRSLAKAKFCNVLGHPISKSVWADSSDFDIIDRFLRICRNLSHYYNGSS
                360 |||||||||||||||||||||||||||.||||||||||||||||||||||||||||||||
7               360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS

gi|581776       420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPRAS
                420 ||||||||||||||||||||||||||||||||||||....................||.|
7               420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGXXXXXXXXXXXXXXXXXXXXPRTS

gi|581776       480 STLQRLHRNRIWYLDILFSNDLVNHE 506
                480 |||||||||||||||||||||||||| 506
7               480 STLQRLHRNRIWYLDILFSNDLVNHE 506
""",
            )
            hit = hits[5]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|171909134|gb|ACB58143.1|")
            self.assertEqual(hit.target.name, "ACB58143")
            self.assertEqual(
                hit.target.description, "maturase K [Wisteria brachybotrys]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=506)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2398.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 928.316815329857)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 496)
            self.assertEqual(hsp.annotations["positive"], 498)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 506],
                          [  0, 506]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 726)
            self.assertEqual(hsp.query.annotations["end"], 2244)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 506)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 506))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.query.id, "7")
            self.assertEqual(
                hsp.query.description,
                "gi|5817701|gb|AF142731.1|AF142731 Wisteria frutescens maturase-like protein (matK) gene, complete cds; chloroplast gene for chloroplast product",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDKKSSL...NHE')",
            )
            self.assertEqual(hsp.target.id, "gi|171909134|gb|ACB58143.1|")
            self.assertEqual(hsp.target.name, "ACB58143")
            self.assertEqual(
                hsp.target.description, "maturase K [Wisteria brachybotrys]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYD KSSLLIVKRLITRMYQQNHLIISANDSNKNPFLGYN  FYSQIISDGFAVVVEIPFFLQLSSSLEEAEIVKSYHNLRSIHSIFPFLEDK TY NYVSDIRIPYPIHLEILVQILRY VKDASFFHLLRFFLY+F NRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSVFFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHYFIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIKKLDIIVPIIPLIRSLAKAKFCNVLGHP+SKSVWADSSDFDIIDRFLRICRNLSHYYNGSSKKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPR SSTLQRLHRNRIWYLDILFSNDLVNHE",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|171909         0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDKKSSLLIVKRL
                  0 |||||||||||||||||||||||||||||||||||||||||||||||||.||||||||||
7                 0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL

gi|171909        60 ITRMYQQNHLIISANDSNKNPFLGYNNKFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV
                 60 ||||||||||||||||||||||||||..||||||||||||||||||||||||||||||||
7                60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV

gi|171909       120 KSYHNLRSIHSIFPFLEDKLTYFNYVSDIRIPYPIHLEILVQILRYRVKDASFFHLLRFF
                120 |||||||||||||||||||.||.|||||||||||||||||||||||.|||||........
7               120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASXXXXXXXX

gi|171909       180 LYNFCNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV
                180 .....|||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               180 XXXXSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV

gi|171909       240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY

gi|171909       300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK

gi|171909       360 KLDIIVPIIPLIRSLAKAKFCNVLGHPISKSVWADSSDFDIIDRFLRICRNLSHYYNGSS
                360 |||||||||||||||||||||||||||.||||||||||||||||||||||||||||||||
7               360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS

gi|171909       420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPRAS
                420 ||||||||||||||||||||||||||||||||||||....................||.|
7               420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGXXXXXXXXXXXXXXXXXXXXPRTS

gi|171909       480 STLQRLHRNRIWYLDILFSNDLVNHE 506
                480 |||||||||||||||||||||||||| 506
7               480 STLQRLHRNRIWYLDILFSNDLVNHE 506
""",
            )
            hit = hits[6]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|5817761|gb|AAD52904.1|AF142733_1")
            self.assertEqual(hit.target.name, "AAD52904")
            self.assertEqual(
                hit.target.description, "maturase-like protein [Callerya reticulata]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=506)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2390.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 925.235218722518)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 493)
            self.assertEqual(hsp.annotations["positive"], 498)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 506],
                          [  0, 506]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 726)
            self.assertEqual(hsp.query.annotations["end"], 2244)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 506)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 506))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.query.id, "7")
            self.assertEqual(
                hsp.query.description,
                "gi|5817701|gb|AF142731.1|AF142731 Wisteria frutescens maturase-like protein (matK) gene, complete cds; chloroplast gene for chloroplast product",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MKEYQAYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.target.id, "gi|5817761|gb|AAD52904.1|AF142733_1")
            self.assertEqual(hsp.target.name, "AAD52904")
            self.assertEqual(
                hsp.target.description, "maturase-like protein [Callerya reticulata]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKEYQ YLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRLITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQL+SSLEEAEIVKSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASFFHLLRFFLY+F NRNSLITPKKSISTFSK NPRLFLFLYNFYV EYESIF FLRNQSSHLR KSFSVFFERIFFYAKREHL+KVFPKDFSSTLTFFKDPFIHYVRYQ KSILASKNAPLLMNKWKHYFIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIKKLDIIVPIIPLIRSLAKAKFCNVLGHP+SKSVWADSSDFDIIDRFLRICRNLSHYYNGSSKKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPR SSTL+RLHRNRIWYLDILFSNDLVNHE",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|581776         0 MKEYQAYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL
                  0 |||||.||||||||||||||||||||||||||||||||||||||||||||||||||||||
7                 0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL

gi|581776        60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLNSSLEEAEIV
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||.|||||||||
7                60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV

gi|581776       120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASFFHLLRFF
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||........
7               120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASXXXXXXXX

gi|581776       180 LYNFCNRNSLITPKKSISTFSKCNPRLFLFLYNFYVWEYESIFLFLRNQSSHLRFKSFSV
                180 .....|||||||||||||||||.|||||||||||||.||||||.||||||||||.|||||
7               180 XXXXSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV

gi|581776       240 FFERIFFYAKREHLLKVFPKDFSSTLTFFKDPFIHYVRYQEKSILASKNAPLLMNKWKHY
                240 ||||||||||||||.|||||||||||||||||||||||||.|||||||||||||||||||
7               240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY

gi|581776       300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK

gi|581776       360 KLDIIVPIIPLIRSLAKAKFCNVLGHPISKSVWADSSDFDIIDRFLRICRNLSHYYNGSS
                360 |||||||||||||||||||||||||||.||||||||||||||||||||||||||||||||
7               360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS

gi|581776       420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGSEELLEEFFTEEEEILSLIFPRAS
                420 ||||||||||||||||||||||||||||||||||||....................||.|
7               420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGXXXXXXXXXXXXXXXXXXXXPRTS

gi|581776       480 STLKRLHRNRIWYLDILFSNDLVNHE 506
                480 |||.|||||||||||||||||||||| 506
7               480 STLQRLHRNRIWYLDILFSNDLVNHE 506
""",
            )
            hit = hits[7]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|5817762|gb|AAD52905.1|AF142734_1")
            self.assertEqual(hit.target.name, "AAD52905")
            self.assertEqual(
                hit.target.description, "maturase-like protein [Callerya atropurpurea]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=506)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2301.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 890.952456465874)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 472)
            self.assertEqual(hsp.annotations["positive"], 488)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 506],
                          [  0, 506]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 726)
            self.assertEqual(hsp.query.annotations["end"], 2244)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 506)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 506))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.query.id, "7")
            self.assertEqual(
                hsp.query.description,
                "gi|5817701|gb|AF142731.1|AF142731 Wisteria frutescens maturase-like protein (matK) gene, complete cds; chloroplast gene for chloroplast product",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYTYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.target.id, "gi|5817762|gb|AAD52905.1|AF142734_1")
            self.assertEqual(hsp.target.name, "AAD52905")
            self.assertEqual(
                hsp.target.description, "maturase-like protein [Callerya atropurpurea]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKEYQVYLERDRSRQQDFLYPLIFREY YGLAYSHDFNRSIFVENVGYDNKSSLLIVKRLITRMYQQNHLIIS NDSNKNPFLGYNKNFYSQIIS+ FA+V EIPFF QLSSSLE+AEIVKSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDA FFHLLR FLY+F N N++ TPKKSISTFS+SNPR FLFLYNFYVCEYESIF FLRN+SSHLRLKSFSVFFERIFFYAKREHLV+VF KDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHYFIHLWQ FFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTF+IEI IKKLDIIVPIIPLIRSLAKAKFCNVLGHP+SK VWADSSDFDII+RFLRICRNLSHYYNGSSKKK+LYRIKYILRLSCIKTLACKHKSTVRAFLK+ GSEELLEEFFTEEEEILSLIFPR SSTLQ+LHRNRIWYLDILF+NDLVNHE",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|581776         0 MKEYQVYLERDRSRQQDFLYPLIFREYTYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL
                  0 |||||||||||||||||||||||||||.||||||||||||||||||||||||||||||||
7                 0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL

gi|581776        60 ITRMYQQNHLIISPNDSNKNPFLGYNKNFYSQIISEVFAIVAEIPFFRQLSSSLEQAEIV
                 60 |||||||||||||.|||||||||||||||||||||..||.|.|||||.|||||||.||||
7                60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV

gi|581776       120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDAPFFHLLRLF
                120 |||||||||||||||||||||||||||||||||||||||||||||||||||.........
7               120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASXXXXXXXX

gi|581776       180 LYNFCNWNTVFTPKKSISTFSRSNPRFFLFLYNFYVCEYESIFLFLRNKSSHLRLKSFSV
                180 .....|.|...||||||||||.||||.||||||||||||||||.||||.|||||||||||
7               180 XXXXSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV

gi|581776       240 FFERIFFYAKREHLVEVFAKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY
                240 |||||||||||||||.||.|||||||||||||||||||||||||||||||||||||||||
7               240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY

gi|581776       300 FIHLWQSFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFIIEIGIK
                300 ||||||.||||||||||||||||||||||||||||||||||||||||||||||.|||.||
7               300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK

gi|581776       360 KLDIIVPIIPLIRSLAKAKFCNVLGHPISKPVWADSSDFDIIERFLRICRNLSHYYNGSS
                360 |||||||||||||||||||||||||||.||.|||||||||||.|||||||||||||||||
7               360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS

gi|581776       420 KKKSLYRIKYILRLSCIKTLACKHKSTVRAFLKRLGSEELLEEFFTEEEEILSLIFPRAS
                420 |||.|||||||||||||||||||||||||||||..|....................||.|
7               420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGXXXXXXXXXXXXXXXXXXXXPRTS

gi|581776       480 STLQKLHRNRIWYLDILFTNDLVNHE 506
                480 ||||.|||||||||||||.||||||| 506
7               480 STLQRLHRNRIWYLDILFSNDLVNHE 506
""",
            )
            hit = hits[8]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|152014012|gb|ABS20107.1|")
            self.assertEqual(hit.target.name, "ABS20107")
            self.assertEqual(
                hit.target.description, "maturase-like protein [Astragalus uliginosus]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=506)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2293.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 887.870859858535)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 470)
            self.assertEqual(hsp.annotations["positive"], 487)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 506],
                          [  0, 506]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 726)
            self.assertEqual(hsp.query.annotations["end"], 2244)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 506)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 506))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.query.id, "7")
            self.assertEqual(
                hsp.query.description,
                "gi|5817701|gb|AF142731.1|AF142731 Wisteria frutescens maturase-like protein (matK) gene, complete cds; chloroplast gene for chloroplast product",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MKEYQVFLERDRSRQQDFLYPLIFREYVYGLAYSHDFNRSTFVENVGYDNKYSL...NHE')",
            )
            self.assertEqual(hsp.target.id, "gi|152014012|gb|ABS20107.1|")
            self.assertEqual(hsp.target.name, "ABS20107")
            self.assertEqual(
                hsp.target.description, "maturase-like protein [Astragalus uliginosus]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKEYQV+LERDRSRQQDFLYPLIFREY+YGLAYSHDFNRS FVENVGYDNK SLLIVKRLITRMYQQNHLIISANDS KNPFLGYNKNFYSQIIS+GFA+VVEIPFFLQ SSSL+EAEIVKSY NLRSIHSIFPFLEDKF YLNYVSDIRIPYPIHLEILVQILRYWVKDA FFHLLR FLY+F NRNS +TPKKSISTFSKSNPRLFLFLYNFYVCEYESIF FLR +SSHLRLKSFSVFFERIFFYAKREHLV+VF KDFSSTLTFFKDP IHYVRYQGKSILASKNAPLLMNKWKHYFIHLW+CFFDVWSQPGTIHI QLSEHSF+ LGYFSNVRLNRSVVRSQMLQNTFLIEIV KKLDIIVPIIP+IRSLAKAKFCNVLGHP+SK+VWADSSDFDIIDRFLRICRNLSHYYNGSSKKK+LYRIKYILRLSCIKTLACKHKSTVRAFLK+SGSEELLEEFFTEEEEILSLIFPR SSTLQ+LH NRIWYLDILFSNDLVNHE",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|152014         0 MKEYQVFLERDRSRQQDFLYPLIFREYVYGLAYSHDFNRSTFVENVGYDNKYSLLIVKRL
                  0 ||||||.||||||||||||||||||||.||||||||||||.||||||||||.||||||||
7                 0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL

gi|152014        60 ITRMYQQNHLIISANDSKKNPFLGYNKNFYSQIISEGFAIVVEIPFFLQFSSSLKEAEIV
                 60 |||||||||||||||||.|||||||||||||||||.|||.|||||||||.||||.|||||
7                60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV

gi|152014       120 KSYKNLRSIHSIFPFLEDKFPYLNYVSDIRIPYPIHLEILVQILRYWVKDAPFFHLLRLF
                120 |||.||||||||||||||||.||||||||||||||||||||||||||||||.........
7               120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASXXXXXXXX

gi|152014       180 LYNFCNRNSFLTPKKSISTFSKSNPRLFLFLYNFYVCEYESIFLFLRKKSSHLRLKSFSV
                180 .....||||..||||||||||||||||||||||||||||||||.|||..|||||||||||
7               180 XXXXSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV

gi|152014       240 FFERIFFYAKREHLVEVFAKDFSSTLTFFKDPLIHYVRYQGKSILASKNAPLLMNKWKHY
                240 |||||||||||||||.||.|||||||||||||.|||||||||||||||||||||||||||
7               240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY

gi|152014       300 FIHLWECFFDVWSQPGTIHIKQLSEHSFYLLGYFSNVRLNRSVVRSQMLQNTFLIEIVSK
                300 |||||.||||||||||||||.|||||||..||||||||||||||||||||||||||||.|
7               300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK

gi|152014       360 KLDIIVPIIPIIRSLAKAKFCNVLGHPISKAVWADSSDFDIIDRFLRICRNLSHYYNGSS
                360 ||||||||||.||||||||||||||||.||.|||||||||||||||||||||||||||||
7               360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS

gi|152014       420 KKKSLYRIKYILRLSCIKTLACKHKSTVRAFLKRSGSEELLEEFFTEEEEILSLIFPRAS
                420 |||.|||||||||||||||||||||||||||||.||....................||.|
7               420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGXXXXXXXXXXXXXXXXXXXXPRTS

gi|152014       480 STLQKLHGNRIWYLDILFSNDLVNHE 506
                480 ||||.||.|||||||||||||||||| 506
7               480 STLQRLHRNRIWYLDILFSNDLVNHE 506
""",
            )
            hit = hits[9]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|146197442|dbj|BAF57483.1|")
            self.assertEqual(hit.target.name, "BAF57483")
            self.assertEqual(
                hit.target.description,
                "maturase [Glycyrrhiza uralensis] >gi|146197444|dbj|BAF57484.1| maturase [Glycyrrhiza glabra] >gi|152014018|gb|ABS20110.1| maturase-like protein [Glycyrrhiza pallidiflora]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=506)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2292.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 887.485660282618)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 471)
            self.assertEqual(hsp.annotations["positive"], 489)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 506],
                          [  0, 506]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 726)
            self.assertEqual(hsp.query.annotations["end"], 2244)
            self.assertEqual(hsp.query.annotations["frame"], 1)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 506)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 506))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSL...NHE')",
            )
            self.assertEqual(hsp.query.id, "7")
            self.assertEqual(
                hsp.query.description,
                "gi|5817701|gb|AF142731.1|AF142731 Wisteria frutescens maturase-like protein (matK) gene, complete cds; chloroplast gene for chloroplast product",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MKEYQVYLERDRSRQQDFLYPLIFREYIYGIAYSHNLNRSIFVENVGYDNKFSL...NNE')",
            )
            self.assertEqual(hsp.target.id, "gi|146197442|dbj|BAF57483.1|")
            self.assertEqual(hsp.target.name, "BAF57483")
            self.assertEqual(
                hsp.target.description,
                "maturase [Glycyrrhiza uralensis] >gi|146197444|dbj|BAF57484.1| maturase [Glycyrrhiza glabra] >gi|152014018|gb|ABS20110.1| maturase-like protein [Glycyrrhiza pallidiflora]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MKEYQVYLERDRSRQQDFLYPLIFREYIYG+AYSH+ NRSIFVENVGYDNK SLLIVKRLITRMYQQNHLIISANDSNKNPF GYNKN YSQ+ISDGFAVVVEIPFFLQ SSSLEEAEIVKSY+NLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDA FFHLLR FLY+F N NSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIF FLRN+SSHLRLKSFSVFFERIFFYAKREHLV VF KD+S TLT FKDPFIHYVRYQGK+ILAS+NAPLLMNKWKHYFIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIKKLDIIVPIIPLIRSLAKAKFCNVLGHP+SK VWADSSDF+II+RFLRICRNLSHYY+GSSKKK+LYRIKYILRLSCIKTLACKHKSTVRAFLK+ GSEELLEEFFTEEEEILSLIFP+ SSTLQ+LHRNRIWYLDILFSNDLVN+E",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|146197         0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGIAYSHNLNRSIFVENVGYDNKFSLLIVKRL
                  0 ||||||||||||||||||||||||||||||.||||..||||||||||||||.||||||||
7                 0 MKEYQVYLERDRSRQQDFLYPLIFREYIYGLAYSHDFNRSIFVENVGYDNKSSLLIVKRL

gi|146197        60 ITRMYQQNHLIISANDSNKNPFSGYNKNIYSQLISDGFAVVVEIPFFLQFSSSLEEAEIV
                 60 ||||||||||||||||||||||.|||||.|||.||||||||||||||||.||||||||||
7                60 ITRMYQQNHLIISANDSNKNPFLGYNKNFYSQIISDGFAVVVEIPFFLQLSSSLEEAEIV

gi|146197       120 KSYNNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDAPFFHLLRLF
                120 |||.|||||||||||||||||||||||||||||||||||||||||||||||.........
7               120 KSYHNLRSIHSIFPFLEDKFTYLNYVSDIRIPYPIHLEILVQILRYWVKDASXXXXXXXX

gi|146197       180 LYNFCNWNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFLFLRNKSSHLRLKSFSV
                180 .....|.||||||||||||||||||||||||||||||||||||.||||.|||||||||||
7               180 XXXXSNRNSLITPKKSISTFSKSNPRLFLFLYNFYVCEYESIFRFLRNQSSHLRLKSFSV

gi|146197       240 FFERIFFYAKREHLVDVFAKDYSPTLTLFKDPFIHYVRYQGKAILASRNAPLLMNKWKHY
                240 |||||||||||||||.||.||.|.|||.||||||||||||||.||||.||||||||||||
7               240 FFERIFFYAKREHLVKVFPKDFSSTLTFFKDPFIHYVRYQGKSILASKNAPLLMNKWKHY

gi|146197       300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
7               300 FIHLWQCFFDVWSQPGTIHINQLSEHSFHFLGYFSNVRLNRSVVRSQMLQNTFLIEIVIK

gi|146197       360 KLDIIVPIIPLIRSLAKAKFCNVLGHPISKPVWADSSDFEIIERFLRICRNLSHYYSGSS
                360 |||||||||||||||||||||||||||.||.||||||||.||.|||||||||||||.|||
7               360 KLDIIVPIIPLIRSLAKAKFCNVLGHPLSKSVWADSSDFDIIDRFLRICRNLSHYYNGSS

gi|146197       420 KKKSLYRIKYILRLSCIKTLACKHKSTVRAFLKRLGSEELLEEFFTEEEEILSLIFPKAS
                420 |||.|||||||||||||||||||||||||||||..|....................|..|
7               420 KKKNLYRIKYILRLSCIKTLACKHKSTVRAFLKKSGXXXXXXXXXXXXXXXXXXXXPRTS

gi|146197       480 STLQKLHRNRIWYLDILFSNDLVNNE 506
                480 ||||.|||||||||||||||||||.| 506
7               480 STLQRLHRNRIWYLDILFSNDLVNHE 506
""",
            )

    def test_xml_2222_blastp_001(self):
        """Parsing BLASTP 2.2.22+ (xml_2222_blastp_001.xml)."""
        filename = "xml_2222_blastp_001.xml"
        datafile = os.path.join("Blast", filename)
        with open(datafile, "rb") as handle:
            records = Blast.parse(handle)
            self.assertEqual(records.program, "blastp")
            self.assertEqual(records.version, "BLASTP 2.2.22+")
            self.assertEqual(
                records.reference,
                'Stephen F. Altschul, Thomas L. Madden, Alejandro A. Sch&auml;ffer, Jinghui Zhang, Zheng Zhang, Webb Miller, and David J. Lipman (1997), "Gapped BLAST and PSI-BLAST: a new generation of protein database search programs", Nucleic Acids Res. 25:3389-3402.',
            )
            self.assertEqual(records.db, "nr")
            self.assertIsInstance(records.query, SeqRecord)
            self.assertEqual(records.query.id, "1")
            self.assertEqual(
                records.query.description, "gi|3298468|dbj|BAA31520.1| SAMIPF"
            )
            self.assertEqual(repr(records.query.seq), "Seq(None, length=107)")
            self.assertEqual(len(records.param), 5)
            self.assertEqual(records.param["matrix"], "BLOSUM62")
            self.assertAlmostEqual(records.param["expect"], 1e-06)
            self.assertEqual(records.param["gap-open"], 11)
            self.assertEqual(records.param["gap-extend"], 1)
            self.assertEqual(records.param["filter"], "F")
            record = next(records)
            self.assertEqual(record.num, 1)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "1")
            self.assertEqual(
                record.query.description, "gi|3298468|dbj|BAA31520.1| SAMIPF"
            )
            self.assertEqual(repr(record.query.seq), "Seq(None, length=107)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 8994603)
            self.assertEqual(record.stat["db-len"], -1216159329)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 76934807744.0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 10)
            hit = hits[0]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|3298468|dbj|BAA31520.1|")
            self.assertEqual(hit.target.name, "BAA31520")
            self.assertEqual(hit.target.description, "SAMIPF [Aster tripolium]")
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=107)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 520.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 204.912011757068)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.77242652875017e-51)
            self.assertEqual(hsp.annotations["identity"], 107)
            self.assertEqual(hsp.annotations["positive"], 107)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 107],
                          [  0, 107]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 107)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 107)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 107))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFS...ANI')",
            )
            self.assertEqual(hsp.query.id, "1")
            self.assertEqual(hsp.query.description, "gi|3298468|dbj|BAA31520.1| SAMIPF")
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFS...ANI')",
            )
            self.assertEqual(hsp.target.id, "gi|3298468|dbj|BAA31520.1|")
            self.assertEqual(hsp.target.name, "BAA31520")
            self.assertEqual(hsp.target.description, "SAMIPF [Aster tripolium]")
            self.assertEqual(
                hsp.annotations["midline"],
                "GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFSLSAGVGVTNALVFEIVMTFGLVYTVYATAIDPKKGSLGTIAPIAIGFIVGANI",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|329846         0 GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFSLSAGVG
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
1                 0 GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFSLSAGVG

gi|329846        60 VTNALVFEIVMTFGLVYTVYATAIDPKKGSLGTIAPIAIGFIVGANI 107
                 60 ||||||||||||||||||||||||||||||||||||||||||||||| 107
1                60 VTNALVFEIVMTFGLVYTVYATAIDPKKGSLGTIAPIAIGFIVGANI 107
""",
            )
            hit = hits[1]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|227434194|gb|ACP28878.1|")
            self.assertEqual(hit.target.name, "ACP28878")
            self.assertEqual(
                hit.target.description,
                "tonoplast intrinsic protein [Gossypium hirsutum]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=251)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 473.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 186.807631688952)
            self.assertAlmostEqual(hsp.annotations["evalue"], 4.63358243494088e-46)
            self.assertEqual(hsp.annotations["identity"], 95)
            self.assertEqual(hsp.annotations["positive"], 101)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 80, 187],
                          [  0, 107]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 107)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 80)
            self.assertEqual(hsp.target.annotations["end"], 187)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 107))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFS...ANI')",
            )
            self.assertEqual(hsp.query.id, "1")
            self.assertEqual(hsp.query.description, "gi|3298468|dbj|BAA31520.1| SAMIPF")
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({80: 'GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSTVACLLLKFATGDLAVPAFG...ANI'}, length=251)",
            )
            self.assertEqual(hsp.target.id, "gi|227434194|gb|ACP28878.1|")
            self.assertEqual(hsp.target.name, "ACP28878")
            self.assertEqual(
                hsp.target.description,
                "tonoplast intrinsic protein [Gossypium hirsutum]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "GGHVNPAVTFGAFVGGNITLLRGI+Y IAQLLGSTVACLLLKF T D+AV  F LS+GVGV+NALVFEIVMTFGLVYTVYATA+DPKKGSLGTIAP+AIGFIVGANI",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|227434        80 GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSTVACLLLKFATGDLAVPAFGLSSGVG
                  0 ||||||||||||||||||||||||.|.||||||||||||||||.|.|.||..|.||.|||
1                 0 GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFSLSAGVG

gi|227434       140 VSNALVFEIVMTFGLVYTVYATAVDPKKGSLGTIAPLAIGFIVGANI 187
                 60 |.|||||||||||||||||||||.||||||||||||.|||||||||| 107
1                60 VTNALVFEIVMTFGLVYTVYATAIDPKKGSLGTIAPIAIGFIVGANI 107
""",
            )
            hit = hits[2]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|223541319|gb|EEF42870.1|")
            self.assertEqual(hit.target.name, "EEF42870")
            self.assertEqual(
                hit.target.description,
                "tonoplast intrinsic protein, putative [Ricinus communis]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=251)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 456.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 180.259238898357)
            self.assertAlmostEqual(hsp.annotations["evalue"], 4.44682952949506e-44)
            self.assertEqual(hsp.annotations["identity"], 92)
            self.assertEqual(hsp.annotations["positive"], 97)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 80, 187],
                          [  0, 107]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 107)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 80)
            self.assertEqual(hsp.target.annotations["end"], 187)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 107))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFS...ANI')",
            )
            self.assertEqual(hsp.query.id, "1")
            self.assertEqual(hsp.query.description, "gi|3298468|dbj|BAA31520.1| SAMIPF")
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({80: 'GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSTVACLLLKFSTGGLTTSAFA...ANI'}, length=251)",
            )
            self.assertEqual(hsp.target.id, "gi|223541319|gb|EEF42870.1|")
            self.assertEqual(hsp.target.name, "EEF42870")
            self.assertEqual(
                hsp.target.description,
                "tonoplast intrinsic protein, putative [Ricinus communis]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "GGHVNPAVTFGAFVGGNITLLRGI+Y IAQLLGSTVACLLLKF T  +    F+LS+GVGV NA VFEIVMTFGLVYTVYATA+DPKKGSLGTIAPIAIGFIVGANI",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|223541        80 GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSTVACLLLKFSTGGLTTSAFALSSGVG
                  0 ||||||||||||||||||||||||.|.||||||||||||||||.|.......|.||.|||
1                 0 GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFSLSAGVG

gi|223541       140 VWNAFVFEIVMTFGLVYTVYATAVDPKKGSLGTIAPIAIGFIVGANI 187
                 60 |.||.||||||||||||||||||.||||||||||||||||||||||| 107
1                60 VTNALVFEIVMTFGLVYTVYATAIDPKKGSLGTIAPIAIGFIVGANI 107
""",
            )
            hit = hits[3]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|225441155|ref|XP_002267788.1|")
            self.assertEqual(hit.target.name, "XP_002267788")
            self.assertEqual(
                hit.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera] >gi|157356804|emb|CAO63006.1| unnamed protein product [Vitis vinifera]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=251)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 454.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 179.488839746522)
            self.assertAlmostEqual(hsp.annotations["evalue"], 6.47313235743007e-44)
            self.assertEqual(hsp.annotations["identity"], 93)
            self.assertEqual(hsp.annotations["positive"], 96)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 80, 187],
                          [  0, 107]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 107)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 80)
            self.assertEqual(hsp.target.annotations["end"], 187)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 107))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFS...ANI')",
            )
            self.assertEqual(hsp.query.id, "1")
            self.assertEqual(hsp.query.description, "gi|3298468|dbj|BAA31520.1| SAMIPF")
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({80: 'GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSTVACLLLKFSTNGMTTSAFS...ANI'}, length=251)",
            )
            self.assertEqual(hsp.target.id, "gi|225441155|ref|XP_002267788.1|")
            self.assertEqual(hsp.target.name, "XP_002267788")
            self.assertEqual(
                hsp.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera] >gi|157356804|emb|CAO63006.1| unnamed protein product [Vitis vinifera]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "GGHVNPAVTFGAFVGGNITLLRGI+Y IAQLLGSTVACLLLKF TN M    FSLS+GV V NA VFEIVMTFGLVYTVYATAIDPKKG+LG IAPIAIGFIVGANI",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|225441        80 GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSTVACLLLKFSTNGMTTSAFSLSSGVT
                  0 ||||||||||||||||||||||||.|.||||||||||||||||.||.|....||||.||.
1                 0 GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFSLSAGVG

gi|225441       140 VWNAFVFEIVMTFGLVYTVYATAIDPKKGNLGIIAPIAIGFIVGANI 187
                 60 |.||.||||||||||||||||||||||||.||.|||||||||||||| 107
1                60 VTNALVFEIVMTFGLVYTVYATAIDPKKGSLGTIAPIAIGFIVGANI 107
""",
            )
            hit = hits[4]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|209892837|gb|ACI95283.1|")
            self.assertEqual(hit.target.name, "ACI95283")
            self.assertEqual(
                hit.target.description, "tonoplast intrinsic protein [Sinapis arvensis]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=251)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 454.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 179.488839746522)
            self.assertAlmostEqual(hsp.annotations["evalue"], 7.21475963444848e-44)
            self.assertEqual(hsp.annotations["identity"], 93)
            self.assertEqual(hsp.annotations["positive"], 97)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 80, 187],
                          [  0, 107]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 107)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 80)
            self.assertEqual(hsp.target.annotations["end"], 187)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 107))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFS...ANI')",
            )
            self.assertEqual(hsp.query.id, "1")
            self.assertEqual(hsp.query.description, "gi|3298468|dbj|BAA31520.1| SAMIPF")
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({80: 'GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSVVACLLLKFATGGLVVPAFG...ANI'}, length=251)",
            )
            self.assertEqual(hsp.target.id, "gi|209892837|gb|ACI95283.1|")
            self.assertEqual(hsp.target.name, "ACI95283")
            self.assertEqual(
                hsp.target.description, "tonoplast intrinsic protein [Sinapis arvensis]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "GGHVNPAVTFGAFVGGNITLLRGI+Y IAQLLGS VACLLLKF T  + V  F LSAGVGV+NALVFEIVMTFGLVYTVYATA+DPK GSLGTIAPIAIGFIVGANI",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|209892        80 GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSVVACLLLKFATGGLVVPAFGLSAGVG
                  0 ||||||||||||||||||||||||.|.|||||||.||||||||.|....|..|.||||||
1                 0 GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFSLSAGVG

gi|209892       140 VSNALVFEIVMTFGLVYTVYATAVDPKNGSLGTIAPIAIGFIVGANI 187
                 60 |.|||||||||||||||||||||.|||.||||||||||||||||||| 107
1                60 VTNALVFEIVMTFGLVYTVYATAIDPKKGSLGTIAPIAIGFIVGANI 107
""",
            )
            hit = hits[5]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|21284370|gb|AAB51393.2|")
            self.assertEqual(hit.target.name, "AAB51393")
            self.assertEqual(
                hit.target.description,
                "tonoplast intrinsic protein bobTIP26-1 [Brassica oleracea var. botrytis]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=251)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 454.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 179.488839746522)
            self.assertAlmostEqual(hsp.annotations["evalue"], 7.27520962424864e-44)
            self.assertEqual(hsp.annotations["identity"], 93)
            self.assertEqual(hsp.annotations["positive"], 97)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 80, 187],
                          [  0, 107]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 107)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 80)
            self.assertEqual(hsp.target.annotations["end"], 187)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 107))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFS...ANI')",
            )
            self.assertEqual(hsp.query.id, "1")
            self.assertEqual(hsp.query.description, "gi|3298468|dbj|BAA31520.1| SAMIPF")
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({80: 'GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSVVACLLLKFATGGLVVPAFG...ANI'}, length=251)",
            )
            self.assertEqual(hsp.target.id, "gi|21284370|gb|AAB51393.2|")
            self.assertEqual(hsp.target.name, "AAB51393")
            self.assertEqual(
                hsp.target.description,
                "tonoplast intrinsic protein bobTIP26-1 [Brassica oleracea var. botrytis]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "GGHVNPAVTFGAFVGGNITLLRGI+Y IAQLLGS VACLLLKF T  + V  F LSAGVGV+NALVFEIVMTFGLVYTVYATA+DPK GSLGTIAPIAIGFIVGANI",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|212843        80 GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSVVACLLLKFATGGLVVPAFGLSAGVG
                  0 ||||||||||||||||||||||||.|.|||||||.||||||||.|....|..|.||||||
1                 0 GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFSLSAGVG

gi|212843       140 VSNALVFEIVMTFGLVYTVYATAVDPKNGSLGTIAPIAIGFIVGANI 187
                 60 |.|||||||||||||||||||||.|||.||||||||||||||||||| 107
1                60 VTNALVFEIVMTFGLVYTVYATAIDPKKGSLGTIAPIAIGFIVGANI 107
""",
            )
            hit = hits[6]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|22858917|gb|AAN05780.1|")
            self.assertEqual(hit.target.name, "AAN05780")
            self.assertEqual(
                hit.target.description,
                "tonoplast intrinsic protein bobTIP26-2 [Brassica oleracea var. botrytis]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=251)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 453.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 179.103640170605)
            self.assertAlmostEqual(hsp.annotations["evalue"], 8.24518074030088e-44)
            self.assertEqual(hsp.annotations["identity"], 93)
            self.assertEqual(hsp.annotations["positive"], 97)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 80, 187],
                          [  0, 107]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 107)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 80)
            self.assertEqual(hsp.target.annotations["end"], 187)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 107))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFS...ANI')",
            )
            self.assertEqual(hsp.query.id, "1")
            self.assertEqual(hsp.query.description, "gi|3298468|dbj|BAA31520.1| SAMIPF")
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({80: 'GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSVVACLLLKFATGGLVVPAFG...ANI'}, length=251)",
            )
            self.assertEqual(hsp.target.id, "gi|22858917|gb|AAN05780.1|")
            self.assertEqual(hsp.target.name, "AAN05780")
            self.assertEqual(
                hsp.target.description,
                "tonoplast intrinsic protein bobTIP26-2 [Brassica oleracea var. botrytis]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "GGHVNPAVTFGAFVGGNITLLRGI+Y IAQLLGS VACLLLKF T  + V  F LSAGVGV+NALVFEIVMTFGLVYTVYATA+DPK GSLGTIAPIAIGFIVGANI",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|228589        80 GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSVVACLLLKFATGGLVVPAFGLSAGVG
                  0 ||||||||||||||||||||||||.|.|||||||.||||||||.|....|..|.||||||
1                 0 GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFSLSAGVG

gi|228589       140 VSNALVFEIVMTFGLVYTVYATAVDPKNGSLGTIAPIAIGFIVGANI 187
                 60 |.|||||||||||||||||||||.|||.||||||||||||||||||| 107
1                60 VTNALVFEIVMTFGLVYTVYATAIDPKKGSLGTIAPIAIGFIVGANI 107
""",
            )
            hit = hits[7]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|21284372|gb|AAB51394.2|")
            self.assertEqual(hit.target.name, "AAB51394")
            self.assertEqual(
                hit.target.description,
                "tonoplast intrinsic protein bobTIP26-2 [Brassica oleracea var. botrytis]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=175)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 452.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 178.718440594688)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.26184512406631e-43)
            self.assertEqual(hsp.annotations["identity"], 93)
            self.assertEqual(hsp.annotations["positive"], 97)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  4, 111],
                          [  0, 107]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 107)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 4)
            self.assertEqual(hsp.target.annotations["end"], 111)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 107))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFS...ANI')",
            )
            self.assertEqual(hsp.query.id, "1")
            self.assertEqual(hsp.query.description, "gi|3298468|dbj|BAA31520.1| SAMIPF")
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({4: 'GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSVVACLLLKFATGGLVVPAFG...ANI'}, length=175)",
            )
            self.assertEqual(hsp.target.id, "gi|21284372|gb|AAB51394.2|")
            self.assertEqual(hsp.target.name, "AAB51394")
            self.assertEqual(
                hsp.target.description,
                "tonoplast intrinsic protein bobTIP26-2 [Brassica oleracea var. botrytis]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "GGHVNPAVTFGAFVGGNITLLRGI+Y IAQLLGS VACLLLKF T  + V  F LSAGVGV+NALVFEIVMTFGLVYTVYATA+DPK GSLGTIAPIAIGFIVGANI",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|212843         4 GGHVNPAVTFGAFVGGNITLLRGILYWIAQLLGSVVACLLLKFATGGLVVPAFGLSAGVG
                  0 ||||||||||||||||||||||||.|.|||||||.||||||||.|....|..|.||||||
1                 0 GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFSLSAGVG

gi|212843        64 VSNALVFEIVMTFGLVYTVYATAVDPKNGSLGTIAPIAIGFIVGANI 111
                 60 |.|||||||||||||||||||||.|||.||||||||||||||||||| 107
1                60 VTNALVFEIVMTFGLVYTVYATAIDPKKGSLGTIAPIAIGFIVGANI 107
""",
            )
            hit = hits[8]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|38198150|emb|CAE53881.1|")
            self.assertEqual(hit.target.name, "CAE53881")
            self.assertEqual(hit.target.description, "aquaporin [Ricinus communis]")
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=251)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 452.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 178.718440594688)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.39472886444582e-43)
            self.assertEqual(hsp.annotations["identity"], 91)
            self.assertEqual(hsp.annotations["positive"], 96)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 80, 187],
                          [  0, 107]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 107)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 80)
            self.assertEqual(hsp.target.annotations["end"], 187)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 107))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFS...ANI')",
            )
            self.assertEqual(hsp.query.id, "1")
            self.assertEqual(hsp.query.description, "gi|3298468|dbj|BAA31520.1| SAMIPF")
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({80: 'GGHVNPAVTFGAFVGGNITLLRGILYWFAQLLGSTVACLLLKFSTGGLTTSAFA...ANI'}, length=251)",
            )
            self.assertEqual(hsp.target.id, "gi|38198150|emb|CAE53881.1|")
            self.assertEqual(hsp.target.name, "CAE53881")
            self.assertEqual(hsp.target.description, "aquaporin [Ricinus communis]")
            self.assertEqual(
                hsp.annotations["midline"],
                "GGHVNPAVTFGAFVGGNITLLRGI+Y  AQLLGSTVACLLLKF T  +    F+LS+GVGV NA VFEIVMTFGLVYTVYATA+DPKKGSLGTIAPIAIGFIVGANI",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|381981        80 GGHVNPAVTFGAFVGGNITLLRGILYWFAQLLGSTVACLLLKFSTGGLTTSAFALSSGVG
                  0 ||||||||||||||||||||||||.|..|||||||||||||||.|.......|.||.|||
1                 0 GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFSLSAGVG

gi|381981       140 VWNAFVFEIVMTFGLVYTVYATAVDPKKGSLGTIAPIAIGFIVGANI 187
                 60 |.||.||||||||||||||||||.||||||||||||||||||||||| 107
1                60 VTNALVFEIVMTFGLVYTVYATAIDPKKGSLGTIAPIAIGFIVGANI 107
""",
            )
            hit = hits[9]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|162809290|dbj|BAF95576.1|")
            self.assertEqual(hit.target.name, "BAF95576")
            self.assertEqual(
                hit.target.description,
                "tonoplast intrinsic protein [Nicotiana tabacum]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=251)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 450.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 177.948041442853)
            self.assertAlmostEqual(hsp.annotations["evalue"], 2.0302699895292e-43)
            self.assertEqual(hsp.annotations["identity"], 91)
            self.assertEqual(hsp.annotations["positive"], 95)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[ 80, 187],
                          [  0, 107]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 107)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 80)
            self.assertEqual(hsp.target.annotations["end"], 187)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 107))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFS...ANI')",
            )
            self.assertEqual(hsp.query.id, "1")
            self.assertEqual(hsp.query.description, "gi|3298468|dbj|BAA31520.1| SAMIPF")
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({80: 'GGHVNPAVTFGAFVGGNITLFRGILYIIAQLLGSTVACFLLEFATGGMSTGAFA...ANI'}, length=251)",
            )
            self.assertEqual(hsp.target.id, "gi|162809290|dbj|BAF95576.1|")
            self.assertEqual(hsp.target.name, "BAF95576")
            self.assertEqual(
                hsp.target.description,
                "tonoplast intrinsic protein [Nicotiana tabacum]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "GGHVNPAVTFGAFVGGNITL RGI+YIIAQLLGSTVAC LL+F T  M+ G F+LSAGV V NA VFEIVMTFGLVYTVYATAIDPKKG LG IAPIAIGFIVGANI",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|162809        80 GGHVNPAVTFGAFVGGNITLFRGILYIIAQLLGSTVACFLLEFATGGMSTGAFALSAGVS
                  0 ||||||||||||||||||||.|||.|||||||||||||.||.|.|..|..|.|.|||||.
1                 0 GGHVNPAVTFGAFVGGNITLLRGIVYIIAQLLGSTVACLLLKFVTNDMAVGVFSLSAGVG

gi|162809       140 VWNAFVFEIVMTFGLVYTVYATAIDPKKGDLGVIAPIAIGFIVGANI 187
                 60 |.||.||||||||||||||||||||||||.||.|||||||||||||| 107
1                60 VTNALVFEIVMTFGLVYTVYATAIDPKKGSLGTIAPIAIGFIVGANI 107
""",
            )
            record = next(records)
            self.assertEqual(record.num, 2)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "2")
            self.assertEqual(
                record.query.description,
                "gi|2781234|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(repr(record.query.seq), "Seq(None, length=304)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 8994603)
            self.assertEqual(record.stat["db-len"], -1216159329)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 315106678978.0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 10)
            hit = hits[0]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|157878523|pdb|1JLX|A")
            self.assertEqual(hit.target.name, "1JLX-A")
            self.assertEqual(
                hit.target.description,
                "Chain A, Agglutinin In Complex With T-Disaccharide >gi|157878524|pdb|1JLX|B Chain B, Agglutinin In Complex With T-Disaccharide >gi|157878525|pdb|1JLY|A Chain A, Crystal Structure Of Amaranthus Caudatus Agglutinin >gi|157878526|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=303)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1638.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 635.565137632669)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.61027401233368e-180)
            self.assertEqual(hsp.annotations["identity"], 303)
            self.assertEqual(hsp.annotations["positive"], 303)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 303],
                          [  1, 304]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1)
            self.assertEqual(hsp.query.annotations["end"], 304)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 303)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 303))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq({1: 'AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYD...QNN'}, length=304)",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|2781234|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYD...QNN')",
            )
            self.assertEqual(hsp.target.id, "gi|157878523|pdb|1JLX|A")
            self.assertEqual(hsp.target.name, "1JLX-A")
            self.assertEqual(
                hsp.target.description,
                "Chain A, Agglutinin In Complex With T-Disaccharide >gi|157878524|pdb|1JLX|B Chain B, Agglutinin In Complex With T-Disaccharide >gi|157878525|pdb|1JLY|A Chain A, Crystal Structure Of Amaranthus Caudatus Agglutinin >gi|157878526|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIKSRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHYTQNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKGYVTFKGNNGKYLGVITINQLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDDWILVDGNDPRETNEAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIELGQNN",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|157878         0 AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIK
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                 1 AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIK

gi|157878        60 SRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHY
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                61 SRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHY

gi|157878       120 TQNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKGYVTFKGNNGKYLGVITI
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2               121 TQNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKGYVTFKGNNGKYLGVITI

gi|157878       180 NQLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDDWILVDGNDPRETN
                180 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2               181 NQLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDDWILVDGNDPRETN

gi|157878       240 EAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIELG
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2               241 EAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIELG

gi|157878       300 QNN 303
                300 ||| 303
2               301 QNN 304
""",
            )
            hit = hits[1]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|33308026|gb|AAQ03084.1|AF401479_1")
            self.assertEqual(hit.target.name, "AAQ03084")
            self.assertEqual(hit.target.description, "agglutinin [Amaranthus caudatus]")
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=304)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1611.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 625.1647490829)
            self.assertAlmostEqual(hsp.annotations["evalue"], 2.12254922203683e-177)
            self.assertEqual(hsp.annotations["identity"], 298)
            self.assertEqual(hsp.annotations["positive"], 300)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  1, 304],
                          [  1, 304]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1)
            self.assertEqual(hsp.query.annotations["end"], 304)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 1)
            self.assertEqual(hsp.target.annotations["end"], 304)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 303))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq({1: 'AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYD...QNN'}, length=304)",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|2781234|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({1: 'AGLPVIMCLKSNNNQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYD...SNN'}, length=304)",
            )
            self.assertEqual(hsp.target.id, "gi|33308026|gb|AAQ03084.1|AF401479_1")
            self.assertEqual(hsp.target.name, "AAQ03084")
            self.assertEqual(hsp.target.description, "agglutinin [Amaranthus caudatus]")
            self.assertEqual(
                hsp.annotations["midline"],
                "AGLPVIMCLKSNN+QKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIKSRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHYTQNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPK YVTFKGNNGKYLGVITINQLPCLQFGYDNLNDPKVAH+MFVTSNGTICIKS YMNKFWRLSTDDWILVDGNDPRETNEAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIELG NN",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|333080         1 AGLPVIMCLKSNNNQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIK
                  0 |||||||||||||.||||||||||||||||||||||||||||||||||||||||||||||
2                 1 AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIK

gi|333080        61 SRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHY
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                61 SRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHY

gi|333080       121 TQNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKRYVTFKGNNGKYLGVITI
                120 ||||||||||||||||||||||||||||||||||||||||||.|||||||||||||||||
2               121 TQNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKGYVTFKGNNGKYLGVITI

gi|333080       181 NQLPCLQFGYDNLNDPKVAHEMFVTSNGTICIKSTYMNKFWRLSTDDWILVDGNDPRETN
                180 ||||||||||||||||||||.|||||||||||||.|||||||||||||||||||||||||
2               181 NQLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDDWILVDGNDPRETN

gi|333080       241 EAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIELG
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2               241 EAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIELG

gi|333080       301 SNN 304
                300 .|| 303
2               301 QNN 304
""",
            )
            hit = hits[2]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|37359170|gb|AAL05954.1|")
            self.assertEqual(hit.target.name, "AAL05954")
            self.assertEqual(hit.target.description, "agglutinin [Amaranthus caudatus]")
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=304)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1603.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 622.083152475561)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.66685561532459e-176)
            self.assertEqual(hsp.annotations["identity"], 297)
            self.assertEqual(hsp.annotations["positive"], 299)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  1, 304],
                          [  1, 304]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1)
            self.assertEqual(hsp.query.annotations["end"], 304)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 1)
            self.assertEqual(hsp.target.annotations["end"], 304)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 303))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq({1: 'AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYD...QNN'}, length=304)",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|2781234|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({1: 'AGLPVIMCLKSNNNQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYD...SNN'}, length=304)",
            )
            self.assertEqual(hsp.target.id, "gi|37359170|gb|AAL05954.1|")
            self.assertEqual(hsp.target.name, "AAL05954")
            self.assertEqual(hsp.target.description, "agglutinin [Amaranthus caudatus]")
            self.assertEqual(
                hsp.annotations["midline"],
                "AGLPVIMCLKSNN+QKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIKSRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHYTQNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPK YVTFKGNNGKYLGVITINQLPCLQFGYDNLNDPKVAH+MFVTSNGTICIKS YMNKFWRLSTDDWILVDGNDPRETNEAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEII LG NN",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|373591         1 AGLPVIMCLKSNNNQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIK
                  0 |||||||||||||.||||||||||||||||||||||||||||||||||||||||||||||
2                 1 AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIK

gi|373591        61 SRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHY
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                61 SRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHY

gi|373591       121 TQNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKRYVTFKGNNGKYLGVITI
                120 ||||||||||||||||||||||||||||||||||||||||||.|||||||||||||||||
2               121 TQNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKGYVTFKGNNGKYLGVITI

gi|373591       181 NQLPCLQFGYDNLNDPKVAHEMFVTSNGTICIKSTYMNKFWRLSTDDWILVDGNDPRETN
                180 ||||||||||||||||||||.|||||||||||||.|||||||||||||||||||||||||
2               181 NQLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDDWILVDGNDPRETN

gi|373591       241 EAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIGLG
                240 |||||||||||||||||||||||||||||||||||||||||||||||||||||||||.||
2               241 EAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIELG

gi|373591       301 SNN 304
                300 .|| 303
2               301 QNN 304
""",
            )
            hit = hits[3]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|4929263|gb|AAD33922.1|AF143954_1")
            self.assertEqual(hit.target.name, "AAD33922")
            self.assertEqual(
                hit.target.description,
                "agglutinin [Amaranthus hypochondriacus] >gi|15999|emb|CAA77664.1| seed specific protein of balanced nutritional quality [Amaranthus hypochondriacus]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=304)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1596.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 619.38675544414)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.10781005546209e-175)
            self.assertEqual(hsp.annotations["identity"], 296)
            self.assertEqual(hsp.annotations["positive"], 299)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  1, 304],
                          [  1, 304]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1)
            self.assertEqual(hsp.query.annotations["end"], 304)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 1)
            self.assertEqual(hsp.target.annotations["end"], 304)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 303))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq({1: 'AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYD...QNN'}, length=304)",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|2781234|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({1: 'AGLPVIMCLKSNNNQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYD...SNN'}, length=304)",
            )
            self.assertEqual(hsp.target.id, "gi|4929263|gb|AAD33922.1|AF143954_1")
            self.assertEqual(hsp.target.name, "AAD33922")
            self.assertEqual(
                hsp.target.description,
                "agglutinin [Amaranthus hypochondriacus] >gi|15999|emb|CAA77664.1| seed specific protein of balanced nutritional quality [Amaranthus hypochondriacus]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "AGLPVIMCLKSNN+QKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIKSRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHYT+NYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPK YVTFKGNNGKYLGVITINQLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTD+WILVDGNDPRETNEAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKP FINCMNAATQ VDETAILEIIELG NN",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|492926         1 AGLPVIMCLKSNNNQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIK
                  0 |||||||||||||.||||||||||||||||||||||||||||||||||||||||||||||
2                 1 AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIK

gi|492926        61 SRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHY
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                61 SRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHY

gi|492926       121 TENYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKTYVTFKGNNGKYLGVITI
                120 |.||||||||||||||||||||||||||||||||||||||||.|||||||||||||||||
2               121 TQNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKGYVTFKGNNGKYLGVITI

gi|492926       181 NQLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDNWILVDGNDPRETN
                180 ||||||||||||||||||||||||||||||||||||||||||||||.|||||||||||||
2               181 NQLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDDWILVDGNDPRETN

gi|492926       241 EAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPEFINCMNAATQIVDETAILEIIELG
                240 |||||||||||||||||||||||||||||||||||.||||||||||.|||||||||||||
2               241 EAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIELG

gi|492926       301 SNN 304
                300 .|| 303
2               301 QNN 304
""",
            )
            hit = hits[4]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|20067185|gb|AAM09540.1|AF491291_1")
            self.assertEqual(hit.target.name, "AAM09540")
            self.assertEqual(
                hit.target.description, "seed protein AmA1 [Amaranthus hypochondriacus]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=304)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 1592.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 617.84595714047)
            self.assertAlmostEqual(hsp.annotations["evalue"], 3.27747281942883e-175)
            self.assertEqual(hsp.annotations["identity"], 295)
            self.assertEqual(hsp.annotations["positive"], 299)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  1, 304],
                          [  1, 304]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 1)
            self.assertEqual(hsp.query.annotations["end"], 304)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 1)
            self.assertEqual(hsp.target.annotations["end"], 304)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 303))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq({1: 'AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYD...QNN'}, length=304)",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|2781234|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({1: 'AGLPVIMCLKSNNNQEYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYD...SNN'}, length=304)",
            )
            self.assertEqual(hsp.target.id, "gi|20067185|gb|AAM09540.1|AF491291_1")
            self.assertEqual(hsp.target.name, "AAM09540")
            self.assertEqual(
                hsp.target.description, "seed protein AmA1 [Amaranthus hypochondriacus]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "AGLPVIMCLKSNN+Q+YLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIKSRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHYT+NYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPK YVTFKGNNGKYLGVITINQLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTD+WILVDGNDPRETNEAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKP FINCMNAATQ VDETAILEIIELG NN",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|200671         1 AGLPVIMCLKSNNNQEYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIK
                  0 |||||||||||||.|.||||||||||||||||||||||||||||||||||||||||||||
2                 1 AGLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIK

gi|200671        61 SRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHY
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
2                61 SRYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHY

gi|200671       121 TENYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKTYVTFKGNNGKYLGVITI
                120 |.||||||||||||||||||||||||||||||||||||||||.|||||||||||||||||
2               121 TQNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKGYVTFKGNNGKYLGVITI

gi|200671       181 NQLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDNWILVDGNDPRETN
                180 ||||||||||||||||||||||||||||||||||||||||||||||.|||||||||||||
2               181 NQLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDDWILVDGNDPRETN

gi|200671       241 EAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPEFINCMNAATQIVDETAILEIIELG
                240 |||||||||||||||||||||||||||||||||||.||||||||||.|||||||||||||
2               241 EAAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIELG

gi|200671       301 SNN 304
                300 .|| 303
2               301 QNN 304
""",
            )
            hit = hits[5]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|225465425|ref|XP_002264858.1|")
            self.assertEqual(hit.target.name, "XP_002264858")
            self.assertEqual(
                hit.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=465)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 623.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 244.587568076555)
            self.assertAlmostEqual(hsp.annotations["evalue"], 6.71087757255643e-63)
            self.assertEqual(hsp.annotations["identity"], 126)
            self.assertEqual(hsp.annotations["positive"], 187)
            self.assertEqual(hsp.annotations["gaps"], 6)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  1, 102, 102, 161, 161, 223, 223, 233, 233, 268, 268, 293],
                          [  2, 103, 104, 163, 164, 226, 227, 237, 238, 273, 275, 300]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 2)
            self.assertEqual(hsp.query.annotations["end"], 300)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 1)
            self.assertEqual(hsp.target.annotations["end"], 293)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 298))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq({2: 'GLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDG...IEL'}, length=304)",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|2781234|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({1: 'ALPRYVVLKSKYNNKYLRYIHEDVQIHGFLQFSGEEVVTPYSKYQVERAKNGGG...AEL'}, length=465)",
            )
            self.assertEqual(hsp.target.id, "gi|225465425|ref|XP_002264858.1|")
            self.assertEqual(hsp.target.name, "XP_002264858")
            self.assertEqual(
                hsp.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                " LP  + LKS  + KYLRY  +++Q +G LQFS ++++ P ++++VE +K   GLVHI+  Y NKY VRWS NH+WI A A+EPDE++S+W+CTLF+P++V +G+ + +R  HVQLGHY   + +   + S LFA S+  D    DV  +IDW+S+   PK ++ FKG+NG YL    I   P L+F   ++ DP V +++F T +G++ IKS+Y  +FWR S  +WI  D +D   TN +  LF     D NV++L N+    F KR T+   G  +C+NAA   +   A LE+ EL",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|225465         1 ALPRYVVLKSKYNNKYLRYIHEDVQIHGFLQFSGEEVVTPYSKYQVERAKNGGGLVHIRC
                  0 .||....|||....|||||.....|..|.||||......|.....||..|...|||||..
2                 2 GLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIKS

gi|225465        61 CYNNKYWVRWSKNHWWIVAGADEPDEDQSSWSCTLFEPVHV-DGDAQTLRFRHVQLGHYA
                 60 .|.|||.||||.||.||.|.|.||||..|.|.||||.|..|-.|.....|..|||||||.
2                62 RYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHYT

gi|225465       120 CLWRLPPPYGSCLFAGSTSADNDLCDVCTIIDWESLLILPK-HIAFKGDNGHYLSARKIE
                120 ..........|.|||.|...|....||...|||.|....||-...|||.||.||....|.
2               122 QNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKGYVTFKGNNGKYLGVITIN

gi|225465       179 GHPYLEFASSDIGDPTVGNEVFTTHDGSVRIKSDYFGRFWRRSP-NWIWADSDDS-TTNN
                180 ..|.|.|......||.|....|.|..|...|||.|...|||.|.-.||..|..|.-.||.
2               182 QLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDDWILVDGNDPRETNE

gi|225465       237 SDTLFWPVRVDNNVVALRNLGNNNFCKRLTT--EGKTSCLNAAVSTISREARLEVAEL
                240 ...||.....|.||..|.|.....|.||.|.--.|...|.|||.......|.||..||
2               242 AAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIEL

gi|225465       293
                298
2               300
""",
            )
            hit = hits[6]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|225465427|ref|XP_002264911.1|")
            self.assertEqual(hit.target.name, "XP_002264911")
            self.assertEqual(
                hit.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=465)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 620.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 243.431969348803)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.66631297328129e-62)
            self.assertEqual(hsp.annotations["identity"], 126)
            self.assertEqual(hsp.annotations["positive"], 187)
            self.assertEqual(hsp.annotations["gaps"], 6)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  1, 102, 102, 161, 161, 223, 223, 232, 232, 268, 268, 293],
                          [  2, 103, 104, 163, 164, 226, 227, 236, 237, 273, 275, 300]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 2)
            self.assertEqual(hsp.query.annotations["end"], 300)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 1)
            self.assertEqual(hsp.target.annotations["end"], 293)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 298))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq({2: 'GLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDG...IEL'}, length=304)",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|2781234|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({1: 'ALPRYVVLKSKYNNKYLRYIHEDVQIHGFLQFSGEEVVTPYSKYQVEMAKNGKG...AEL'}, length=465)",
            )
            self.assertEqual(hsp.target.id, "gi|225465427|ref|XP_002264911.1|")
            self.assertEqual(hsp.target.name, "XP_002264911")
            self.assertEqual(
                hsp.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                " LP  + LKS  + KYLRY  +++Q +G LQFS ++++ P ++++VE +K   GLVHI+  Y NKY VRWS NH+WI A A+EPDE++S+W+CTLF+P+YV +G+ + ++  HVQLGHY   + +   + S LFA S+  D    DV  +IDW+S+   PK ++ FKG+NG +L   TI   P L+F   ++ DP V +++F T +G++ IKS+Y  +FWR S  +WI  D +D   TN    LF     D NV++L N+    F KR T+   G I+C+NA    +   A LE+ EL",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|225465         1 ALPRYVVLKSKYNNKYLRYIHEDVQIHGFLQFSGEEVVTPYSKYQVEMAKNGKGLVHIRC
                  0 .||....|||....|||||.....|..|.||||......|.....||..|...|||||..
2                 2 GLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIKS

gi|225465        61 CYNNKYWVRWSKNHWWIVAGADEPDEDQSSWSCTLFEPVYV-DGDAQTLQFRHVQLGHYA
                 60 .|.|||.||||.||.||.|.|.||||..|.|.||||.|.||-.|........|||||||.
2                62 RYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHYT

gi|225465       120 CLWRLPPPYGSCLFAGSTSPDNDLCDVCTIIDWESLLLLPK-HIAFKGDNGYFLSARTIE
                120 ..........|.|||.|...|....||...|||.|....||-...|||.||..|...||.
2               122 QNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKGYVTFKGNNGKYLGVITIN

gi|225465       179 GHPYLEFASSDIGDPTVGNEVFTTHDGSVHIKSDYFGRFWRRSP-NWIWADSDD-STTNN
                180 ..|.|.|......||.|....|.|..|...|||.|...|||.|.-.||..|..|-..||.
2               182 QLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDDWILVDGNDPRETNE

gi|225465       237 PDTLFWPVRVDKNVVALRNLGNNNFCKRLTT--EGKISCLNAGVSTISREARLEVAEL
                240 ...||.....|.||..|.|.....|.||.|.--.|.|.|.||........|.||..||
2               242 AAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIEL

gi|225465       293
                298
2               300
""",
            )
            hit = hits[7]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|147838248|emb|CAN71829.1|")
            self.assertEqual(hit.target.name, "CAN71829")
            self.assertEqual(
                hit.target.description, "hypothetical protein [Vitis vinifera]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=468)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 606.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 238.03917528596)
            self.assertAlmostEqual(hsp.annotations["evalue"], 7.00082705100501e-61)
            self.assertEqual(hsp.annotations["identity"], 124)
            self.assertEqual(hsp.annotations["positive"], 181)
            self.assertEqual(hsp.annotations["gaps"], 5)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  2, 102, 102, 161, 161, 234, 234, 269, 269, 294],
                          [  3, 103, 104, 163, 164, 237, 238, 273, 275, 300]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 3)
            self.assertEqual(hsp.query.annotations["end"], 300)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 2)
            self.assertEqual(hsp.target.annotations["end"], 294)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 297))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq({3: 'LPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGL...IEL'}, length=304)",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|2781234|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({2: 'LPRYVVFKSKYNNKXLRYIHEDGEIHGFLQFSGEEVMTPYSKYHVEMAKNGKGL...AEL'}, length=468)",
            )
            self.assertEqual(hsp.target.id, "gi|147838248|emb|CAN71829.1|")
            self.assertEqual(hsp.target.name, "CAN71829")
            self.assertEqual(
                hsp.target.description, "hypothetical protein [Vitis vinifera]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "LP  +  KS  + K LRY  ++ + +G LQFS ++++ P +++ VE +K   GLVHI+  Y NKY VRWS NH+WI A A+E DE++S W CTLF+P+YV +G+ + +R  HVQLGHY   + +   + S LFA S+  D    DVF +IDW+S+   PK ++ FKG+N  YL   TI   P L+F   ++ DP V +++F T +G+  IKS+Y  +FWR S+ +WIL D +D   TN +  LF     D NV++L N+    F KR T+   G  +C+NA    +   A LE+ EL",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|147838         2 LPRYVVFKSKYNNKXLRYIHEDGEIHGFLQFSGEEVMTPYSKYHVEMAKNGKGLVHIRCC
                  0 ||.....||....|.|||........|.||||......|.....||..|...|||||...
2                 3 LPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIKSR

gi|147838        62 YNNKYWVRWSENHWWIVAGADETDEDQSLWTCTLFEPVYV-DGDAQTLRFRHVQLGHYAC
                 60 |.|||.||||.||.||.|.|.|.||..|.|.||||.|.||-.|.....|..|||||||..
2                63 YTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHYTQ

gi|147838       121 LWRLPPPYGSCLFAGSASPDKDLYDVFTIIDWESLLILPK-HIAFKGDNDYYLSARTIEG
                120 .........|.|||.|...|....|||..|||.|....||-...|||.|..||...||..
2               123 NYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKGYVTFKGNNGKYLGVITINQ

gi|147838       180 RPYLEFASTDIGDPTVGNEVFTTQDGSARIKSDYFGRFWRRSSPNWILADSDDS-TTNNS
                180 .|.|.|......||.|....|.|..|...|||.|...|||.|...|||.|..|.-.||..
2               183 LPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDDWILVDGNDPRETNEA

gi|147838       239 NTLFWPVRVDKNVVALRNLGNNNFCKRLTT--EGKTSCLNAGVSTISREARLEVAEL 294
                240 ..||.....|.||..|.|.....|.||.|.--.|...|.||........|.||..|| 297
2               243 AALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIEL 300
""",
            )
            hit = hits[8]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|225465417|ref|XP_002264098.1|")
            self.assertEqual(hit.target.name, "XP_002264098")
            self.assertEqual(
                hit.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=465)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 602.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 236.498376982291)
            self.assertAlmostEqual(hsp.annotations["evalue"], 2.30850343103547e-60)
            self.assertEqual(hsp.annotations["identity"], 124)
            self.assertEqual(hsp.annotations["positive"], 184)
            self.assertEqual(hsp.annotations["gaps"], 6)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  1, 102, 102, 161, 161, 223, 223, 233, 233, 268, 268, 293],
                          [  2, 103, 104, 163, 164, 226, 227, 237, 238, 273, 275, 300]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 2)
            self.assertEqual(hsp.query.annotations["end"], 300)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 1)
            self.assertEqual(hsp.target.annotations["end"], 293)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 298))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq({2: 'GLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDG...IEL'}, length=304)",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|2781234|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({1: 'ALPRYVVLKSKYNDKYLRYIHEDVQIHGFLQFSGEEVVTPYSKYQVERAKNGKG...AEL'}, length=465)",
            )
            self.assertEqual(hsp.target.id, "gi|225465417|ref|XP_002264098.1|")
            self.assertEqual(hsp.target.name, "XP_002264098")
            self.assertEqual(
                hsp.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                " LP  + LKS  + KYLRY  +++Q +G LQFS ++++ P ++++VE +K   GLVHI+  Y NKY VRWS NH+WI A A+EPDE++S+W+CTLF+P++V +GN + +R  HVQLGHY   + +   + S LFA S+  +    DV  +IDW+S+   PK +V FKG+NG YL   TI   P L+F   ++ DP V +++F T + ++ IKS++  +FWR S  +WI  D +D   TN +  LF     D NV++L N     F  R T+   G  +C+NA    +   A LE+ EL",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|225465         1 ALPRYVVLKSKYNDKYLRYIHEDVQIHGFLQFSGEEVVTPYSKYQVERAKNGKGLVHIRC
                  0 .||....|||....|||||.....|..|.||||......|.....||..|...|||||..
2                 2 GLPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIKS

gi|225465        61 CYNNKYWVRWSKNHWWIVAGADEPDEDQSSWSCTLFEPVHV-DGNAQTLRFRHVQLGHYA
                 60 .|.|||.||||.||.||.|.|.||||..|.|.||||.|..|-.||....|..|||||||.
2                62 RYTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHYT

gi|225465       120 CLWRLPPPYGSCLFAGSASPNKDLCDVCTIIDWESLLILPK-HVAFKGDNGNYLSARTIE
                120 ..........|.|||.|........||...|||.|....||-.|.|||.||.||...||.
2               122 QNYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKGYVTFKGNNGKYLGVITIN

gi|225465       179 GHPYLEFASSDIGDPTVGNEVFTTHDRSVRIKSHHFGRFWRRSP-NWIWADSDDS-TTNN
                180 ..|.|.|......||.|....|.|......|||.....|||.|.-.||..|..|.-.||.
2               182 QLPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDDWILVDGNDPRETNE

gi|225465       237 SDTLFWPVRVDKNVVALRNFGNNNFCMRLTT--EGKTSCLNAGVSTISREARLEVAEL
                240 ...||.....|.||..|.|.....|..|.|.--.|...|.||........|.||..||
2               242 AAALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIEL

gi|225465       293
                298
2               300
""",
            )
            hit = hits[9]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|225465423|ref|XP_002264775.1|")
            self.assertEqual(hit.target.name, "XP_002264775")
            self.assertEqual(
                hit.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=467)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 587.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 230.72038334353)
            self.assertAlmostEqual(hsp.annotations["evalue"], 1.14603053551379e-58)
            self.assertEqual(hsp.annotations["identity"], 123)
            self.assertEqual(hsp.annotations["positive"], 179)
            self.assertEqual(hsp.annotations["gaps"], 6)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  2, 102, 102, 161, 161, 223, 223, 233, 233, 268, 268, 293],
                          [  3, 103, 104, 163, 164, 226, 227, 237, 238, 273, 275, 300]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 3)
            self.assertEqual(hsp.query.annotations["end"], 300)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 2)
            self.assertEqual(hsp.target.annotations["end"], 293)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 297))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq({3: 'LPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGL...IEL'}, length=304)",
            )
            self.assertEqual(hsp.query.id, "2")
            self.assertEqual(
                hsp.query.description,
                "gi|2781234|pdb|1JLY|B Chain B, Crystal Structure Of Amaranthus Caudatus Agglutinin",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq({2: 'LPRYVVFKSKYNNKCLRYIHEDGEIHGFLQFSGEEVMTPYSKYHVEMAKNGKGL...AEL'}, length=467)",
            )
            self.assertEqual(hsp.target.id, "gi|225465423|ref|XP_002264775.1|")
            self.assertEqual(hsp.target.name, "XP_002264775")
            self.assertEqual(
                hsp.target.description,
                "PREDICTED: hypothetical protein [Vitis vinifera]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "LP  +  KS  + K LRY  ++ + +G LQFS ++++ P +++ VE +K   GLVHI+  Y NKY VRWS NH+WI A A+E DE++S W CTLF+P+YV +G+ + +R  HVQLGHY   + +   + S LFA S+  D    DVF +IDW+S+   PK ++ FKG+N  YL   TI   P L+F   ++ DP V +++F T +G+  IKS+Y  +FWR S  +WIL D +D    N +  LF     D NV++L N+    F KR T+   G  +C+NA    +   A LE+ EL",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|225465         2 LPRYVVFKSKYNNKCLRYIHEDGEIHGFLQFSGEEVMTPYSKYHVEMAKNGKGLVHIRCC
                  0 ||.....||....|.|||........|.||||......|.....||..|...|||||...
2                 3 LPVIMCLKSNNHQKYLRYQSDNIQQYGLLQFSADKILDPLAQFEVEPSKTYDGLVHIKSR

gi|225465        62 YNNKYWVRWSENHWWIVAGADETDEDQSLWTCTLFEPVYV-DGDAQTLRFRHVQLGHYAC
                 60 |.|||.||||.||.||.|.|.|.||..|.|.||||.|.||-.|.....|..|||||||..
2                63 YTNKYLVRWSPNHYWITASANEPDENKSNWACTLFKPLYVEEGNMKKVRLLHVQLGHYTQ

gi|225465       121 LWRLPPPYGSCLFAGSASPDKDLYDVFTIIDWESLLILPK-HIAFKGDNDYYLSARTIEG
                120 .........|.|||.|...|....|||..|||.|....||-...|||.|..||...||..
2               123 NYTVGGSFVSYLFAESSQIDTGSKDVFHVIDWKSIFQFPKGYVTFKGNNGKYLGVITINQ

gi|225465       180 RPYLEFASTDIGDPTVGNEVFTTQDGSARIKSDYFGRFWRRSP-NWILADSDDS-TNNNS
                180 .|.|.|......||.|....|.|..|...|||.|...|||.|.-.|||.|..|.-..|..
2               183 LPCLQFGYDNLNDPKVAHQMFVTSNGTICIKSNYMNKFWRLSTDDWILVDGNDPRETNEA

gi|225465       238 NTLFWPVRVDKNVVALRNLGNNNFCKRLTT--EGKTSCLNAGVSTISREARLEVAEL 293
                240 ..||.....|.||..|.|.....|.||.|.--.|...|.||........|.||..|| 297
2               243 AALFRSDVHDFNVISLLNMQKTWFIKRFTSGKPGFINCMNAATQNVDETAILEIIEL 300
""",
            )
            record = next(records)
            self.assertEqual(record.num, 3)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "3")
            self.assertEqual(
                record.query.description,
                "gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein",
            )
            self.assertEqual(repr(record.query.seq), "Seq(None, length=600)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 8994603)
            self.assertEqual(record.stat["db-len"], -1216159329)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 825121048178.0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 10)
            hit = hits[0]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|13124535|sp|Q9WTV7.1|RNF12_MOUSE")
            self.assertEqual(hit.target.name, "Q9WTV7")
            self.assertEqual(
                hit.target.description,
                "RecName: Full=E3 ubiquitin-protein ligase RNF12; AltName: Full=RING finger protein 12; AltName: Full=LIM domain-interacting RING finger protein; AltName: Full=RING finger LIM domain-binding protein; Short=R-LIM >gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein [Mus musculus]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=600)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 3103.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 1199.88251635159)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 600)
            self.assertEqual(hsp.annotations["positive"], 600)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 600],
                          [  0, 600]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 600)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 600)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 600))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.query.id, "3")
            self.assertEqual(
                hsp.query.description,
                "gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.target.id, "gi|13124535|sp|Q9WTV7.1|RNF12_MOUSE")
            self.assertEqual(hsp.target.name, "Q9WTV7")
            self.assertEqual(
                hsp.target.description,
                "RecName: Full=E3 ubiquitin-protein ligase RNF12; AltName: Full=RING finger protein 12; AltName: Full=LIM domain-interacting RING finger protein; AltName: Full=RING finger LIM domain-binding protein; Short=R-LIM >gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein [Mus musculus]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTEEELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSRQRGNQSWRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSASESASARPSRAERNSTEAVTEVPTTRAQRRARSRSPEHRRTRARAERSMSPLQPTSEIPRRAPTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNSESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESERGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSEPSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSKMFEGSSEGGSSGPSRKDGRHRAPVTFDESGSLPFFSLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGENDALKTCSVCITEYTEGDKLRKLPCSHEFHVHCIDRWLSENSTCPICRRAVLSSGNRESVV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|131245         0 MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3                 0 MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTE

gi|131245        60 EELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSRQRGNQS
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3                60 EELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSRQRGNQS

gi|131245       120 WRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSAS
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               120 WRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSAS

gi|131245       180 ESASARPSRAERNSTEAVTEVPTTRAQRRARSRSPEHRRTRARAERSMSPLQPTSEIPRR
                180 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               180 ESASARPSRAERNSTEAVTEVPTTRAQRRARSRSPEHRRTRARAERSMSPLQPTSEIPRR

gi|131245       240 APTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNS
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               240 APTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNS

gi|131245       300 ESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESERGGFRRTF
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               300 ESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESERGGFRRTF

gi|131245       360 SRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSE
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               360 SRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSE

gi|131245       420 PSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSKMFEGSSEGGS
                420 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               420 PSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSKMFEGSSEGGS

gi|131245       480 SGPSRKDGRHRAPVTFDESGSLPFFSLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGEN
                480 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               480 SGPSRKDGRHRAPVTFDESGSLPFFSLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGEN

gi|131245       540 DALKTCSVCITEYTEGDKLRKLPCSHEFHVHCIDRWLSENSTCPICRRAVLSSGNRESVV
                540 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               540 DALKTCSVCITEYTEGDKLRKLPCSHEFHVHCIDRWLSENSTCPICRRAVLSSGNRESVV

gi|131245       600 
                600 
3               600 
""",
            )
            hit = hits[1]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|47078289|ref|NP_035406.3|")
            self.assertEqual(hit.target.name, "NP_035406")
            self.assertEqual(
                hit.target.description,
                "ring finger protein, LIM domain interacting [Mus musculus] >gi|15277964|gb|AAH12960.1| Ring finger protein, LIM domain interacting [Mus musculus] >gi|123229168|emb|CAM26768.1| ring finger protein 12 [Mus musculus] >gi|148682142|gb|EDL14089.1| ring finger protein 12, isoform CRA_a [Mus musculus] >gi|148682143|gb|EDL14090.1| ring finger protein 12, isoform CRA_a [Mus musculus]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=600)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 3058.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 1182.54853543531)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 592)
            self.assertEqual(hsp.annotations["positive"], 596)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 600],
                          [  0, 600]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 600)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 600)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 600))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.query.id, "3")
            self.assertEqual(
                hsp.query.description,
                "gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.target.id, "gi|47078289|ref|NP_035406.3|")
            self.assertEqual(hsp.target.name, "NP_035406")
            self.assertEqual(
                hsp.target.description,
                "ring finger protein, LIM domain interacting [Mus musculus] >gi|15277964|gb|AAH12960.1| Ring finger protein, LIM domain interacting [Mus musculus] >gi|123229168|emb|CAM26768.1| ring finger protein 12 [Mus musculus] >gi|148682142|gb|EDL14089.1| ring finger protein 12, isoform CRA_a [Mus musculus] >gi|148682143|gb|EDL14090.1| ring finger protein 12, isoform CRA_a [Mus musculus]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTEEELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRS QRGNQSWRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSASESASARPSRAERNS EAVTEVPTTRAQRRARSRSPEHRRTRARAERS SPLQPTSEIPRRAPTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNSESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESERGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSEPSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSS+MFEGSSEGGSSGPSR+DGRHRAPVTFDESGSLPF SLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGENDALKTCSVCITEYTEG+KLRKLPCSHE+HVHCIDRWLSENSTCPICRRAVLSSGNRESVV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|470782         0 MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3                 0 MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTE

gi|470782        60 EELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSGQRGNQS
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||.||||||
3                60 EELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSRQRGNQS

gi|470782       120 WRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSAS
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               120 WRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSAS

gi|470782       180 ESASARPSRAERNSAEAVTEVPTTRAQRRARSRSPEHRRTRARAERSRSPLQPTSEIPRR
                180 ||||||||||||||.||||||||||||||||||||||||||||||||.||||||||||||
3               180 ESASARPSRAERNSTEAVTEVPTTRAQRRARSRSPEHRRTRARAERSMSPLQPTSEIPRR

gi|470782       240 APTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNS
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               240 APTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNS

gi|470782       300 ESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESERGGFRRTF
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               300 ESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESERGGFRRTF

gi|470782       360 SRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSE
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               360 SRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSE

gi|470782       420 PSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSEMFEGSSEGGS
                420 |||||||||||||||||||||||||||||||||||||||||||||||||.||||||||||
3               420 PSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSKMFEGSSEGGS

gi|470782       480 SGPSRRDGRHRAPVTFDESGSLPFLSLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGEN
                480 |||||.||||||||||||||||||.|||||||||||||||||||||||||||||||||||
3               480 SGPSRKDGRHRAPVTFDESGSLPFFSLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGEN

gi|470782       540 DALKTCSVCITEYTEGNKLRKLPCSHEYHVHCIDRWLSENSTCPICRRAVLSSGNRESVV
                540 ||||||||||||||||.||||||||||.||||||||||||||||||||||||||||||||
3               540 DALKTCSVCITEYTEGDKLRKLPCSHEFHVHCIDRWLSENSTCPICRRAVLSSGNRESVV

gi|470782       600 
                600 
3               600 
""",
            )
            hit = hits[2]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|12850423|dbj|BAB28712.1|")
            self.assertEqual(hit.target.name, "BAB28712")
            self.assertEqual(
                hit.target.description, "unnamed protein product [Mus musculus]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=600)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 3054.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 1181.00773713164)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 591)
            self.assertEqual(hsp.annotations["positive"], 595)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 600],
                          [  0, 600]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 600)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 600)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 600))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.query.id, "3")
            self.assertEqual(
                hsp.query.description,
                "gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.target.id, "gi|12850423|dbj|BAB28712.1|")
            self.assertEqual(hsp.target.name, "BAB28712")
            self.assertEqual(
                hsp.target.description, "unnamed protein product [Mus musculus]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTEEELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRS QRGNQSWRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSASESASARPSRAERNS EAVTEVPTTRAQRRARSRSPEHRRTRARAERS SPLQPTSEIPRRAPTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNSESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESERGGFRRTFS SERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSEPSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSS+MFEGSSEGGSSGPSR+DGRHRAPVTFDESGSLPF SLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGENDALKTCSVCITEYTEG+KLRKLPCSHE+HVHCIDRWLSENSTCPICRRAVLSSGNRESVV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|128504         0 MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3                 0 MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTE

gi|128504        60 EELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSGQRGNQS
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||.||||||
3                60 EELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSRQRGNQS

gi|128504       120 WRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSAS
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               120 WRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSAS

gi|128504       180 ESASARPSRAERNSAEAVTEVPTTRAQRRARSRSPEHRRTRARAERSRSPLQPTSEIPRR
                180 ||||||||||||||.||||||||||||||||||||||||||||||||.||||||||||||
3               180 ESASARPSRAERNSTEAVTEVPTTRAQRRARSRSPEHRRTRARAERSMSPLQPTSEIPRR

gi|128504       240 APTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNS
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               240 APTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNS

gi|128504       300 ESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESERGGFRRTF
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               300 ESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESERGGFRRTF

gi|128504       360 SSSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSE
                360 |.||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               360 SRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSE

gi|128504       420 PSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSEMFEGSSEGGS
                420 |||||||||||||||||||||||||||||||||||||||||||||||||.||||||||||
3               420 PSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSKMFEGSSEGGS

gi|128504       480 SGPSRRDGRHRAPVTFDESGSLPFLSLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGEN
                480 |||||.||||||||||||||||||.|||||||||||||||||||||||||||||||||||
3               480 SGPSRKDGRHRAPVTFDESGSLPFFSLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGEN

gi|128504       540 DALKTCSVCITEYTEGNKLRKLPCSHEYHVHCIDRWLSENSTCPICRRAVLSSGNRESVV
                540 ||||||||||||||||.||||||||||.||||||||||||||||||||||||||||||||
3               540 DALKTCSVCITEYTEGDKLRKLPCSHEFHVHCIDRWLSENSTCPICRRAVLSSGNRESVV

gi|128504       600 
                600 
3               600 
""",
            )
            hit = hits[3]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|26325250|dbj|BAC26379.1|")
            self.assertEqual(hit.target.name, "BAC26379")
            self.assertEqual(
                hit.target.description, "unnamed protein product [Mus musculus]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=600)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 3047.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 1178.31134010022)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 590)
            self.assertEqual(hsp.annotations["positive"], 595)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 600],
                          [  0, 600]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 600)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 600)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 600))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.query.id, "3")
            self.assertEqual(
                hsp.query.description,
                "gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.target.id, "gi|26325250|dbj|BAC26379.1|")
            self.assertEqual(hsp.target.name, "BAC26379")
            self.assertEqual(
                hsp.target.description, "unnamed protein product [Mus musculus]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTEEELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRS QRGNQSWRAVSRTNPNSGDFRFSLEINVNRN+GSQTSENESEPSTRRLSVENMESSSQRQMENSASESASARPSRAERNS EAVTEVPTTRAQRRARSRSPEHRRTRARAERS SPLQPTSEIPRRAPTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNSESSGSGQRPPTIVLDLQVR VRPGEYRQRDSIASRTRSRSQAPNNTVTYESERGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSEPSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSS+MFEGSSEGGSSGPSR+DGRHRAPVTFDESGSLPF SLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGENDALKTCSVCITEYTEG+KLRKLPCSHE+HVHCIDRWLSENSTCPICRRAVLSSGNRESVV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|263252         0 MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3                 0 MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTE

gi|263252        60 EELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSGQRGNQS
                 60 |||||||||||||||||||||||||||||||||||||||||||||||||||||.||||||
3                60 EELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSRQRGNQS

gi|263252       120 WRAVSRTNPNSGDFRFSLEINVNRNSGSQTSENESEPSTRRLSVENMESSSQRQMENSAS
                120 |||||||||||||||||||||||||.||||||||||||||||||||||||||||||||||
3               120 WRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSAS

gi|263252       180 ESASARPSRAERNSAEAVTEVPTTRAQRRARSRSPEHRRTRARAERSRSPLQPTSEIPRR
                180 ||||||||||||||.||||||||||||||||||||||||||||||||.||||||||||||
3               180 ESASARPSRAERNSTEAVTEVPTTRAQRRARSRSPEHRRTRARAERSMSPLQPTSEIPRR

gi|263252       240 APTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNS
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               240 APTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNS

gi|263252       300 ESSGSGQRPPTIVLDLQVRGVRPGEYRQRDSIASRTRSRSQAPNNTVTYESERGGFRRTF
                300 |||||||||||||||||||.||||||||||||||||||||||||||||||||||||||||
3               300 ESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESERGGFRRTF

gi|263252       360 SRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSE
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               360 SRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSE

gi|263252       420 PSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSEMFEGSSEGGS
                420 |||||||||||||||||||||||||||||||||||||||||||||||||.||||||||||
3               420 PSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSKMFEGSSEGGS

gi|263252       480 SGPSRRDGRHRAPVTFDESGSLPFLSLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGEN
                480 |||||.||||||||||||||||||.|||||||||||||||||||||||||||||||||||
3               480 SGPSRKDGRHRAPVTFDESGSLPFFSLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGEN

gi|263252       540 DALKTCSVCITEYTEGNKLRKLPCSHEYHVHCIDRWLSENSTCPICRRAVLSSGNRESVV
                540 ||||||||||||||||.||||||||||.||||||||||||||||||||||||||||||||
3               540 DALKTCSVCITEYTEGDKLRKLPCSHEFHVHCIDRWLSENSTCPICRRAVLSSGNRESVV

gi|263252       600 
                600 
3               600 
""",
            )
            hit = hits[4]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|67846064|ref|NP_001020063.1|")
            self.assertEqual(hit.target.name, "NP_001020063")
            self.assertEqual(
                hit.target.description,
                "ring finger protein, LIM domain interacting [Rattus norvegicus] >gi|66910661|gb|AAH97491.1| Ring finger protein 12 [Rattus norvegicus] >gi|149055585|gb|EDM07169.1| ring finger protein 12, isoform CRA_b [Rattus norvegicus]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=603)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2644.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 1023.07591100553)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 561)
            self.assertEqual(hsp.annotations["positive"], 575)
            self.assertEqual(hsp.annotations["gaps"], 9)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 198, 198, 240, 246, 447, 447, 603],
                          [  0, 198, 199, 241, 241, 442, 444, 600]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 600)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 603)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 606))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.query.id, "3")
            self.assertEqual(
                hsp.query.description,
                "gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.target.id, "gi|67846064|ref|NP_001020063.1|")
            self.assertEqual(hsp.target.name, "NP_001020063")
            self.assertEqual(
                hsp.target.description,
                "ring finger protein, LIM domain interacting [Rattus norvegicus] >gi|66910661|gb|AAH97491.1| Ring finger protein 12 [Rattus norvegicus] >gi|149055585|gb|EDM07169.1| ring finger protein 12, isoform CRA_b [Rattus norvegicus]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTEEELLRRLQQIKEGPPPQS DENRAGESSDDV+NSDSIIDWLNSVRQ+GNTTRS QRGNQSWRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENE+EPSTRRLSVE+MESSSQRQME+ ASES SARPSRAERNSTEA+ EVP TR QRRARSRSPEHRRTRARAERS SPL PT EIPRRA       TLEQ  ENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSSDTGSNSESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQ PNNTVTYESERGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSEPSASVSSRN ER ESRNGRGSS  G  + S+SSSSPSPSS+GESSESSS +FEG+SEGG SGPSR+DGRHRAPV FDESGSLPF SLAQFFLLNEDDEDQPRGLTKEQIDNLAMRSFGENDALKTCSVCITEYTEG+KLRKLPCSHE+HVHCIDRWLSENSTCPICRRAVLSSGNRESVV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|678460         0 MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3                 0 MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTE

gi|678460        60 EELLRRLQQIKEGPPPQSSDENRAGESSDDVSNSDSIIDWLNSVRQSGNTTRSGQRGNQS
                 60 ||||||||||||||||||.||||||||||||.||||||||||||||.||||||.||||||
3                60 EELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSRQRGNQS

gi|678460       120 WRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENENEPSTRRLSVESMESSSQRQMESHAS
                120 ||||||||||||||||||||||||||||||||||.||||||||||.||||||||||..||
3               120 WRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSAS

gi|678460       180 ESTSARPSRAERNSTEAL-EVPLTRGQRRARSRSPEHRRTRARAERSRSPLHPTIEIPRR
                180 ||.||||||||||||||.-|||.||.|||||||||||||||||||||.|||.||.|||||
3               180 ESASARPSRAERNSTEAVTEVPTTRAQRRARSRSPEHRRTRARAERSMSPLQPTSEIPRR

gi|678460       239 AHHNISPQTLEQPLENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSS
                240 |------.||||..||||||||||||||||||||||||||||||||||||||||||||||
3               240 A------PTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSSS

gi|678460       299 DTGSNSESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQTPNNTVTYESERG
                300 |||||||||||||||||||||||||||||||||||||||||||||||.||||||||||||
3               294 DTGSNSESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESERG

gi|678460       359 GFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMY
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               354 GFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMY

gi|678460       419 SDSDSEPSASVSSRNTERAESRNGRGSS--GAGNSSASSSSPSPSSNGESSESSSDLFEG
                420 |||||||||||||||.||.|||||||||--|....|.|||||||||.||||||||..|||
3               414 SDSDSEPSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSKMFEG

gi|678460       477 TSEGGPSGPSRRDGRHRAPVAFDESGSLPFLSLAQFFLLNEDDEDQPRGLTKEQIDNLAM
                480 .||||.|||||.||||||||.|||||||||.|||||||||||||||||||||||||||||
3               474 SSEGGSSGPSRKDGRHRAPVTFDESGSLPFFSLAQFFLLNEDDEDQPRGLTKEQIDNLAM

gi|678460       537 RSFGENDALKTCSVCITEYTEGNKLRKLPCSHEYHVHCIDRWLSENSTCPICRRAVLSSG
                540 ||||||||||||||||||||||.||||||||||.||||||||||||||||||||||||||
3               534 RSFGENDALKTCSVCITEYTEGDKLRKLPCSHEFHVHCIDRWLSENSTCPICRRAVLSSG

gi|678460       597 NRESVV 603
                600 |||||| 606
3               594 NRESVV 600
""",
            )
            hit = hits[5]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|74007742|ref|XP_849701.1|")
            self.assertEqual(hit.target.name, "XP_849701")
            self.assertEqual(
                hit.target.description,
                "PREDICTED: similar to ring finger protein 12 isoform 2 [Canis familiaris]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=599)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2497.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 966.451573345675)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 502)
            self.assertEqual(hsp.annotations["positive"], 526)
            self.assertEqual(hsp.annotations["gaps"], 17)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0,  11,  12, 200, 201, 243, 249, 478, 478, 599],
                          [  0,  11,  11, 199, 199, 241, 241, 470, 479, 600]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 600)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 599)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 608))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.query.id, "3")
            self.assertEqual(
                hsp.query.description,
                "gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MESSDSNDKGSGDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLG...SVV')",
            )
            self.assertEqual(hsp.target.id, "gi|74007742|ref|XP_849701.1|")
            self.assertEqual(hsp.target.name, "XP_849701")
            self.assertEqual(
                hsp.target.description,
                "PREDICTED: similar to ring finger protein 12 isoform 2 [Canis familiaris]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "ME+SDSNDKGS DQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTEEELLRRLQQIKEGPPPQ+ DENR G+SSDDV+N DSIIDWLNSVRQTGNTTRS QRGNQSWRAVSRTNPNSGDFRFSLEINVNRNNGSQ  ENE+EPS RR   EN ++SSQRQ+EN  SE  S RPSR+ERNSTEA+T EV  TR QRRARSRSP+HRRTRARAERS SPL P SEIPRR+       T E    NE EGSSRTRHHVTLRQQISGP+LL RGLFAASG+RN SQG  SSDT S+ ES+GSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQ PNNTVTYESERGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSEPS SVSSRNVER ESRNGRG S             P     G +  SSS           S  +R++GRHRAPVTFDESGSLPF SLAQFFLLNEDD+DQPRGLTKEQIDNLAMRSFGENDALKTCSVCITEYTEG+KLRKLPCSHE+HVHCIDRWLSENSTCPICRRAVL+SGNRESVV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|740077         0 MESSDSNDKGSGDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGEST
                  0 ||.||||||||-||||||||||||||||||||||||||||||||||||||||||||||||
3                 0 MENSDSNDKGS-DQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGEST

gi|740077        60 EEELLRRLQQIKEGPPPQNSDENRGGDSSDDVSNGDSIIDWLNSVRQTGNTTRSGQRGNQ
                 60 ||||||||||||||||||..||||.|.|||||.|.|||||||||||||||||||.|||||
3                59 EEELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSRQRGNQ

gi|740077       120 SWRAVSRTNPNSGDFRFSLEINVNRNNGSQNPENENEPSARRSGGENTDNSSQRQVENPR
                120 ||||||||||||||||||||||||||||||..|||.|||.||...||...|||||.||..
3               119 SWRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSA

gi|740077       180 SEPTSTRPSRSERNSTEALTGEVAPTRGQRRARSRSPDHRRTRARAERSRSPLHPMSEIP
                180 ||..|.||||.|||||||.|-||..||.|||||||||.|||||||||||.|||.|.||||
3               179 SESASARPSRAERNSTEAVT-EVPTTRAQRRARSRSPEHRRTRARAERSMSPLQPTSEIP

gi|740077       240 RRSHHSISSQTFEHPLVNETEGSSRTRHHVTLRQQISGPDLLSRGLFAASGTRNASQGAG
                240 ||.------.|.|....||.|||||||||||||||||||.||.||||||||.||.|||..
3               238 RRA------PTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTS

gi|740077       300 SSDTASSGESTGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQTPNNTVTYESE
                300 ||||.|..||.||||||||||||||||||||||||||||||||||||||.||||||||||
3               292 SSDTGSNSESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESE

gi|740077       360 RGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYF
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               352 RGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYF

gi|740077       420 MYSDSDSEPSGSVSSRNVERAESRNGRGGSVRVPVQAPVLVPVPVLVFEGSNEGSSSS--
                420 ||||||||||.|||||||||.|||||||.|.............|.....|....|||.--
3               412 MYSDSDSEPSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSKMF

gi|740077       478 -------GSSGARREGRHRAPVTFDESGSLPFLSLAQFFLLNEDDDDQPRGLTKEQIDNL
                480 -------.|...|..|||||||||||||||||.||||||||||||.||||||||||||||
3               472 EGSSEGGSSGPSRKDGRHRAPVTFDESGSLPFFSLAQFFLLNEDDEDQPRGLTKEQIDNL

gi|740077       531 AMRSFGENDALKTCSVCITEYTEGNKLRKLPCSHEYHVHCIDRWLSENSTCPICRRAVLA
                540 ||||||||||||||||||||||||.||||||||||.|||||||||||||||||||||||.
3               532 AMRSFGENDALKTCSVCITEYTEGDKLRKLPCSHEFHVHCIDRWLSENSTCPICRRAVLS

gi|740077       591 SGNRESVV 599
                600 |||||||| 608
3               592 SGNRESVV 600
""",
            )
            hit = hits[6]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|149757523|ref|XP_001505028.1|")
            self.assertEqual(hit.target.name, "XP_001505028")
            self.assertEqual(
                hit.target.description,
                "PREDICTED: similar to E3 ubiquitin-protein ligase RNF12 (RING finger protein 12) (LIM domain-interacting RING finger protein) (RING finger LIM domain-binding protein) (R-LIM) (Renal carcinoma antigen NY-REN-43) isoform 2 [Equus caballus] >gi|149757525|ref|XP_001505027.1| PREDICTED: similar to E3 ubiquitin-protein ligase RNF12 (RING finger protein 12) (LIM domain-interacting RING finger protein) (RING finger LIM domain-binding protein) (R-LIM) (Renal carcinoma antigen NY-REN-43) isoform 1 [Equus caballus]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=616)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2481.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 960.288380130997)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 517)
            self.assertEqual(hsp.annotations["positive"], 547)
            self.assertEqual(hsp.annotations["gaps"], 16)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0,  11,  12, 241, 247, 441, 447, 485, 488, 616],
                          [  0,  11,  11, 240, 240, 434, 434, 472, 472, 600]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 600)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 616)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 616))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.query.id, "3")
            self.assertEqual(
                hsp.query.description,
                "gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MESSDSNDKGSGDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLG...SVV')",
            )
            self.assertEqual(hsp.target.id, "gi|149757523|ref|XP_001505028.1|")
            self.assertEqual(hsp.target.name, "XP_001505028")
            self.assertEqual(
                hsp.target.description,
                "PREDICTED: similar to E3 ubiquitin-protein ligase RNF12 (RING finger protein 12) (LIM domain-interacting RING finger protein) (RING finger LIM domain-binding protein) (R-LIM) (Renal carcinoma antigen NY-REN-43) isoform 2 [Equus caballus] >gi|149757525|ref|XP_001505027.1| PREDICTED: similar to E3 ubiquitin-protein ligase RNF12 (RING finger protein 12) (LIM domain-interacting RING finger protein) (RING finger LIM domain-binding protein) (R-LIM) (Renal carcinoma antigen NY-REN-43) isoform 1 [Equus caballus]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "ME+SDSNDKGS DQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTEEELLRRLQQIKEGPPPQ+ DENR G+SSDDV+N DSIIDWLNSVRQTGNTTRS QRGNQSWRAVSRTNPNSGDFRFSLEINVNRNNGSQ  ENE+EPS RR S ENM+++SQRQ+EN+ SESA ARPSR+ERNSTEA+TEV  TR QRRARSRSP+HRRTRARAERS SPL P SEIPRR      + T E    NE EGSSRTRHHVTLRQQISGP+LL RGLFAASG+RN SQGT SSDT  + ES+GSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQ PNNTVTYESERGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSEP  SVSSRN+ER E         G  SSG  +SS SSSSSSPS SSSGESSE+SS++F      S    S  +R++GRHRAPVTFDESGSLPF SLAQFFLLNEDD+DQPRGLTKEQIDNLAMRSFGENDALKTCSVCITEYTEG+KLRKLPCSHE+HVHCIDRWLSENSTCPICRRAVL+SGNRESVV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|149757         0 MESSDSNDKGSGDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGEST
                  0 ||.||||||||-||||||||||||||||||||||||||||||||||||||||||||||||
3                 0 MENSDSNDKGS-DQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGEST

gi|149757        60 EEELLRRLQQIKEGPPPQNSDENRGGDSSDDVSNGDSIIDWLNSVRQTGNTTRSGQRGNQ
                 60 ||||||||||||||||||..||||.|.|||||.|.|||||||||||||||||||.|||||
3                59 EEELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSRQRGNQ

gi|149757       120 SWRAVSRTNPNSGDFRFSLEINVNRNNGSQNPENENEPSARRSSGENMDNNSQRQVENAQ
                120 ||||||||||||||||||||||||||||||..|||.|||.||.|.|||...||||.||..
3               119 SWRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSA

gi|149757       180 SESAPARPSRSERNSTEALTEVAPTRGQRRARSRSPDHRRTRARAERSRSPLHPMSEIPR
                180 ||||.|||||.|||||||.|||..||.|||||||||.|||||||||||.|||.|.|||||
3               179 SESASARPSRAERNSTEAVTEVPTTRAQRRARSRSPEHRRTRARAERSMSPLQPTSEIPR

gi|149757       240 RSHHSISSQTFEHPLVNETEGSSRTRHHVTLRQQISGPDLLSRGLFAASGTRNASQGTGS
                240 |------..|.|....||.|||||||||||||||||||.||.||||||||.||.||||.|
3               239 R------APTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTSS

gi|149757       300 SDTAGSGESTGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQTPNNTVTYESER
                300 |||....||.||||||||||||||||||||||||||||||||||||||.|||||||||||
3               293 SDTGSNSESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESER

gi|149757       360 GGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFM
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               353 GGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFM

gi|149757       420 YSDSDSEPGGSVSSRNMERAESRNGRGGSGGGSSSGSSSSSNSSSSSSPSSSSSGESSET
                420 ||||||||..||||||.||.|------...|..|||...||.||||||||.||||||||.
3               413 YSDSDSEPSASVSSRNVERVE------SRNGRGSSGGGNSSGSSSSSSPSPSSSGESSES

gi|149757       480 SSEVFEGSNEGSSSSGSAGARREGRHRAPVTFDESGSLPFLSLAQFFLLNEDDDDQPRGL
                480 ||..|---...|....|...|..|||||||||||||||||.||||||||||||.||||||
3               467 SSKMF---EGSSEGGSSGPSRKDGRHRAPVTFDESGSLPFFSLAQFFLLNEDDEDQPRGL

gi|149757       540 TKEQIDNLAMRSFGENDALKTCSVCITEYTEGNKLRKLPCSHEYHVHCIDRWLSENSTCP
                540 ||||||||||||||||||||||||||||||||.||||||||||.||||||||||||||||
3               524 TKEQIDNLAMRSFGENDALKTCSVCITEYTEGDKLRKLPCSHEFHVHCIDRWLSENSTCP

gi|149757       600 ICRRAVLASGNRESVV 616
                600 |||||||.|||||||| 616
3               584 ICRRAVLSSGNRESVV 600
""",
            )
            hit = hits[7]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|74007736|ref|XP_859444.1|")
            self.assertEqual(hit.target.name, "XP_859444")
            self.assertEqual(
                hit.target.description,
                "PREDICTED: similar to ring finger protein 12 isoform 3 [Canis familiaris]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=605)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2480.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 959.90318055508)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 502)
            self.assertEqual(hsp.annotations["positive"], 526)
            self.assertEqual(hsp.annotations["gaps"], 23)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0,  11,  12,  85,  91, 206, 207, 249, 255, 484, 484, 605],
                          [  0,  11,  11,  84,  84, 199, 199, 241, 241, 470, 479, 600]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 600)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 605)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 614))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.query.id, "3")
            self.assertEqual(
                hsp.query.description,
                "gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MESSDSNDKGSGDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLG...SVV')",
            )
            self.assertEqual(hsp.target.id, "gi|74007736|ref|XP_859444.1|")
            self.assertEqual(hsp.target.name, "XP_859444")
            self.assertEqual(
                hsp.target.description,
                "PREDICTED: similar to ring finger protein 12 isoform 3 [Canis familiaris]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "ME+SDSNDKGS DQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTEEELLRRLQQIKEGPPPQ+ DENR       G+SSDDV+N DSIIDWLNSVRQTGNTTRS QRGNQSWRAVSRTNPNSGDFRFSLEINVNRNNGSQ  ENE+EPS RR   EN ++SSQRQ+EN  SE  S RPSR+ERNSTEA+T EV  TR QRRARSRSP+HRRTRARAERS SPL P SEIPRR+       T E    NE EGSSRTRHHVTLRQQISGP+LL RGLFAASG+RN SQG  SSDT S+ ES+GSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQ PNNTVTYESERGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSEPS SVSSRNVER ESRNGRG S             P     G +  SSS           S  +R++GRHRAPVTFDESGSLPF SLAQFFLLNEDD+DQPRGLTKEQIDNLAMRSFGENDALKTCSVCITEYTEG+KLRKLPCSHE+HVHCIDRWLSENSTCPICRRAVL+SGNRESVV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|740077         0 MESSDSNDKGSGDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGEST
                  0 ||.||||||||-||||||||||||||||||||||||||||||||||||||||||||||||
3                 0 MENSDSNDKGS-DQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGEST

gi|740077        60 EEELLRRLQQIKEGPPPQNSDENRGANCSFGGDSSDDVSNGDSIIDWLNSVRQTGNTTRS
                 60 ||||||||||||||||||..||||.------|.|||||.|.|||||||||||||||||||
3                59 EEELLRRLQQIKEGPPPQSPDENRA------GESSDDVTNSDSIIDWLNSVRQTGNTTRS

gi|740077       120 GQRGNQSWRAVSRTNPNSGDFRFSLEINVNRNNGSQNPENENEPSARRSGGENTDNSSQR
                120 .|||||||||||||||||||||||||||||||||||..|||.|||.||...||...||||
3               113 RQRGNQSWRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQR

gi|740077       180 QVENPRSEPTSTRPSRSERNSTEALTGEVAPTRGQRRARSRSPDHRRTRARAERSRSPLH
                180 |.||..||..|.||||.|||||||.|-||..||.|||||||||.|||||||||||.|||.
3               173 QMENSASESASARPSRAERNSTEAVT-EVPTTRAQRRARSRSPEHRRTRARAERSMSPLQ

gi|740077       240 PMSEIPRRSHHSISSQTFEHPLVNETEGSSRTRHHVTLRQQISGPDLLSRGLFAASGTRN
                240 |.||||||.------.|.|....||.|||||||||||||||||||.||.||||||||.||
3               232 PTSEIPRRA------PTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRN

gi|740077       300 ASQGAGSSDTASSGESTGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQTPNNT
                300 .|||..||||.|..||.||||||||||||||||||||||||||||||||||||||.||||
3               286 PSQGTSSSDTGSNSESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNT

gi|740077       360 VTYESERGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGF
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               346 VTYESERGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGF

gi|740077       420 GELSYFMYSDSDSEPSGSVSSRNVERAESRNGRGGSVRVPVQAPVLVPVPVLVFEGSNEG
                420 ||||||||||||||||.|||||||||.|||||||.|.............|.....|....
3               406 GELSYFMYSDSDSEPSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSE

gi|740077       480 SSSS---------GSSGARREGRHRAPVTFDESGSLPFLSLAQFFLLNEDDDDQPRGLTK
                480 |||.---------.|...|..|||||||||||||||||.||||||||||||.||||||||
3               466 SSSKMFEGSSEGGSSGPSRKDGRHRAPVTFDESGSLPFFSLAQFFLLNEDDEDQPRGLTK

gi|740077       531 EQIDNLAMRSFGENDALKTCSVCITEYTEGNKLRKLPCSHEYHVHCIDRWLSENSTCPIC
                540 ||||||||||||||||||||||||||||||.||||||||||.||||||||||||||||||
3               526 EQIDNLAMRSFGENDALKTCSVCITEYTEGDKLRKLPCSHEFHVHCIDRWLSENSTCPIC

gi|740077       591 RRAVLASGNRESVV 605
                600 |||||.|||||||| 614
3               586 RRAVLSSGNRESVV 600
""",
            )
            hit = hits[8]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|76659189|ref|XP_589983.2|")
            self.assertEqual(hit.target.name, "XP_589983")
            self.assertEqual(
                hit.target.description,
                "PREDICTED: similar to E3 ubiquitin-protein ligase RNF12 (RING finger protein 12) (LIM domain-interacting RING finger protein) (RING finger LIM domain-binding protein) (R-LIM) (Renal carcinoma antigen NY-REN-43) isoform 1 [Bos taurus] >gi|119920248|ref|XP_001251830.1| PREDICTED: similar to E3 ubiquitin-protein ligase RNF12 (RING finger protein 12) (LIM domain-interacting RING finger protein) (RING finger LIM domain-binding protein) (R-LIM) (Renal carcinoma antigen NY-REN-43) [Bos taurus]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=611)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2473.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 957.206783523659)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 519)
            self.assertEqual(hsp.annotations["positive"], 550)
            self.assertEqual(hsp.annotations["gaps"], 11)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0,  11,  12, 200, 201, 243, 249, 480, 483, 611],
                          [  0,  11,  11, 199, 199, 241, 241, 472, 472, 600]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 600)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 611)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 611))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.query.id, "3")
            self.assertEqual(
                hsp.query.description,
                "gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MESSDCNDKGSGDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLG...SIV')",
            )
            self.assertEqual(hsp.target.id, "gi|76659189|ref|XP_589983.2|")
            self.assertEqual(hsp.target.name, "XP_589983")
            self.assertEqual(
                hsp.target.description,
                "PREDICTED: similar to E3 ubiquitin-protein ligase RNF12 (RING finger protein 12) (LIM domain-interacting RING finger protein) (RING finger LIM domain-binding protein) (R-LIM) (Renal carcinoma antigen NY-REN-43) isoform 1 [Bos taurus] >gi|119920248|ref|XP_001251830.1| PREDICTED: similar to E3 ubiquitin-protein ligase RNF12 (RING finger protein 12) (LIM domain-interacting RING finger protein) (RING finger LIM domain-binding protein) (R-LIM) (Renal carcinoma antigen NY-REN-43) [Bos taurus]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "ME+SD NDKGS DQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTEEELLRRLQQIKEGPPPQ+ DENR G+SSDDV+N DSIIDWLNSVRQTGNTTRS QRGNQSWRAVSRTNPNSGDFRFSLEINVNRNNGSQ  ENE+EPS RR S E+M+++SQRQMEN  SE+ SARP R+ERNSTEA+T E P TR QRRARSRSP+HRRTRARAERS SPL P SEIPRR+       T E    NE EGSSRTRHHVTLRQQISGP+LL RGLFAASG+RN SQG  SSDT  N ES+GSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQ PNNTVTYESERGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSEPS SVSSRN+ER ESRNGRG SGG +SSGSSSSSSPS SS+GESSE+SS++F      S    S  +R++GRHRAPVTFDESGSLPF SLAQFFLLNEDD+DQPRGLTKEQIDNLAMRSFGENDALKTCSVCITEYTEG+KLRKLPCSHE+HVHCIDRWLSENSTCPICRRAVL+SGNRES+V",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|766591         0 MESSDCNDKGSGDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGEST
                  0 ||.||.|||||-||||||||||||||||||||||||||||||||||||||||||||||||
3                 0 MENSDSNDKGS-DQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGEST

gi|766591        60 EEELLRRLQQIKEGPPPQNSDENRGGDSSDDVSNGDSIIDWLNSVRQTGNTTRSGQRGNQ
                 60 ||||||||||||||||||..||||.|.|||||.|.|||||||||||||||||||.|||||
3                59 EEELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSRQRGNQ

gi|766591       120 SWRAVSRTNPNSGDFRFSLEINVNRNNGSQNPENENEPSARRSSGESMDNNSQRQMENPR
                120 ||||||||||||||||||||||||||||||..|||.|||.||.|.|.|...|||||||..
3               119 SWRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSA

gi|766591       180 SETTSARPPRSERNSTEALTGEAPPTRGQRRARSRSPDHRRTRARAERSRSPLHPMSEIP
                180 ||..||||.|.|||||||.|-|.|.||.|||||||||.|||||||||||.|||.|.||||
3               179 SESASARPSRAERNSTEAVT-EVPTTRAQRRARSRSPEHRRTRARAERSMSPLQPTSEIP

gi|766591       240 RRSHHSISSQTFEHPLVNETEGSSRTRHHVTLRQQISGPDLLTRGLFAASGTRNASQGAG
                240 ||.------.|.|....||.|||||||||||||||||||.||.||||||||.||.|||..
3               238 RRA------PTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTS

gi|766591       300 SSDTTGNGESTGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQTPNNTVTYESE
                300 ||||..|.||.||||||||||||||||||||||||||||||||||||||.||||||||||
3               292 SSDTGSNSESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESE

gi|766591       360 RGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYF
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               352 RGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYF

gi|766591       420 MYSDSDSEPSGSVSSRNMERSESRNGRGGSGGSSSSGSSSSSSPSSSSNGESSETSSEVF
                420 ||||||||||.||||||.||.|||||||.|||..|||||||||||.||.|||||.||..|
3               412 MYSDSDSEPSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSKMF

gi|766591       480 EGSNEGSSSSGSSGARREGRHRAPVTFDESGSLPFLSLAQFFLLNEDDDDQPRGLTKEQI
                480 ---...|....|...|..|||||||||||||||||.||||||||||||.|||||||||||
3               472 ---EGSSEGGSSGPSRKDGRHRAPVTFDESGSLPFFSLAQFFLLNEDDEDQPRGLTKEQI

gi|766591       540 DNLAMRSFGENDALKTCSVCITEYTEGNKLRKLPCSHEYHVHCIDRWLSENSTCPICRRA
                540 |||||||||||||||||||||||||||.||||||||||.|||||||||||||||||||||
3               529 DNLAMRSFGENDALKTCSVCITEYTEGDKLRKLPCSHEFHVHCIDRWLSENSTCPICRRA

gi|766591       600 VLASGNRESIV 611
                600 ||.||||||.| 611
3               589 VLSSGNRESVV 600
""",
            )
            hit = hits[9]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|74007740|ref|XP_859515.1|")
            self.assertEqual(hit.target.name, "XP_859515")
            self.assertEqual(
                hit.target.description,
                "PREDICTED: similar to ring finger protein 12 isoform 5 [Canis familiaris]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=594)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2464.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 953.739987340402)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 497)
            self.assertEqual(hsp.annotations["positive"], 523)
            self.assertEqual(hsp.annotations["gaps"], 22)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0,  11,  12, 200, 201, 243, 249, 443, 443, 594],
                          [  0,  11,  11, 199, 199, 241, 241, 435, 449, 600]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 600)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 594)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 608))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MENSDSNDKGSDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGT...SVV')",
            )
            self.assertEqual(hsp.query.id, "3")
            self.assertEqual(
                hsp.query.description,
                "gi|4959044|gb|AAD34209.1|AF069992_1 LIM domain interacting RING finger protein",
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MESSDSNDKGSGDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLG...SVV')",
            )
            self.assertEqual(hsp.target.id, "gi|74007740|ref|XP_859515.1|")
            self.assertEqual(hsp.target.name, "XP_859515")
            self.assertEqual(
                hsp.target.description,
                "PREDICTED: similar to ring finger protein 12 isoform 5 [Canis familiaris]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "ME+SDSNDKGS DQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGESTEEELLRRLQQIKEGPPPQ+ DENR G+SSDDV+N DSIIDWLNSVRQTGNTTRS QRGNQSWRAVSRTNPNSGDFRFSLEINVNRNNGSQ  ENE+EPS RR   EN ++SSQRQ+EN  SE  S RPSR+ERNSTEA+T EV  TR QRRARSRSP+HRRTRARAERS SPL P SEIPRR+       T E    NE EGSSRTRHHVTLRQQISGP+LL RGLFAASG+RN SQG  SSDT S+ ES+GSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQ PNNTVTYESERGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYFMYSDSDSEPS SVSSRNVER ES               +       SSS E+S    +     S    S  +R++GRHRAPVTFDESGSLPF SLAQFFLLNEDD+DQPRGLTKEQIDNLAMRSFGENDALKTCSVCITEYTEG+KLRKLPCSHE+HVHCIDRWLSENSTCPICRRAVL+SGNRESVV",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|740077         0 MESSDSNDKGSGDQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGEST
                  0 ||.||||||||-||||||||||||||||||||||||||||||||||||||||||||||||
3                 0 MENSDSNDKGS-DQSAAQRRSQMDRLDREEAFYQFVNNLSEEDYRLMRDNNLLGTPGEST

gi|740077        60 EEELLRRLQQIKEGPPPQNSDENRGGDSSDDVSNGDSIIDWLNSVRQTGNTTRSGQRGNQ
                 60 ||||||||||||||||||..||||.|.|||||.|.|||||||||||||||||||.|||||
3                59 EEELLRRLQQIKEGPPPQSPDENRAGESSDDVTNSDSIIDWLNSVRQTGNTTRSRQRGNQ

gi|740077       120 SWRAVSRTNPNSGDFRFSLEINVNRNNGSQNPENENEPSARRSGGENTDNSSQRQVENPR
                120 ||||||||||||||||||||||||||||||..|||.|||.||...||...|||||.||..
3               119 SWRAVSRTNPNSGDFRFSLEINVNRNNGSQTSENESEPSTRRLSVENMESSSQRQMENSA

gi|740077       180 SEPTSTRPSRSERNSTEALTGEVAPTRGQRRARSRSPDHRRTRARAERSRSPLHPMSEIP
                180 ||..|.||||.|||||||.|-||..||.|||||||||.|||||||||||.|||.|.||||
3               179 SESASARPSRAERNSTEAVT-EVPTTRAQRRARSRSPEHRRTRARAERSMSPLQPTSEIP

gi|740077       240 RRSHHSISSQTFEHPLVNETEGSSRTRHHVTLRQQISGPDLLSRGLFAASGTRNASQGAG
                240 ||.------.|.|....||.|||||||||||||||||||.||.||||||||.||.|||..
3               238 RRA------PTLEQSSENEPEGSSRTRHHVTLRQQISGPELLGRGLFAASGSRNPSQGTS

gi|740077       300 SSDTASSGESTGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQTPNNTVTYESE
                300 ||||.|..||.||||||||||||||||||||||||||||||||||||||.||||||||||
3               292 SSDTGSNSESSGSGQRPPTIVLDLQVRRVRPGEYRQRDSIASRTRSRSQAPNNTVTYESE

gi|740077       360 RGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYF
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
3               352 RGGFRRTFSRSERAGVRTYVSTIRIPIRRILNTGLSETTSVAIQTMLRQIMTGFGELSYF

gi|740077       420 MYSDSDSEPSGSVSSRNVERAES--------------RNGRGGSGGSSSSETSSEVFEGS
                420 ||||||||||.|||||||||.||--------------.........|||.|.|.......
3               412 MYSDSDSEPSASVSSRNVERVESRNGRGSSGGGNSSGSSSSSSPSPSSSGESSESSSKMF

gi|740077       466 NEGSSSSGSSGARREGRHRAPVTFDESGSLPFLSLAQFFLLNEDDDDQPRGLTKEQIDNL
                480 ...|....|...|..|||||||||||||||||.||||||||||||.||||||||||||||
3               472 EGSSEGGSSGPSRKDGRHRAPVTFDESGSLPFFSLAQFFLLNEDDEDQPRGLTKEQIDNL

gi|740077       526 AMRSFGENDALKTCSVCITEYTEGNKLRKLPCSHEYHVHCIDRWLSENSTCPICRRAVLA
                540 ||||||||||||||||||||||||.||||||||||.|||||||||||||||||||||||.
3               532 AMRSFGENDALKTCSVCITEYTEGDKLRKLPCSHEFHVHCIDRWLSENSTCPICRRAVLS

gi|740077       586 SGNRESVV 594
                600 |||||||| 608
3               592 SGNRESVV 600
""",
            )
            record = next(records)
            self.assertEqual(record.num, 4)
            self.assertIsInstance(record.query, SeqRecord)
            self.assertEqual(record.query.id, "4")
            self.assertEqual(
                record.query.description,
                "gi|671626|emb|CAA85685.1| rubisco large subunit",
            )
            self.assertEqual(repr(record.query.seq), "Seq(None, length=473)")
            self.assertEqual(len(record.stat), 7)
            self.assertEqual(record.stat["db-num"], 8994603)
            self.assertEqual(record.stat["db-len"], -1216159329)
            self.assertEqual(record.stat["hsp-len"], 0)
            self.assertAlmostEqual(record.stat["eff-space"], 605914661151.0)
            self.assertAlmostEqual(record.stat["kappa"], 0.041)
            self.assertAlmostEqual(record.stat["lambda"], 0.267)
            self.assertAlmostEqual(record.stat["entropy"], 0.14)
            hits = record.hits
            self.assertEqual(len(hits), 10)
            hit = hits[0]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|671626|emb|CAA85685.1|")
            self.assertEqual(hit.target.name, "CAA85685")
            self.assertEqual(
                hit.target.description, "rubisco large subunit [Rosmarinus officinalis]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=473)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2543.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 984.170753837873)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 473)
            self.assertEqual(hsp.annotations["positive"], 473)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 473],
                          [  0, 473]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 473)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 473)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 473))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description, "gi|671626|emb|CAA85685.1| rubisco large subunit"
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.target.id, "gi|671626|emb|CAA85685.1|")
            self.assertEqual(hsp.target.name, "CAA85685")
            self.assertEqual(
                hsp.target.description, "rubisco large subunit [Rosmarinus officinalis]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAESSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQCICYVAYPLDLFEEGSVTNMFTSIVGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGLSAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYLNATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAVIDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSRGIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVANRVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|671626         0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4                 0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE

gi|671626        60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQCICYVAYPLDLFEEGSVTNMFTSI
                 60 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4                60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQCICYVAYPLDLFEEGSVTNMFTSI

gi|671626       120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL

gi|671626       180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL
                180 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL

gi|671626       240 NATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               240 NATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV

gi|671626       300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR

gi|671626       360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN

gi|671626       420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
                420 ||||||||||||||||||||||||||||||||||||||||||||||||||||| 473
4               420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
""",
            )
            hit = hits[1]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|671654|emb|CAA85698.1|")
            self.assertEqual(hit.target.name, "CAA85698")
            self.assertEqual(
                hit.target.description,
                "rubisco large subunit [Salvia sclarea] >gi|1419246|emb|CAA85693.1| rubisco large subunit [Salvia indica] >gi|1480421|emb|CAA85719.1| rubisco large subunit [Thymus vulgaris] >gi|1480423|emb|CAA85720.1| rubisco large subunit [Thymus vulgaris]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=473)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2530.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 979.163159350948)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 471)
            self.assertEqual(hsp.annotations["positive"], 472)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 473],
                          [  0, 473]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 473)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 473)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 473))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description, "gi|671626|emb|CAA85685.1| rubisco large subunit"
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.target.id, "gi|671654|emb|CAA85698.1|")
            self.assertEqual(hsp.target.name, "CAA85698")
            self.assertEqual(
                hsp.target.description,
                "rubisco large subunit [Salvia sclarea] >gi|1419246|emb|CAA85693.1| rubisco large subunit [Salvia indica] >gi|1480421|emb|CAA85719.1| rubisco large subunit [Thymus vulgaris] >gi|1480423|emb|CAA85720.1| rubisco large subunit [Thymus vulgaris]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAESSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQ ICYVAYPLDLFEEGSVTNMFTSIVGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGLSAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYLNATAGTCEEM+KRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAVIDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSRGIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVANRVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|671654         0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4                 0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE

gi|671654        60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQYICYVAYPLDLFEEGSVTNMFTSI
                 60 ||||||||||||||||||||||||||||||||||||.|||||||||||||||||||||||
4                60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQCICYVAYPLDLFEEGSVTNMFTSI

gi|671654       120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL

gi|671654       180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL
                180 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL

gi|671654       240 NATAGTCEEMMKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV
                240 ||||||||||.|||||||||||||||||||||||||||||||||||||||||||||||||
4               240 NATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV

gi|671654       300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR

gi|671654       360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN

gi|671654       420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
                420 ||||||||||||||||||||||||||||||||||||||||||||||||||||| 473
4               420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
""",
            )
            hit = hits[2]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|671568|emb|CAA85667.1|")
            self.assertEqual(hit.target.name, "CAA85667")
            self.assertEqual(
                hit.target.description, "rubisco large subunit [Mentha suaveolens]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=473)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2528.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 978.392760199113)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 470)
            self.assertEqual(hsp.annotations["positive"], 472)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 473],
                          [  0, 473]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 473)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 473)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 473))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description, "gi|671626|emb|CAA85685.1| rubisco large subunit"
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.target.id, "gi|671568|emb|CAA85667.1|")
            self.assertEqual(hsp.target.name, "CAA85667")
            self.assertEqual(
                hsp.target.description, "rubisco large subunit [Mentha suaveolens]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAESSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQ ICYVAYPLDLFEEGSVTNMFTSIVGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGLSAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYK+QAETGEIKGHYLNATAGTCEEM+KRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAVIDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSRGIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVANRVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|671568         0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4                 0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE

gi|671568        60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQYICYVAYPLDLFEEGSVTNMFTSI
                 60 ||||||||||||||||||||||||||||||||||||.|||||||||||||||||||||||
4                60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQCICYVAYPLDLFEEGSVTNMFTSI

gi|671568       120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL

gi|671568       180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKSQAETGEIKGHYL
                180 |||||||||||||||||||||||||||||||||||||||||||||||.||||||||||||
4               180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL

gi|671568       240 NATAGTCEEMMKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV
                240 ||||||||||.|||||||||||||||||||||||||||||||||||||||||||||||||
4               240 NATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV

gi|671568       300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR

gi|671568       360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN

gi|671568       420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
                420 ||||||||||||||||||||||||||||||||||||||||||||||||||||| 473
4               420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
""",
            )
            hit = hits[3]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|1419217|emb|CAA85688.1|")
            self.assertEqual(hit.target.name, "CAA85688")
            self.assertEqual(
                hit.target.description,
                "rubisco large subunit [Salvia bucharica] >gi|1419237|emb|CAA85689.1| rubisco large subunit [Salvia canariensis]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=473)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2528.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 978.392760199113)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 470)
            self.assertEqual(hsp.annotations["positive"], 472)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 473],
                          [  0, 473]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 473)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 473)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 473))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description, "gi|671626|emb|CAA85685.1| rubisco large subunit"
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.target.id, "gi|1419217|emb|CAA85688.1|")
            self.assertEqual(hsp.target.name, "CAA85688")
            self.assertEqual(
                hsp.target.description,
                "rubisco large subunit [Salvia bucharica] >gi|1419237|emb|CAA85689.1| rubisco large subunit [Salvia canariensis]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAESSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQ ICYVAYPLDLFEEGSVTNMFTSIVGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGLSAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYLNATAGTCEEM+KRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAVIDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDF+EKDRSRGIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVANRVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|141921         0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4                 0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE

gi|141921        60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQYICYVAYPLDLFEEGSVTNMFTSI
                 60 ||||||||||||||||||||||||||||||||||||.|||||||||||||||||||||||
4                60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQCICYVAYPLDLFEEGSVTNMFTSI

gi|141921       120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL

gi|141921       180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL
                180 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL

gi|141921       240 NATAGTCEEMMKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV
                240 ||||||||||.|||||||||||||||||||||||||||||||||||||||||||||||||
4               240 NATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV

gi|141921       300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFVEKDRSR
                300 |||||||||||||||||||||||||||||||||||||||||||||||||||||.||||||
4               300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR

gi|141921       360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN

gi|141921       420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
                420 ||||||||||||||||||||||||||||||||||||||||||||||||||||| 473
4               420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
""",
            )
            hit = hits[4]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|671558|emb|CAA85670.1|")
            self.assertEqual(hit.target.name, "CAA85670")
            self.assertEqual(
                hit.target.description, "rubisco large subunit [Monarda menthaefolia]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=473)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2528.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 978.392760199113)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 470)
            self.assertEqual(hsp.annotations["positive"], 472)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 473],
                          [  0, 473]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 473)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 473)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 473))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description, "gi|671626|emb|CAA85685.1| rubisco large subunit"
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPQYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.target.id, "gi|671558|emb|CAA85670.1|")
            self.assertEqual(hsp.target.name, "CAA85670")
            self.assertEqual(
                hsp.target.description, "rubisco large subunit [Monarda menthaefolia]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MSPQTETKASVGFKAGVKEYKLTYYTP+YETKDTDILAAFRVTPQPGVPPEEAGAAVAAESSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQ ICYVAYPLDLFEEGSVTNMFTSIVGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGLSAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYK+QAETGEIKGHYLNATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAVIDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSRGIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVANRVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|671558         0 MSPQTETKASVGFKAGVKEYKLTYYTPQYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE
                  0 |||||||||||||||||||||||||||.||||||||||||||||||||||||||||||||
4                 0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE

gi|671558        60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQYICYVAYPLDLFEEGSVTNMFTSI
                 60 ||||||||||||||||||||||||||||||||||||.|||||||||||||||||||||||
4                60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQCICYVAYPLDLFEEGSVTNMFTSI

gi|671558       120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL

gi|671558       180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKSQAETGEIKGHYL
                180 |||||||||||||||||||||||||||||||||||||||||||||||.||||||||||||
4               180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL

gi|671558       240 NATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV
                240 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               240 NATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV

gi|671558       300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR

gi|671558       360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN

gi|671558       420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
                420 ||||||||||||||||||||||||||||||||||||||||||||||||||||| 473
4               420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
""",
            )
            hit = hits[5]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|1419213|emb|CAA85687.1|")
            self.assertEqual(hit.target.name, "CAA85687")
            self.assertEqual(
                hit.target.description, "rubisco large subunit [Salvia argentea]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=473)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2525.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 977.237161471361)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 470)
            self.assertEqual(hsp.annotations["positive"], 471)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 473],
                          [  0, 473]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 473)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 473)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 473))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description, "gi|671626|emb|CAA85685.1| rubisco large subunit"
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.target.id, "gi|1419213|emb|CAA85687.1|")
            self.assertEqual(hsp.target.name, "CAA85687")
            self.assertEqual(
                hsp.target.description, "rubisco large subunit [Salvia argentea]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAESSTGTWTTVWTDGLTSLDRYKGRCYHIEPV GEKDQ ICYVAYPLDLFEEGSVTNMFTSIVGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGLSAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYLNATAGTCEEM+KRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAVIDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSRGIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVANRVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|141921         0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4                 0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE

gi|141921        60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVTGEKDQYICYVAYPLDLFEEGSVTNMFTSI
                 60 ||||||||||||||||||||||||||||||.|||||.|||||||||||||||||||||||
4                60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQCICYVAYPLDLFEEGSVTNMFTSI

gi|141921       120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL

gi|141921       180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL
                180 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL

gi|141921       240 NATAGTCEEMMKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV
                240 ||||||||||.|||||||||||||||||||||||||||||||||||||||||||||||||
4               240 NATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV

gi|141921       300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR

gi|141921       360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN

gi|141921       420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
                420 ||||||||||||||||||||||||||||||||||||||||||||||||||||| 473
4               420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
""",
            )
            hit = hits[6]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|671589|emb|CAA85676.1|")
            self.assertEqual(hit.target.name, "CAA85676")
            self.assertEqual(
                hit.target.description,
                "rubisco large subunit [Origanum laevigatum] >gi|671593|emb|CAA85677.1| rubisco large subunit [Origanum vulgare]",
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=473)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2525.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 977.237161471361)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 470)
            self.assertEqual(hsp.annotations["positive"], 471)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 473],
                          [  0, 473]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 473)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 473)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 473))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description, "gi|671626|emb|CAA85685.1| rubisco large subunit"
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.target.id, "gi|671589|emb|CAA85676.1|")
            self.assertEqual(hsp.target.name, "CAA85676")
            self.assertEqual(
                hsp.target.description,
                "rubisco large subunit [Origanum laevigatum] >gi|671593|emb|CAA85677.1| rubisco large subunit [Origanum vulgare]",
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAESSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQ ICYVAYPLDLFEEGSVTNMFTSIVGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGLSAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYLNATAGTCEEM+KRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAVIDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLG VDLLRDDFIEKDRSRGIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVANRVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|671589         0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4                 0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE

gi|671589        60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQYICYVAYPLDLFEEGSVTNMFTSI
                 60 ||||||||||||||||||||||||||||||||||||.|||||||||||||||||||||||
4                60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQCICYVAYPLDLFEEGSVTNMFTSI

gi|671589       120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL

gi|671589       180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL
                180 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL

gi|671589       240 NATAGTCEEMMKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV
                240 ||||||||||.|||||||||||||||||||||||||||||||||||||||||||||||||
4               240 NATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV

gi|671589       300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGLVDLLRDDFIEKDRSR
                300 ||||||||||||||||||||||||||||||||||||||||||||.|||||||||||||||
4               300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR

gi|671589       360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN

gi|671589       420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
                420 ||||||||||||||||||||||||||||||||||||||||||||||||||||| 473
4               420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
""",
            )
            hit = hits[7]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|1480419|emb|CAA85718.1|")
            self.assertEqual(hit.target.name, "CAA85718")
            self.assertEqual(
                hit.target.description, "rubisco large subunit [Thymus alsinoides]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=473)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2523.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 976.466762319526)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 470)
            self.assertEqual(hsp.annotations["positive"], 471)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 473],
                          [  0, 473]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 473)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 473)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 473))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description, "gi|671626|emb|CAA85685.1| rubisco large subunit"
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.target.id, "gi|1480419|emb|CAA85718.1|")
            self.assertEqual(hsp.target.name, "CAA85718")
            self.assertEqual(
                hsp.target.description, "rubisco large subunit [Thymus alsinoides]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAESSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQ ICYVAYPLDLFEEGSVTNMFTSIVGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGLSAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYLNATAGTCEEM+KRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAVIDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSRGIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDS LQFGGGTLGHPWGNAPGAVANRVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|148041         0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4                 0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE

gi|148041        60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQYICYVAYPLDLFEEGSVTNMFTSI
                 60 ||||||||||||||||||||||||||||||||||||.|||||||||||||||||||||||
4                60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQCICYVAYPLDLFEEGSVTNMFTSI

gi|148041       120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL

gi|148041       180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL
                180 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL

gi|148041       240 NATAGTCEEMMKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV
                240 ||||||||||.|||||||||||||||||||||||||||||||||||||||||||||||||
4               240 NATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV

gi|148041       300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR
                300 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR

gi|148041       360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSGLQFGGGTLGHPWGNAPGAVAN
                360 ||||||||||||||||||||||||||||||||||||||.|||||||||||||||||||||
4               360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN

gi|148041       420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
                420 ||||||||||||||||||||||||||||||||||||||||||||||||||||| 473
4               420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
""",
            )
            hit = hits[8]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|671624|emb|CAA85684.1|")
            self.assertEqual(hit.target.name, "CAA85684")
            self.assertEqual(
                hit.target.description, "rubisco large subunit [Rosmarinus officinalis]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=473)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2523.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 976.466762319526)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 469)
            self.assertEqual(hsp.annotations["positive"], 471)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 473],
                          [  0, 473]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 473)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 473)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 473))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description, "gi|671626|emb|CAA85685.1| rubisco large subunit"
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.target.id, "gi|671624|emb|CAA85684.1|")
            self.assertEqual(hsp.target.name, "CAA85684")
            self.assertEqual(
                hsp.target.description, "rubisco large subunit [Rosmarinus officinalis]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAESSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQ ICYVAYPLDLFEEGSVTNMFTSIVGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDK NKYGRPLLGCTIKPKLGLSAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYLNATAGTCEEM+KRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAVIDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGF+DLLRDDFIEKDRSRGIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVANRVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|671624         0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4                 0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE

gi|671624        60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQYICYVAYPLDLFEEGSVTNMFTSI
                 60 ||||||||||||||||||||||||||||||||||||.|||||||||||||||||||||||
4                60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQCICYVAYPLDLFEEGSVTNMFTSI

gi|671624       120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKSNKYGRPLLGCTIKPKLGL
                120 |||||||||||||||||||||||||||||||||||||||||.||||||||||||||||||
4               120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL

gi|671624       180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL
                180 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL

gi|671624       240 NATAGTCEEMMKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV
                240 ||||||||||.|||||||||||||||||||||||||||||||||||||||||||||||||
4               240 NATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV

gi|671624       300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFIDLLRDDFIEKDRSR
                300 |||||||||||||||||||||||||||||||||||||||||||||.||||||||||||||
4               300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR

gi|671624       360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN

gi|671624       420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
                420 ||||||||||||||||||||||||||||||||||||||||||||||||||||| 473
4               420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
""",
            )
            hit = hits[9]
            self.assertIsInstance(hit.target, SeqRecord)
            self.assertEqual(hit.target.id, "gi|1419211|emb|CAA85686.1|")
            self.assertEqual(hit.target.name, "CAA85686")
            self.assertEqual(
                hit.target.description, "rubisco large subunit [Salvia aethiopis]"
            )
            self.assertEqual(repr(hit.target.seq), "Seq(None, length=473)")
            self.assertEqual(len(hit), 1)
            hsp = hit[0]
            self.assertAlmostEqual(hsp.score, 2523.0)
            self.assertAlmostEqual(hsp.annotations["bit score"], 976.466762319526)
            self.assertAlmostEqual(hsp.annotations["evalue"], 0.0)
            self.assertEqual(hsp.annotations["identity"], 469)
            self.assertEqual(hsp.annotations["positive"], 471)
            self.assertEqual(hsp.annotations["gaps"], 0)
            self.assertTrue(
                np.array_equal(
                    hsp.coordinates,
                    # fmt: off
                    np.array([[  0, 473],
                          [  0, 473]])
                    # fmt: on
                )
            )
            self.assertEqual(hsp.query.annotations["start"], 0)
            self.assertEqual(hsp.query.annotations["end"], 473)
            self.assertEqual(hsp.query.annotations["frame"], 0)
            self.assertEqual(hsp.target.annotations["start"], 0)
            self.assertEqual(hsp.target.annotations["end"], 473)
            self.assertEqual(hsp.target.annotations["frame"], 0)
            self.assertEqual(hsp.shape, (2, 473))
            self.assertEqual(
                repr(hsp.query.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.query.id, "4")
            self.assertEqual(
                hsp.query.description, "gi|671626|emb|CAA85685.1| rubisco large subunit"
            )
            self.assertEqual(
                repr(hsp.target.seq),
                "Seq('MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAG...AMD')",
            )
            self.assertEqual(hsp.target.id, "gi|1419211|emb|CAA85686.1|")
            self.assertEqual(hsp.target.name, "CAA85686")
            self.assertEqual(
                hsp.target.description, "rubisco large subunit [Salvia aethiopis]"
            )
            self.assertEqual(
                hsp.annotations["midline"],
                "MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAESSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQ ICYVAYPLDLFEEGSVTNMFTSIVGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGLSAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYLNATAGTCEEM+KRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAVIDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDF+EKDRSRGIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVANRVAVEACV ARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD",
            )
            self.assertEqual(
                str(hsp),
                """\
gi|141921         0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE
                  0 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4                 0 MSPQTETKASVGFKAGVKEYKLTYYTPEYETKDTDILAAFRVTPQPGVPPEEAGAAVAAE

gi|141921        60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQYICYVAYPLDLFEEGSVTNMFTSI
                 60 ||||||||||||||||||||||||||||||||||||.|||||||||||||||||||||||
4                60 SSTGTWTTVWTDGLTSLDRYKGRCYHIEPVPGEKDQCICYVAYPLDLFEEGSVTNMFTSI

gi|141921       120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL
                120 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               120 VGNVFGFKALRALRLEDLRIPVAYVKTFQGPPHGIQVERDKLNKYGRPLLGCTIKPKLGL

gi|141921       180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL
                180 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               180 SAKNYGRAVYECLRGGLDFTKDDENVNSQPFMRWRDRFLFCAEAIYKAQAETGEIKGHYL

gi|141921       240 NATAGTCEEMMKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV
                240 ||||||||||.|||||||||||||||||||||||||||||||||||||||||||||||||
4               240 NATAGTCEEMIKRAIFARELGVPIVMHDYLTGGFTANTSLAHYCRDNGLLLHIHRAMHAV

gi|141921       300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFVEKDRSR
                300 |||||||||||||||||||||||||||||||||||||||||||||||||||||.||||||
4               300 IDRQKNHGMHFRVLAKALRLSGGDHIHSGTVVGKLEGERDITLGFVDLLRDDFIEKDRSR

gi|141921       360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN
                360 ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
4               360 GIYFTQDWVSLPGVIPVASGGIHVWHMPALTEIFGDDSVLQFGGGTLGHPWGNAPGAVAN

gi|141921       420 RVAVEACVLARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
                420 ||||||||.|||||||||||||||||||||||||||||||||||||||||||| 473
4               420 RVAVEACVKARNEGRDLAAEGNAIIREACKWSPELAAACEVWKEIKFEFPAMD 473
""",
            )


if __name__ == "__main__":
    runner = unittest.TextTestRunner(verbosity=2)
    unittest.main(testRunner=runner)
